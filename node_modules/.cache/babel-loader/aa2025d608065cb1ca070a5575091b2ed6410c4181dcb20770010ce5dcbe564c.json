{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vanitas\\\\Downloads\\\\tesskil\\\\src\\\\SearchMusic.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './SearchMusic.css'; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchMusic = ({\n  accessToken\n}) => {\n  _s();\n  const [trackId, setTrackId] = useState('0o9zmvc5f3EFApU52PPIyW'); // ID lagu default\n  const [searchQuery, setSearchQuery] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [trackDetails, setTrackDetails] = useState(null);\n  const [lyrics, setLyrics] = useState('');\n  const [albums, setAlbums] = useState([]); // State for albums\n  const lyricsRef = useRef(null);\n  useEffect(() => {\n    // Fetch albums on component mount\n    const fetchAlbums = async () => {\n      try {\n        const response = await axios.get('https://api.spotify.com/v1/albums', {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          },\n          params: {\n            limit: 10\n          }\n        });\n        setAlbums(response.data.items);\n      } catch (error) {\n        console.error('Error fetching albums:', error);\n      }\n    };\n    fetchAlbums();\n  }, [accessToken]);\n\n  // Search track on Spotify\n  const searchTrack = async query => {\n    try {\n      const response = await axios.get('https://api.spotify.com/v1/search', {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        },\n        params: {\n          q: query,\n          type: 'track',\n          limit: 5\n        }\n      });\n      if (response.data.tracks.items.length > 0) {\n        setSuggestions(response.data.tracks.items);\n      }\n    } catch (error) {\n      console.error('Error searching track:', error);\n    }\n  };\n\n  // Get track details\n  const getTrackDetails = async id => {\n    try {\n      const response = await axios.get(`https://api.spotify.com/v1/tracks/${id}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      setTrackDetails(response.data);\n      setTrackId(id);\n      getLyrics(response.data.name, response.data.artists[0].name);\n    } catch (error) {\n      console.error('Error getting track details:', error);\n    }\n  };\n\n  // Get lyrics\n  const getLyrics = async (trackName, artistName) => {\n    try {\n      const response = await axios.get(`https://api.lyrics.ovh/v1/${artistName}/${trackName}`);\n      setLyrics(response.data.lyrics);\n    } catch {\n      setLyrics('Lyrics not found.');\n    }\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    searchTrack(searchQuery);\n  };\n  const handleSuggestionClick = id => {\n    setTrackId(id);\n    setSuggestions([]);\n    getTrackDetails(id);\n  };\n  const handleTimeUpdate = e => {\n    const currentTime = e.target.currentTime;\n    const lyricsLines = lyricsRef.current.querySelectorAll('p');\n    lyricsLines.forEach((line, index) => {\n      const startTime = parseFloat(line.getAttribute('data-start'));\n      const endTime = parseFloat(line.getAttribute('data-end'));\n      if (currentTime >= startTime && currentTime <= endTime) {\n        line.classList.add('active');\n        line.scrollIntoView({\n          behavior: 'smooth',\n          block: 'center'\n        });\n      } else {\n        line.classList.remove('active');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spotify-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"angular-particles\",\n      children: [...Array(10)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"angular-particle\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spotify-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spotify-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSearch,\n          className: \"search-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            placeholder: \"Cari lagu di Spotify\",\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"search-button\",\n            children: \"Cari\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), \" Hasil Pencarian\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: suggestions.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleSuggestionClick(track.id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"suggestion-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: track.album.images[track.album.images.length - 1].url,\n                  alt: track.name,\n                  className: \"suggestion-thumbnail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"suggestion-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: track.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: track.artists.map(artist => artist.name).join(', ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this)\n            }, track.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spotify-right\",\n        children: [trackDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: trackDetails.album.images[0].url,\n              alt: trackDetails.name,\n              className: \"album-art\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: trackDetails.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Artist: \", trackDetails.artists.map(artist => artist.name).join(', ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Album: \", trackDetails.album.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Release Date: \", trackDetails.album.release_date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Popularity: \", trackDetails.popularity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spotify-embed\",\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              title: `Spotify track: ${trackDetails.name}` // Add unique title\n              ,\n              src: `https://open.spotify.com/embed/track/${trackId}?utm_source=generator`,\n              width: \"100%\",\n              height: \"180\",\n              frameBorder: \"0\",\n              allowFullScreen: \"\",\n              allow: \"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\",\n              loading: \"lazy\",\n              onTimeUpdate: handleTimeUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lyrics\",\n            ref: lyricsRef,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Lyrics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), lyrics.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              \"data-start\": index * 3,\n              \"data-end\": (index + 1) * 3,\n              children: line\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlist-section\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            title: \"Spotify Embed: Recommendation Playlist\",\n            src: `https://open.spotify.com/embed/playlist/7cAnOh7iI97WWaIB3ma7f9?utm_source=generator&theme=0`,\n            width: \"100%\",\n            height: \"400\",\n            frameBorder: \"0\",\n            allow: \"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\",\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"album-list\",\n          children: albums.map(album => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"album-item\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: album.images[0].url,\n              alt: album.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)\n          }, album.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchMusic, \"TEJCBdtATrRLdy37M+ix9TAZ1XE=\");\n_c = SearchMusic;\nexport default SearchMusic;\nvar _c;\n$RefreshReg$(_c, \"SearchMusic\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","SearchMusic","accessToken","_s","trackId","setTrackId","searchQuery","setSearchQuery","suggestions","setSuggestions","trackDetails","setTrackDetails","lyrics","setLyrics","albums","setAlbums","lyricsRef","fetchAlbums","response","get","headers","Authorization","params","limit","data","items","error","console","searchTrack","query","q","type","tracks","length","getTrackDetails","id","getLyrics","name","artists","trackName","artistName","handleSearch","e","preventDefault","handleSuggestionClick","handleTimeUpdate","currentTime","target","lyricsLines","current","querySelectorAll","forEach","line","index","startTime","parseFloat","getAttribute","endTime","classList","add","scrollIntoView","behavior","block","remove","className","children","Array","map","_","i","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","placeholder","track","onClick","src","album","images","url","alt","artist","join","release_date","popularity","title","width","height","frameBorder","allowFullScreen","allow","loading","onTimeUpdate","ref","split","_c","$RefreshReg$"],"sources":["C:/Users/vanitas/Downloads/tesskil/src/SearchMusic.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './SearchMusic.css'; // Import CSS file for styling\r\n\r\nconst SearchMusic = ({ accessToken }) => {\r\n  const [trackId, setTrackId] = useState('0o9zmvc5f3EFApU52PPIyW'); // ID lagu default\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [trackDetails, setTrackDetails] = useState(null);\r\n  const [lyrics, setLyrics] = useState('');\r\n  const [albums, setAlbums] = useState([]); // State for albums\r\n  const lyricsRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch albums on component mount\r\n    const fetchAlbums = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.spotify.com/v1/albums', {\r\n          headers: { Authorization: `Bearer ${accessToken}` },\r\n          params: { limit: 10 }\r\n        });\r\n        setAlbums(response.data.items);\r\n      } catch (error) {\r\n        console.error('Error fetching albums:', error);\r\n      }\r\n    };\r\n\r\n    fetchAlbums();\r\n  }, [accessToken]);\r\n\r\n  // Search track on Spotify\r\n  const searchTrack = async (query) => {\r\n    try {\r\n      const response = await axios.get('https://api.spotify.com/v1/search', {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n        params: { q: query, type: 'track', limit: 5 }\r\n      });\r\n      if (response.data.tracks.items.length > 0) {\r\n        setSuggestions(response.data.tracks.items);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error searching track:', error);\r\n    }\r\n  };\r\n\r\n  // Get track details\r\n  const getTrackDetails = async (id) => {\r\n    try {\r\n      const response = await axios.get(`https://api.spotify.com/v1/tracks/${id}`, {\r\n        headers: { Authorization: `Bearer ${accessToken}` }\r\n      });\r\n      setTrackDetails(response.data);\r\n      setTrackId(id);\r\n      getLyrics(response.data.name, response.data.artists[0].name);\r\n    } catch (error) {\r\n      console.error('Error getting track details:', error);\r\n    }\r\n  };\r\n\r\n  // Get lyrics\r\n  const getLyrics = async (trackName, artistName) => {\r\n    try {\r\n      const response = await axios.get(`https://api.lyrics.ovh/v1/${artistName}/${trackName}`);\r\n      setLyrics(response.data.lyrics);\r\n    } catch {\r\n      setLyrics('Lyrics not found.');\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    searchTrack(searchQuery);\r\n  };\r\n\r\n  const handleSuggestionClick = (id) => {\r\n    setTrackId(id);\r\n    setSuggestions([]);\r\n    getTrackDetails(id);\r\n  };\r\n\r\n  const handleTimeUpdate = (e) => {\r\n    const currentTime = e.target.currentTime;\r\n    const lyricsLines = lyricsRef.current.querySelectorAll('p');\r\n    lyricsLines.forEach((line, index) => {\r\n      const startTime = parseFloat(line.getAttribute('data-start'));\r\n      const endTime = parseFloat(line.getAttribute('data-end'));\r\n      if (currentTime >= startTime && currentTime <= endTime) {\r\n        line.classList.add('active');\r\n        line.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n      } else {\r\n        line.classList.remove('active');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"spotify-container\">\r\n      <div className=\"angular-particles\">\r\n        {[...Array(10)].map((_, i) => (\r\n          <div key={i} className=\"angular-particle\" />\r\n        ))}\r\n      </div>\r\n      <div className=\"spotify-card\">\r\n        <div className=\"spotify-left\">\r\n          <form onSubmit={handleSearch} className=\"search-form\">\r\n            <input\r\n              type=\"text\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              placeholder=\"Cari lagu di Spotify\"\r\n              className=\"search-input\"\r\n            />\r\n            <button type=\"submit\" className=\"search-button\">Cari</button>\r\n          </form>\r\n\r\n          {suggestions.length > 0 && (\r\n            <div className=\"suggestions\">\r\n              <p>\r\n                <i className=\"fas fa-search\"></i> Hasil Pencarian\r\n              </p>\r\n              <ul>\r\n                {suggestions.map((track) => (\r\n                  <li key={track.id} onClick={() => handleSuggestionClick(track.id)}>\r\n                    <div className=\"suggestion-item\">\r\n                      <img \r\n                        src={track.album.images[track.album.images.length - 1].url} \r\n                        alt={track.name}\r\n                        className=\"suggestion-thumbnail\"\r\n                      />\r\n                      <div className=\"suggestion-info\">\r\n                        <strong>{track.name}</strong>\r\n                        <span>{track.artists.map(artist => artist.name).join(', ')}</span>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"spotify-right\">\r\n          {trackDetails && (\r\n            <div className=\"track-details\">\r\n              <div className=\"track-info\">\r\n                <img src={trackDetails.album.images[0].url} alt={trackDetails.name} className=\"album-art\" />\r\n                <div className=\"track-meta\">\r\n                  <h2>{trackDetails.name}</h2>\r\n                  <p>Artist: {trackDetails.artists.map(artist => artist.name).join(', ')}</p>\r\n                  <p>Album: {trackDetails.album.name}</p>\r\n                  <p>Release Date: {trackDetails.album.release_date}</p>\r\n                  <p>Popularity: {trackDetails.popularity}</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"spotify-embed\">\r\n                <iframe\r\n                  title={`Spotify track: ${trackDetails.name}`} // Add unique title\r\n                  src={`https://open.spotify.com/embed/track/${trackId}?utm_source=generator`}\r\n                  width=\"100%\"\r\n                  height=\"180\"\r\n                  frameBorder=\"0\"\r\n                  allowFullScreen=\"\"\r\n                  allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\r\n                  loading=\"lazy\"\r\n                  onTimeUpdate={handleTimeUpdate}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"lyrics\" ref={lyricsRef}>\r\n                <h3>Lyrics</h3>\r\n                {lyrics.split('\\n').map((line, index) => (\r\n                  <p key={index} data-start={index * 3} data-end={(index + 1) * 3}>{line}</p>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"playlist-section\">\r\n            <iframe\r\n              title=\"Spotify Embed: Recommendation Playlist\"\r\n              src={`https://open.spotify.com/embed/playlist/7cAnOh7iI97WWaIB3ma7f9?utm_source=generator&theme=0`}\r\n              width=\"100%\"\r\n              height=\"400\"\r\n              frameBorder=\"0\"\r\n              allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\r\n              loading=\"lazy\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"album-list\">\r\n            {albums.map((album) => (\r\n              <div key={album.id} className=\"album-item\">\r\n                <img src={album.images[0].url} alt={album.name} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchMusic;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}