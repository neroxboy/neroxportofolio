{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OggParser = exports.SegmentTable = void 0;\nconst Token = require(\"token-types\");\nconst core_1 = require(\"strtok3/lib/core\");\nconst debug_1 = require(\"debug\");\nconst util = require(\"../common/Util\");\nconst FourCC_1 = require(\"../common/FourCC\");\nconst BasicParser_1 = require(\"../common/BasicParser\");\nconst VorbisParser_1 = require(\"./vorbis/VorbisParser\");\nconst OpusParser_1 = require(\"./opus/OpusParser\");\nconst SpeexParser_1 = require(\"./speex/SpeexParser\");\nconst TheoraParser_1 = require(\"./theora/TheoraParser\");\nconst debug = (0, debug_1.default)('music-metadata:parser:ogg');\nclass SegmentTable {\n  static sum(buf, off, len) {\n    let s = 0;\n    for (let i = off; i < off + len; ++i) {\n      s += buf[i];\n    }\n    return s;\n  }\n  constructor(header) {\n    this.len = header.page_segments;\n  }\n  get(buf, off) {\n    return {\n      totalPageSize: SegmentTable.sum(buf, off, this.len)\n    };\n  }\n}\nexports.SegmentTable = SegmentTable;\n/**\n * Parser for Ogg logical bitstream framing\n */\nclass OggParser extends BasicParser_1.BasicParser {\n  /**\n   * Parse page\n   * @returns {Promise<void>}\n   */\n  async parse() {\n    debug('pos=%s, parsePage()', this.tokenizer.position);\n    try {\n      let header;\n      do {\n        header = await this.tokenizer.readToken(OggParser.Header);\n        if (header.capturePattern !== 'OggS') throw new Error('Invalid Ogg capture pattern');\n        this.metadata.setFormat('container', 'Ogg');\n        this.header = header;\n        this.pageNumber = header.pageSequenceNo;\n        debug('page#=%s, Ogg.id=%s', header.pageSequenceNo, header.capturePattern);\n        const segmentTable = await this.tokenizer.readToken(new SegmentTable(header));\n        debug('totalPageSize=%s', segmentTable.totalPageSize);\n        const pageData = await this.tokenizer.readToken(new Token.Uint8ArrayType(segmentTable.totalPageSize));\n        debug('firstPage=%s, lastPage=%s, continued=%s', header.headerType.firstPage, header.headerType.lastPage, header.headerType.continued);\n        if (header.headerType.firstPage) {\n          const id = new Token.StringType(7, 'ascii').get(Buffer.from(pageData), 0);\n          switch (id) {\n            case '\\x01vorbis':\n              // Ogg/Vorbis\n              debug('Set page consumer to Ogg/Vorbis');\n              this.pageConsumer = new VorbisParser_1.VorbisParser(this.metadata, this.options);\n              break;\n            case 'OpusHea':\n              // Ogg/Opus\n              debug('Set page consumer to Ogg/Opus');\n              this.pageConsumer = new OpusParser_1.OpusParser(this.metadata, this.options, this.tokenizer);\n              break;\n            case 'Speex  ':\n              // Ogg/Speex\n              debug('Set page consumer to Ogg/Speex');\n              this.pageConsumer = new SpeexParser_1.SpeexParser(this.metadata, this.options, this.tokenizer);\n              break;\n            case 'fishead':\n            case '\\x00theora':\n              // Ogg/Theora\n              debug('Set page consumer to Ogg/Theora');\n              this.pageConsumer = new TheoraParser_1.TheoraParser(this.metadata, this.options, this.tokenizer);\n              break;\n            default:\n              throw new Error('gg audio-codec not recognized (id=' + id + ')');\n          }\n        }\n        this.pageConsumer.parsePage(header, pageData);\n      } while (!header.headerType.lastPage);\n    } catch (err) {\n      if (err instanceof core_1.EndOfStreamError) {\n        this.metadata.addWarning('Last OGG-page is not marked with last-page flag');\n        debug(`End-of-stream`);\n        this.metadata.addWarning('Last OGG-page is not marked with last-page flag');\n        if (this.header) {\n          this.pageConsumer.calculateDuration(this.header);\n        }\n      } else if (err.message.startsWith('FourCC')) {\n        if (this.pageNumber > 0) {\n          // ignore this error: work-around if last OGG-page is not marked with last-page flag\n          this.metadata.addWarning('Invalid FourCC ID, maybe last OGG-page is not marked with last-page flag');\n          this.pageConsumer.flush();\n        }\n      } else {\n        throw err;\n      }\n    }\n  }\n}\nOggParser.Header = {\n  len: 27,\n  get: (buf, off) => {\n    return {\n      capturePattern: FourCC_1.FourCcToken.get(buf, off),\n      version: Token.UINT8.get(buf, off + 4),\n      headerType: {\n        continued: util.getBit(buf, off + 5, 0),\n        firstPage: util.getBit(buf, off + 5, 1),\n        lastPage: util.getBit(buf, off + 5, 2)\n      },\n      // packet_flag: buf.readUInt8(off + 5),\n      absoluteGranulePosition: Number(Token.UINT64_LE.get(buf, off + 6)),\n      streamSerialNumber: Token.UINT32_LE.get(buf, off + 14),\n      pageSequenceNo: Token.UINT32_LE.get(buf, off + 18),\n      pageChecksum: Token.UINT32_LE.get(buf, off + 22),\n      page_segments: Token.UINT8.get(buf, off + 26)\n    };\n  }\n};\nexports.OggParser = OggParser;","map":{"version":3,"names":["Object","defineProperty","exports","value","OggParser","SegmentTable","Token","require","core_1","debug_1","util","FourCC_1","BasicParser_1","VorbisParser_1","OpusParser_1","SpeexParser_1","TheoraParser_1","debug","default","sum","buf","off","len","s","i","constructor","header","page_segments","get","totalPageSize","BasicParser","parse","tokenizer","position","readToken","Header","capturePattern","Error","metadata","setFormat","pageNumber","pageSequenceNo","segmentTable","pageData","Uint8ArrayType","headerType","firstPage","lastPage","continued","id","StringType","Buffer","from","pageConsumer","VorbisParser","options","OpusParser","SpeexParser","TheoraParser","parsePage","err","EndOfStreamError","addWarning","calculateDuration","message","startsWith","flush","FourCcToken","version","UINT8","getBit","absoluteGranulePosition","Number","UINT64_LE","streamSerialNumber","UINT32_LE","pageChecksum"],"sources":["C:/Users/vanitas/node_modules/music-metadata/lib/ogg/OggParser.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OggParser = exports.SegmentTable = void 0;\nconst Token = require(\"token-types\");\nconst core_1 = require(\"strtok3/lib/core\");\nconst debug_1 = require(\"debug\");\nconst util = require(\"../common/Util\");\nconst FourCC_1 = require(\"../common/FourCC\");\nconst BasicParser_1 = require(\"../common/BasicParser\");\nconst VorbisParser_1 = require(\"./vorbis/VorbisParser\");\nconst OpusParser_1 = require(\"./opus/OpusParser\");\nconst SpeexParser_1 = require(\"./speex/SpeexParser\");\nconst TheoraParser_1 = require(\"./theora/TheoraParser\");\nconst debug = (0, debug_1.default)('music-metadata:parser:ogg');\nclass SegmentTable {\n    static sum(buf, off, len) {\n        let s = 0;\n        for (let i = off; i < off + len; ++i) {\n            s += buf[i];\n        }\n        return s;\n    }\n    constructor(header) {\n        this.len = header.page_segments;\n    }\n    get(buf, off) {\n        return {\n            totalPageSize: SegmentTable.sum(buf, off, this.len)\n        };\n    }\n}\nexports.SegmentTable = SegmentTable;\n/**\n * Parser for Ogg logical bitstream framing\n */\nclass OggParser extends BasicParser_1.BasicParser {\n    /**\n     * Parse page\n     * @returns {Promise<void>}\n     */\n    async parse() {\n        debug('pos=%s, parsePage()', this.tokenizer.position);\n        try {\n            let header;\n            do {\n                header = await this.tokenizer.readToken(OggParser.Header);\n                if (header.capturePattern !== 'OggS')\n                    throw new Error('Invalid Ogg capture pattern');\n                this.metadata.setFormat('container', 'Ogg');\n                this.header = header;\n                this.pageNumber = header.pageSequenceNo;\n                debug('page#=%s, Ogg.id=%s', header.pageSequenceNo, header.capturePattern);\n                const segmentTable = await this.tokenizer.readToken(new SegmentTable(header));\n                debug('totalPageSize=%s', segmentTable.totalPageSize);\n                const pageData = await this.tokenizer.readToken(new Token.Uint8ArrayType(segmentTable.totalPageSize));\n                debug('firstPage=%s, lastPage=%s, continued=%s', header.headerType.firstPage, header.headerType.lastPage, header.headerType.continued);\n                if (header.headerType.firstPage) {\n                    const id = new Token.StringType(7, 'ascii').get(Buffer.from(pageData), 0);\n                    switch (id) {\n                        case '\\x01vorbis': // Ogg/Vorbis\n                            debug('Set page consumer to Ogg/Vorbis');\n                            this.pageConsumer = new VorbisParser_1.VorbisParser(this.metadata, this.options);\n                            break;\n                        case 'OpusHea': // Ogg/Opus\n                            debug('Set page consumer to Ogg/Opus');\n                            this.pageConsumer = new OpusParser_1.OpusParser(this.metadata, this.options, this.tokenizer);\n                            break;\n                        case 'Speex  ': // Ogg/Speex\n                            debug('Set page consumer to Ogg/Speex');\n                            this.pageConsumer = new SpeexParser_1.SpeexParser(this.metadata, this.options, this.tokenizer);\n                            break;\n                        case 'fishead':\n                        case '\\x00theora': // Ogg/Theora\n                            debug('Set page consumer to Ogg/Theora');\n                            this.pageConsumer = new TheoraParser_1.TheoraParser(this.metadata, this.options, this.tokenizer);\n                            break;\n                        default:\n                            throw new Error('gg audio-codec not recognized (id=' + id + ')');\n                    }\n                }\n                this.pageConsumer.parsePage(header, pageData);\n            } while (!header.headerType.lastPage);\n        }\n        catch (err) {\n            if (err instanceof core_1.EndOfStreamError) {\n                this.metadata.addWarning('Last OGG-page is not marked with last-page flag');\n                debug(`End-of-stream`);\n                this.metadata.addWarning('Last OGG-page is not marked with last-page flag');\n                if (this.header) {\n                    this.pageConsumer.calculateDuration(this.header);\n                }\n            }\n            else if (err.message.startsWith('FourCC')) {\n                if (this.pageNumber > 0) {\n                    // ignore this error: work-around if last OGG-page is not marked with last-page flag\n                    this.metadata.addWarning('Invalid FourCC ID, maybe last OGG-page is not marked with last-page flag');\n                    this.pageConsumer.flush();\n                }\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n}\nOggParser.Header = {\n    len: 27,\n    get: (buf, off) => {\n        return {\n            capturePattern: FourCC_1.FourCcToken.get(buf, off),\n            version: Token.UINT8.get(buf, off + 4),\n            headerType: {\n                continued: util.getBit(buf, off + 5, 0),\n                firstPage: util.getBit(buf, off + 5, 1),\n                lastPage: util.getBit(buf, off + 5, 2)\n            },\n            // packet_flag: buf.readUInt8(off + 5),\n            absoluteGranulePosition: Number(Token.UINT64_LE.get(buf, off + 6)),\n            streamSerialNumber: Token.UINT32_LE.get(buf, off + 14),\n            pageSequenceNo: Token.UINT32_LE.get(buf, off + 18),\n            pageChecksum: Token.UINT32_LE.get(buf, off + 22),\n            page_segments: Token.UINT8.get(buf, off + 26)\n        };\n    }\n};\nexports.OggParser = OggParser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}