{"ast":null,"code":"const curve = require('libsignal/src/curve');\nconst nodeCrypto = require('crypto');\nexports.generateSenderKey = function () {\n  return nodeCrypto.randomBytes(32);\n};\nexports.generateSenderKeyId = function () {\n  return nodeCrypto.randomInt(2147483647);\n};\nexports.generateSenderSigningKey = function (key) {\n  if (!key) {\n    key = curve.generateKeyPair();\n  }\n  return {\n    public: key.pubKey,\n    private: key.privKey\n  };\n};","map":{"version":3,"names":["curve","require","nodeCrypto","exports","generateSenderKey","randomBytes","generateSenderKeyId","randomInt","generateSenderSigningKey","key","generateKeyPair","public","pubKey","private","privKey"],"sources":["C:/Users/vanitas/node_modules/@whiskeysockets/baileys/WASignalGroup/keyhelper.js"],"sourcesContent":["const curve = require('libsignal/src/curve');\nconst nodeCrypto = require('crypto');\n\nexports.generateSenderKey = function() {\n    return nodeCrypto.randomBytes(32);\n}\n\nexports.generateSenderKeyId = function() {\n    return nodeCrypto.randomInt(2147483647);\n}\n\nexports.generateSenderSigningKey = function(key) {\n    if (!key) {\n        key = curve.generateKeyPair();\n    }\n\n    return {\n        public: key.pubKey,\n        private: key.privKey,\n    };\n} \n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC5C,MAAMC,UAAU,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAEpCE,OAAO,CAACC,iBAAiB,GAAG,YAAW;EACnC,OAAOF,UAAU,CAACG,WAAW,CAAC,EAAE,CAAC;AACrC,CAAC;AAEDF,OAAO,CAACG,mBAAmB,GAAG,YAAW;EACrC,OAAOJ,UAAU,CAACK,SAAS,CAAC,UAAU,CAAC;AAC3C,CAAC;AAEDJ,OAAO,CAACK,wBAAwB,GAAG,UAASC,GAAG,EAAE;EAC7C,IAAI,CAACA,GAAG,EAAE;IACNA,GAAG,GAAGT,KAAK,CAACU,eAAe,CAAC,CAAC;EACjC;EAEA,OAAO;IACHC,MAAM,EAAEF,GAAG,CAACG,MAAM;IAClBC,OAAO,EAAEJ,GAAG,CAACK;EACjB,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}