{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ListInfoTagValue = exports.Header = void 0;\nconst Token = require(\"token-types\");\n/**\n * Common RIFF chunk header\n */\nexports.Header = {\n  len: 8,\n  get: (buf, off) => {\n    return {\n      // Group-ID\n      chunkID: buf.toString('binary', off, off + 4),\n      // Size\n      chunkSize: Token.UINT32_LE.get(buf, 4)\n    };\n  }\n};\n/**\n * Token to parse RIFF-INFO tag value\n */\nclass ListInfoTagValue {\n  constructor(tagHeader) {\n    this.tagHeader = tagHeader;\n    this.len = tagHeader.chunkSize;\n    this.len += this.len & 1; // if it is an odd length, round up to even\n  }\n  get(buf, off) {\n    return new Token.StringType(this.tagHeader.chunkSize, 'ascii').get(buf, off);\n  }\n}\nexports.ListInfoTagValue = ListInfoTagValue;","map":{"version":3,"names":["Object","defineProperty","exports","value","ListInfoTagValue","Header","Token","require","len","get","buf","off","chunkID","toString","chunkSize","UINT32_LE","constructor","tagHeader","StringType"],"sources":["C:/Users/vanitas/node_modules/music-metadata/lib/riff/RiffChunk.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListInfoTagValue = exports.Header = void 0;\nconst Token = require(\"token-types\");\n/**\n * Common RIFF chunk header\n */\nexports.Header = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            // Group-ID\n            chunkID: buf.toString('binary', off, off + 4),\n            // Size\n            chunkSize: Token.UINT32_LE.get(buf, 4)\n        };\n    }\n};\n/**\n * Token to parse RIFF-INFO tag value\n */\nclass ListInfoTagValue {\n    constructor(tagHeader) {\n        this.tagHeader = tagHeader;\n        this.len = tagHeader.chunkSize;\n        this.len += this.len & 1; // if it is an odd length, round up to even\n    }\n    get(buf, off) {\n        return new Token.StringType(this.tagHeader.chunkSize, 'ascii').get(buf, off);\n    }\n}\nexports.ListInfoTagValue = ListInfoTagValue;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,gBAAgB,GAAGF,OAAO,CAACG,MAAM,GAAG,KAAK,CAAC;AAClD,MAAMC,KAAK,GAAGC,OAAO,CAAC,aAAa,CAAC;AACpC;AACA;AACA;AACAL,OAAO,CAACG,MAAM,GAAG;EACbG,GAAG,EAAE,CAAC;EACNC,GAAG,EAAEA,CAACC,GAAG,EAAEC,GAAG,KAAK;IACf,OAAO;MACH;MACAC,OAAO,EAAEF,GAAG,CAACG,QAAQ,CAAC,QAAQ,EAAEF,GAAG,EAAEA,GAAG,GAAG,CAAC,CAAC;MAC7C;MACAG,SAAS,EAAER,KAAK,CAACS,SAAS,CAACN,GAAG,CAACC,GAAG,EAAE,CAAC;IACzC,CAAC;EACL;AACJ,CAAC;AACD;AACA;AACA;AACA,MAAMN,gBAAgB,CAAC;EACnBY,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACT,GAAG,GAAGS,SAAS,CAACH,SAAS;IAC9B,IAAI,CAACN,GAAG,IAAI,IAAI,CAACA,GAAG,GAAG,CAAC,CAAC,CAAC;EAC9B;EACAC,GAAGA,CAACC,GAAG,EAAEC,GAAG,EAAE;IACV,OAAO,IAAIL,KAAK,CAACY,UAAU,CAAC,IAAI,CAACD,SAAS,CAACH,SAAS,EAAE,OAAO,CAAC,CAACL,GAAG,CAACC,GAAG,EAAEC,GAAG,CAAC;EAChF;AACJ;AACAT,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}