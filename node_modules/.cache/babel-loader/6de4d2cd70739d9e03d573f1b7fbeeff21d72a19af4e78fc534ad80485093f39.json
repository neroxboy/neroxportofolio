{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst debug_1 = require(\"debug\");\nconst Token = require(\"token-types\");\nconst AbstractID3Parser_1 = require(\"../id3v2/AbstractID3Parser\");\nconst MpcSv8Parser_1 = require(\"./sv8/MpcSv8Parser\");\nconst MpcSv7Parser_1 = require(\"./sv7/MpcSv7Parser\");\nconst debug = (0, debug_1.default)('music-metadata:parser:musepack');\nclass MusepackParser extends AbstractID3Parser_1.AbstractID3Parser {\n  async postId3v2Parse() {\n    const signature = await this.tokenizer.peekToken(new Token.StringType(3, 'binary'));\n    let mpcParser;\n    switch (signature) {\n      case 'MP+':\n        {\n          debug('Musepack stream-version 7');\n          mpcParser = new MpcSv7Parser_1.MpcSv7Parser();\n          break;\n        }\n      case 'MPC':\n        {\n          debug('Musepack stream-version 8');\n          mpcParser = new MpcSv8Parser_1.MpcSv8Parser();\n          break;\n        }\n      default:\n        {\n          throw new Error('Invalid Musepack signature prefix');\n        }\n    }\n    mpcParser.init(this.metadata, this.tokenizer, this.options);\n    return mpcParser.parse();\n  }\n}\nexports.default = MusepackParser;","map":{"version":3,"names":["Object","defineProperty","exports","value","debug_1","require","Token","AbstractID3Parser_1","MpcSv8Parser_1","MpcSv7Parser_1","debug","default","MusepackParser","AbstractID3Parser","postId3v2Parse","signature","tokenizer","peekToken","StringType","mpcParser","MpcSv7Parser","MpcSv8Parser","Error","init","metadata","options","parse"],"sources":["C:/Users/vanitas/node_modules/music-metadata/lib/musepack/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst debug_1 = require(\"debug\");\nconst Token = require(\"token-types\");\nconst AbstractID3Parser_1 = require(\"../id3v2/AbstractID3Parser\");\nconst MpcSv8Parser_1 = require(\"./sv8/MpcSv8Parser\");\nconst MpcSv7Parser_1 = require(\"./sv7/MpcSv7Parser\");\nconst debug = (0, debug_1.default)('music-metadata:parser:musepack');\nclass MusepackParser extends AbstractID3Parser_1.AbstractID3Parser {\n    async postId3v2Parse() {\n        const signature = await this.tokenizer.peekToken(new Token.StringType(3, 'binary'));\n        let mpcParser;\n        switch (signature) {\n            case 'MP+': {\n                debug('Musepack stream-version 7');\n                mpcParser = new MpcSv7Parser_1.MpcSv7Parser();\n                break;\n            }\n            case 'MPC': {\n                debug('Musepack stream-version 8');\n                mpcParser = new MpcSv8Parser_1.MpcSv8Parser();\n                break;\n            }\n            default: {\n                throw new Error('Invalid Musepack signature prefix');\n            }\n        }\n        mpcParser.init(this.metadata, this.tokenizer, this.options);\n        return mpcParser.parse();\n    }\n}\nexports.default = MusepackParser;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAO,CAAC;AAChC,MAAMC,KAAK,GAAGD,OAAO,CAAC,aAAa,CAAC;AACpC,MAAME,mBAAmB,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AACjE,MAAMG,cAAc,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AACpD,MAAMI,cAAc,GAAGJ,OAAO,CAAC,oBAAoB,CAAC;AACpD,MAAMK,KAAK,GAAG,CAAC,CAAC,EAAEN,OAAO,CAACO,OAAO,EAAE,gCAAgC,CAAC;AACpE,MAAMC,cAAc,SAASL,mBAAmB,CAACM,iBAAiB,CAAC;EAC/D,MAAMC,cAAcA,CAAA,EAAG;IACnB,MAAMC,SAAS,GAAG,MAAM,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,IAAIX,KAAK,CAACY,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACnF,IAAIC,SAAS;IACb,QAAQJ,SAAS;MACb,KAAK,KAAK;QAAE;UACRL,KAAK,CAAC,2BAA2B,CAAC;UAClCS,SAAS,GAAG,IAAIV,cAAc,CAACW,YAAY,CAAC,CAAC;UAC7C;QACJ;MACA,KAAK,KAAK;QAAE;UACRV,KAAK,CAAC,2BAA2B,CAAC;UAClCS,SAAS,GAAG,IAAIX,cAAc,CAACa,YAAY,CAAC,CAAC;UAC7C;QACJ;MACA;QAAS;UACL,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;QACxD;IACJ;IACAH,SAAS,CAACI,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACR,SAAS,EAAE,IAAI,CAACS,OAAO,CAAC;IAC3D,OAAON,SAAS,CAACO,KAAK,CAAC,CAAC;EAC5B;AACJ;AACAxB,OAAO,CAACS,OAAO,GAAGC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}