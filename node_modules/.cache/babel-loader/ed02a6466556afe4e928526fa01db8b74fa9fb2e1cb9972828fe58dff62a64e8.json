{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BroadcastAudioExtensionChunk = void 0;\nconst Token = require(\"token-types\");\nconst Util_1 = require(\"../common/Util\");\n/**\n * Broadcast Audio Extension Chunk\n * Ref: https://tech.ebu.ch/docs/tech/tech3285.pdf\n */\nexports.BroadcastAudioExtensionChunk = {\n  len: 420,\n  get: (uint8array, off) => {\n    return {\n      description: (0, Util_1.stripNulls)(new Token.StringType(256, 'ascii').get(uint8array, off)).trim(),\n      originator: (0, Util_1.stripNulls)(new Token.StringType(32, 'ascii').get(uint8array, off + 256)).trim(),\n      originatorReference: (0, Util_1.stripNulls)(new Token.StringType(32, 'ascii').get(uint8array, off + 288)).trim(),\n      originationDate: (0, Util_1.stripNulls)(new Token.StringType(10, 'ascii').get(uint8array, off + 320)).trim(),\n      originationTime: (0, Util_1.stripNulls)(new Token.StringType(8, 'ascii').get(uint8array, off + 330)).trim(),\n      timeReferenceLow: Token.UINT32_LE.get(uint8array, off + 338),\n      timeReferenceHigh: Token.UINT32_LE.get(uint8array, off + 342),\n      version: Token.UINT16_LE.get(uint8array, off + 346),\n      umid: new Token.Uint8ArrayType(64).get(uint8array, off + 348),\n      loudnessValue: Token.UINT16_LE.get(uint8array, off + 412),\n      maxTruePeakLevel: Token.UINT16_LE.get(uint8array, off + 414),\n      maxMomentaryLoudness: Token.UINT16_LE.get(uint8array, off + 416),\n      maxShortTermLoudness: Token.UINT16_LE.get(uint8array, off + 418)\n    };\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","BroadcastAudioExtensionChunk","Token","require","Util_1","len","get","uint8array","off","description","stripNulls","StringType","trim","originator","originatorReference","originationDate","originationTime","timeReferenceLow","UINT32_LE","timeReferenceHigh","version","UINT16_LE","umid","Uint8ArrayType","loudnessValue","maxTruePeakLevel","maxMomentaryLoudness","maxShortTermLoudness"],"sources":["C:/Users/vanitas/node_modules/music-metadata/lib/wav/BwfChunk.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BroadcastAudioExtensionChunk = void 0;\nconst Token = require(\"token-types\");\nconst Util_1 = require(\"../common/Util\");\n/**\n * Broadcast Audio Extension Chunk\n * Ref: https://tech.ebu.ch/docs/tech/tech3285.pdf\n */\nexports.BroadcastAudioExtensionChunk = {\n    len: 420,\n    get: (uint8array, off) => {\n        return {\n            description: (0, Util_1.stripNulls)(new Token.StringType(256, 'ascii').get(uint8array, off)).trim(),\n            originator: (0, Util_1.stripNulls)(new Token.StringType(32, 'ascii').get(uint8array, off + 256)).trim(),\n            originatorReference: (0, Util_1.stripNulls)(new Token.StringType(32, 'ascii').get(uint8array, off + 288)).trim(),\n            originationDate: (0, Util_1.stripNulls)(new Token.StringType(10, 'ascii').get(uint8array, off + 320)).trim(),\n            originationTime: (0, Util_1.stripNulls)(new Token.StringType(8, 'ascii').get(uint8array, off + 330)).trim(),\n            timeReferenceLow: Token.UINT32_LE.get(uint8array, off + 338),\n            timeReferenceHigh: Token.UINT32_LE.get(uint8array, off + 342),\n            version: Token.UINT16_LE.get(uint8array, off + 346),\n            umid: new Token.Uint8ArrayType(64).get(uint8array, off + 348),\n            loudnessValue: Token.UINT16_LE.get(uint8array, off + 412),\n            maxTruePeakLevel: Token.UINT16_LE.get(uint8array, off + 414),\n            maxMomentaryLoudness: Token.UINT16_LE.get(uint8array, off + 416),\n            maxShortTermLoudness: Token.UINT16_LE.get(uint8array, off + 418)\n        };\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,4BAA4B,GAAG,KAAK,CAAC;AAC7C,MAAMC,KAAK,GAAGC,OAAO,CAAC,aAAa,CAAC;AACpC,MAAMC,MAAM,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACxC;AACA;AACA;AACA;AACAJ,OAAO,CAACE,4BAA4B,GAAG;EACnCI,GAAG,EAAE,GAAG;EACRC,GAAG,EAAEA,CAACC,UAAU,EAAEC,GAAG,KAAK;IACtB,OAAO;MACHC,WAAW,EAAE,CAAC,CAAC,EAAEL,MAAM,CAACM,UAAU,EAAE,IAAIR,KAAK,CAACS,UAAU,CAAC,GAAG,EAAE,OAAO,CAAC,CAACL,GAAG,CAACC,UAAU,EAAEC,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC;MACnGC,UAAU,EAAE,CAAC,CAAC,EAAET,MAAM,CAACM,UAAU,EAAE,IAAIR,KAAK,CAACS,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAACL,GAAG,CAACC,UAAU,EAAEC,GAAG,GAAG,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC;MACvGE,mBAAmB,EAAE,CAAC,CAAC,EAAEV,MAAM,CAACM,UAAU,EAAE,IAAIR,KAAK,CAACS,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAACL,GAAG,CAACC,UAAU,EAAEC,GAAG,GAAG,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC;MAChHG,eAAe,EAAE,CAAC,CAAC,EAAEX,MAAM,CAACM,UAAU,EAAE,IAAIR,KAAK,CAACS,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAACL,GAAG,CAACC,UAAU,EAAEC,GAAG,GAAG,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC;MAC5GI,eAAe,EAAE,CAAC,CAAC,EAAEZ,MAAM,CAACM,UAAU,EAAE,IAAIR,KAAK,CAACS,UAAU,CAAC,CAAC,EAAE,OAAO,CAAC,CAACL,GAAG,CAACC,UAAU,EAAEC,GAAG,GAAG,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC;MAC3GK,gBAAgB,EAAEf,KAAK,CAACgB,SAAS,CAACZ,GAAG,CAACC,UAAU,EAAEC,GAAG,GAAG,GAAG,CAAC;MAC5DW,iBAAiB,EAAEjB,KAAK,CAACgB,SAAS,CAACZ,GAAG,CAACC,UAAU,EAAEC,GAAG,GAAG,GAAG,CAAC;MAC7DY,OAAO,EAAElB,KAAK,CAACmB,SAAS,CAACf,GAAG,CAACC,UAAU,EAAEC,GAAG,GAAG,GAAG,CAAC;MACnDc,IAAI,EAAE,IAAIpB,KAAK,CAACqB,cAAc,CAAC,EAAE,CAAC,CAACjB,GAAG,CAACC,UAAU,EAAEC,GAAG,GAAG,GAAG,CAAC;MAC7DgB,aAAa,EAAEtB,KAAK,CAACmB,SAAS,CAACf,GAAG,CAACC,UAAU,EAAEC,GAAG,GAAG,GAAG,CAAC;MACzDiB,gBAAgB,EAAEvB,KAAK,CAACmB,SAAS,CAACf,GAAG,CAACC,UAAU,EAAEC,GAAG,GAAG,GAAG,CAAC;MAC5DkB,oBAAoB,EAAExB,KAAK,CAACmB,SAAS,CAACf,GAAG,CAACC,UAAU,EAAEC,GAAG,GAAG,GAAG,CAAC;MAChEmB,oBAAoB,EAAEzB,KAAK,CAACmB,SAAS,CAACf,GAAG,CAACC,UAAU,EAAEC,GAAG,GAAG,GAAG;IACnE,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}