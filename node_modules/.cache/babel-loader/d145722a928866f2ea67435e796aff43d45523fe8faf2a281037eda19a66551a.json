{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TheoraParser = void 0;\nconst debug_1 = require(\"debug\");\nconst Theora_1 = require(\"./Theora\");\nconst debug = (0, debug_1.default)('music-metadata:parser:ogg:theora');\n/**\n * Ref:\n * - https://theora.org/doc/Theora.pdf\n */\nclass TheoraParser {\n  constructor(metadata, options, tokenizer) {\n    this.metadata = metadata;\n    this.tokenizer = tokenizer;\n  }\n  /**\n   * Vorbis 1 parser\n   * @param header Ogg Page Header\n   * @param pageData Page data\n   */\n  parsePage(header, pageData) {\n    if (header.headerType.firstPage) {\n      this.parseFirstPage(header, pageData);\n    }\n  }\n  flush() {\n    debug('flush');\n  }\n  calculateDuration(header) {\n    debug('duration calculation not implemented');\n  }\n  /**\n   * Parse first Theora Ogg page. the initial identification header packet\n   * @param {IPageHeader} header\n   * @param {Buffer} pageData\n   */\n  parseFirstPage(header, pageData) {\n    debug('First Ogg/Theora page');\n    this.metadata.setFormat('codec', 'Theora');\n    const idHeader = Theora_1.IdentificationHeader.get(pageData, 0);\n    this.metadata.setFormat('bitrate', idHeader.nombr);\n  }\n}\nexports.TheoraParser = TheoraParser;","map":{"version":3,"names":["Object","defineProperty","exports","value","TheoraParser","debug_1","require","Theora_1","debug","default","constructor","metadata","options","tokenizer","parsePage","header","pageData","headerType","firstPage","parseFirstPage","flush","calculateDuration","setFormat","idHeader","IdentificationHeader","get","nombr"],"sources":["C:/Users/vanitas/node_modules/music-metadata/lib/ogg/theora/TheoraParser.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TheoraParser = void 0;\nconst debug_1 = require(\"debug\");\nconst Theora_1 = require(\"./Theora\");\nconst debug = (0, debug_1.default)('music-metadata:parser:ogg:theora');\n/**\n * Ref:\n * - https://theora.org/doc/Theora.pdf\n */\nclass TheoraParser {\n    constructor(metadata, options, tokenizer) {\n        this.metadata = metadata;\n        this.tokenizer = tokenizer;\n    }\n    /**\n     * Vorbis 1 parser\n     * @param header Ogg Page Header\n     * @param pageData Page data\n     */\n    parsePage(header, pageData) {\n        if (header.headerType.firstPage) {\n            this.parseFirstPage(header, pageData);\n        }\n    }\n    flush() {\n        debug('flush');\n    }\n    calculateDuration(header) {\n        debug('duration calculation not implemented');\n    }\n    /**\n     * Parse first Theora Ogg page. the initial identification header packet\n     * @param {IPageHeader} header\n     * @param {Buffer} pageData\n     */\n    parseFirstPage(header, pageData) {\n        debug('First Ogg/Theora page');\n        this.metadata.setFormat('codec', 'Theora');\n        const idHeader = Theora_1.IdentificationHeader.get(pageData, 0);\n        this.metadata.setFormat('bitrate', idHeader.nombr);\n    }\n}\nexports.TheoraParser = TheoraParser;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAO,CAAC;AAChC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AACpC,MAAME,KAAK,GAAG,CAAC,CAAC,EAAEH,OAAO,CAACI,OAAO,EAAE,kCAAkC,CAAC;AACtE;AACA;AACA;AACA;AACA,MAAML,YAAY,CAAC;EACfM,WAAWA,CAACC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,EAAE;IACtC,IAAI,CAACF,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACE,SAAS,GAAGA,SAAS;EAC9B;EACA;AACJ;AACA;AACA;AACA;EACIC,SAASA,CAACC,MAAM,EAAEC,QAAQ,EAAE;IACxB,IAAID,MAAM,CAACE,UAAU,CAACC,SAAS,EAAE;MAC7B,IAAI,CAACC,cAAc,CAACJ,MAAM,EAAEC,QAAQ,CAAC;IACzC;EACJ;EACAI,KAAKA,CAAA,EAAG;IACJZ,KAAK,CAAC,OAAO,CAAC;EAClB;EACAa,iBAAiBA,CAACN,MAAM,EAAE;IACtBP,KAAK,CAAC,sCAAsC,CAAC;EACjD;EACA;AACJ;AACA;AACA;AACA;EACIW,cAAcA,CAACJ,MAAM,EAAEC,QAAQ,EAAE;IAC7BR,KAAK,CAAC,uBAAuB,CAAC;IAC9B,IAAI,CAACG,QAAQ,CAACW,SAAS,CAAC,OAAO,EAAE,QAAQ,CAAC;IAC1C,MAAMC,QAAQ,GAAGhB,QAAQ,CAACiB,oBAAoB,CAACC,GAAG,CAACT,QAAQ,EAAE,CAAC,CAAC;IAC/D,IAAI,CAACL,QAAQ,CAACW,SAAS,CAAC,SAAS,EAAEC,QAAQ,CAACG,KAAK,CAAC;EACtD;AACJ;AACAxB,OAAO,CAACE,YAAY,GAAGA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}