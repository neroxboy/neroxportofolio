{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Atom = void 0;\nconst debug_1 = require(\"debug\");\nconst AtomToken = require(\"./AtomToken\");\nconst debug = (0, debug_1.default)('music-metadata:parser:MP4:Atom');\nclass Atom {\n  static async readAtom(tokenizer, dataHandler, parent, remaining) {\n    // Parse atom header\n    const offset = tokenizer.position;\n    // debug(`Reading next token on offset=${offset}...`); //  buf.toString('ascii')\n    const header = await tokenizer.readToken(AtomToken.Header);\n    const extended = header.length === BigInt(1);\n    if (extended) {\n      header.length = await tokenizer.readToken(AtomToken.ExtendedSize);\n    }\n    const atomBean = new Atom(header, header.length === BigInt(1), parent);\n    const payloadLength = atomBean.getPayloadLength(remaining);\n    debug(`parse atom name=${atomBean.atomPath}, extended=${atomBean.extended}, offset=${offset}, len=${atomBean.header.length}`); //  buf.toString('ascii')\n    await atomBean.readData(tokenizer, dataHandler, payloadLength);\n    return atomBean;\n  }\n  constructor(header, extended, parent) {\n    this.header = header;\n    this.extended = extended;\n    this.parent = parent;\n    this.children = [];\n    this.atomPath = (this.parent ? this.parent.atomPath + '.' : '') + this.header.name;\n  }\n  getHeaderLength() {\n    return this.extended ? 16 : 8;\n  }\n  getPayloadLength(remaining) {\n    return (this.header.length === BigInt(0) ? remaining : Number(this.header.length)) - this.getHeaderLength();\n  }\n  async readAtoms(tokenizer, dataHandler, size) {\n    while (size > 0) {\n      const atomBean = await Atom.readAtom(tokenizer, dataHandler, this, size);\n      this.children.push(atomBean);\n      size -= atomBean.header.length === BigInt(0) ? size : Number(atomBean.header.length);\n    }\n  }\n  async readData(tokenizer, dataHandler, remaining) {\n    switch (this.header.name) {\n      // \"Container\" atoms, contains nested atoms\n      case 'moov': // The Movie Atom: contains other atoms\n      case 'udta': // User defined atom\n      case 'trak':\n      case 'mdia': // Media atom\n      case 'minf': // Media Information Atom\n      case 'stbl': // The Sample Table Atom\n      case '<id>':\n      case 'ilst':\n      case 'tref':\n        return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength(remaining));\n      case 'meta':\n        // Metadata Atom, ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW8\n        // meta has 4 bytes of padding, ignore\n        const peekHeader = await tokenizer.peekToken(AtomToken.Header);\n        const paddingLength = peekHeader.name === 'hdlr' ? 0 : 4;\n        await tokenizer.ignore(paddingLength);\n        return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength(remaining) - paddingLength);\n      case 'mdhd': // Media header atom\n      case 'mvhd': // 'movie' => 'mvhd': movie header atom; child of Movie Atom\n      case 'tkhd':\n      case 'stsz':\n      case 'mdat':\n      default:\n        return dataHandler(this, remaining);\n    }\n  }\n}\nexports.Atom = Atom;","map":{"version":3,"names":["Object","defineProperty","exports","value","Atom","debug_1","require","AtomToken","debug","default","readAtom","tokenizer","dataHandler","parent","remaining","offset","position","header","readToken","Header","extended","length","BigInt","ExtendedSize","atomBean","payloadLength","getPayloadLength","atomPath","readData","constructor","children","name","getHeaderLength","Number","readAtoms","size","push","peekHeader","peekToken","paddingLength","ignore"],"sources":["C:/Users/vanitas/node_modules/music-metadata/lib/mp4/Atom.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Atom = void 0;\nconst debug_1 = require(\"debug\");\nconst AtomToken = require(\"./AtomToken\");\nconst debug = (0, debug_1.default)('music-metadata:parser:MP4:Atom');\nclass Atom {\n    static async readAtom(tokenizer, dataHandler, parent, remaining) {\n        // Parse atom header\n        const offset = tokenizer.position;\n        // debug(`Reading next token on offset=${offset}...`); //  buf.toString('ascii')\n        const header = await tokenizer.readToken(AtomToken.Header);\n        const extended = header.length === BigInt(1);\n        if (extended) {\n            header.length = await tokenizer.readToken(AtomToken.ExtendedSize);\n        }\n        const atomBean = new Atom(header, header.length === BigInt(1), parent);\n        const payloadLength = atomBean.getPayloadLength(remaining);\n        debug(`parse atom name=${atomBean.atomPath}, extended=${atomBean.extended}, offset=${offset}, len=${atomBean.header.length}`); //  buf.toString('ascii')\n        await atomBean.readData(tokenizer, dataHandler, payloadLength);\n        return atomBean;\n    }\n    constructor(header, extended, parent) {\n        this.header = header;\n        this.extended = extended;\n        this.parent = parent;\n        this.children = [];\n        this.atomPath = (this.parent ? this.parent.atomPath + '.' : '') + this.header.name;\n    }\n    getHeaderLength() {\n        return this.extended ? 16 : 8;\n    }\n    getPayloadLength(remaining) {\n        return (this.header.length === BigInt(0) ? remaining : Number(this.header.length)) - this.getHeaderLength();\n    }\n    async readAtoms(tokenizer, dataHandler, size) {\n        while (size > 0) {\n            const atomBean = await Atom.readAtom(tokenizer, dataHandler, this, size);\n            this.children.push(atomBean);\n            size -= atomBean.header.length === BigInt(0) ? size : Number(atomBean.header.length);\n        }\n    }\n    async readData(tokenizer, dataHandler, remaining) {\n        switch (this.header.name) {\n            // \"Container\" atoms, contains nested atoms\n            case 'moov': // The Movie Atom: contains other atoms\n            case 'udta': // User defined atom\n            case 'trak':\n            case 'mdia': // Media atom\n            case 'minf': // Media Information Atom\n            case 'stbl': // The Sample Table Atom\n            case '<id>':\n            case 'ilst':\n            case 'tref':\n                return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength(remaining));\n            case 'meta': // Metadata Atom, ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW8\n                // meta has 4 bytes of padding, ignore\n                const peekHeader = await tokenizer.peekToken(AtomToken.Header);\n                const paddingLength = peekHeader.name === 'hdlr' ? 0 : 4;\n                await tokenizer.ignore(paddingLength);\n                return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength(remaining) - paddingLength);\n            case 'mdhd': // Media header atom\n            case 'mvhd': // 'movie' => 'mvhd': movie header atom; child of Movie Atom\n            case 'tkhd':\n            case 'stsz':\n            case 'mdat':\n            default:\n                return dataHandler(this, remaining);\n        }\n    }\n}\nexports.Atom = Atom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}