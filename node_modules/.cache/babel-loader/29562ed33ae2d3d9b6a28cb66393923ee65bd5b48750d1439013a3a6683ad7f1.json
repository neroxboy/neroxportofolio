{"ast":null,"code":"/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { codec, mpeg, fixedLengthFrameSync, parseFrame } from \"../../constants.js\";\nimport Parser from \"../Parser.js\";\nimport MPEGFrame from \"./MPEGFrame.js\";\nimport MPEGHeader from \"./MPEGHeader.js\";\nexport default class MPEGParser extends Parser {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n    this.Frame = MPEGFrame;\n    this.Header = MPEGHeader;\n    onCodec(this[codec]);\n  }\n  get [codec]() {\n    return mpeg;\n  }\n  *[parseFrame]() {\n    return yield* this[fixedLengthFrameSync]();\n  }\n}","map":{"version":3,"names":["codec","mpeg","fixedLengthFrameSync","parseFrame","Parser","MPEGFrame","MPEGHeader","MPEGParser","constructor","codecParser","headerCache","onCodec","Frame","Header"],"sources":["C:/Users/vanitas/node_modules/codec-parser/src/codecs/mpeg/MPEGParser.js"],"sourcesContent":["/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport {\n  codec,\n  mpeg,\n  fixedLengthFrameSync,\n  parseFrame,\n} from \"../../constants.js\";\n\nimport Parser from \"../Parser.js\";\nimport MPEGFrame from \"./MPEGFrame.js\";\nimport MPEGHeader from \"./MPEGHeader.js\";\n\nexport default class MPEGParser extends Parser {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n    this.Frame = MPEGFrame;\n    this.Header = MPEGHeader;\n\n    onCodec(this[codec]);\n  }\n\n  get [codec]() {\n    return mpeg;\n  }\n\n  *[parseFrame]() {\n    return yield* this[fixedLengthFrameSync]();\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACEA,KAAK,EACLC,IAAI,EACJC,oBAAoB,EACpBC,UAAU,QACL,oBAAoB;AAE3B,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,UAAU,MAAM,iBAAiB;AAExC,eAAe,MAAMC,UAAU,SAASH,MAAM,CAAC;EAC7CI,WAAWA,CAACC,WAAW,EAAEC,WAAW,EAAEC,OAAO,EAAE;IAC7C,KAAK,CAACF,WAAW,EAAEC,WAAW,CAAC;IAC/B,IAAI,CAACE,KAAK,GAAGP,SAAS;IACtB,IAAI,CAACQ,MAAM,GAAGP,UAAU;IAExBK,OAAO,CAAC,IAAI,CAACX,KAAK,CAAC,CAAC;EACtB;EAEA,KAAKA,KAAK,IAAI;IACZ,OAAOC,IAAI;EACb;EAEA,EAAEE,UAAU,IAAI;IACd,OAAO,OAAO,IAAI,CAACD,oBAAoB,CAAC,CAAC,CAAC;EAC5C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}