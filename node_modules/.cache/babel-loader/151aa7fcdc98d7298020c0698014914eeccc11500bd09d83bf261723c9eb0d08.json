{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OpusParser = void 0;\nconst Token = require(\"token-types\");\nconst VorbisParser_1 = require(\"../vorbis/VorbisParser\");\nconst Opus = require(\"./Opus\");\n/**\n * Opus parser\n * Internet Engineering Task Force (IETF) - RFC 6716\n * Used by OggParser\n */\nclass OpusParser extends VorbisParser_1.VorbisParser {\n  constructor(metadata, options, tokenizer) {\n    super(metadata, options);\n    this.tokenizer = tokenizer;\n    this.lastPos = -1;\n  }\n  /**\n   * Parse first Opus Ogg page\n   * @param {IPageHeader} header\n   * @param {Buffer} pageData\n   */\n  parseFirstPage(header, pageData) {\n    this.metadata.setFormat('codec', 'Opus');\n    // Parse Opus ID Header\n    this.idHeader = new Opus.IdHeader(pageData.length).get(pageData, 0);\n    if (this.idHeader.magicSignature !== \"OpusHead\") throw new Error(\"Illegal ogg/Opus magic-signature\");\n    this.metadata.setFormat('sampleRate', this.idHeader.inputSampleRate);\n    this.metadata.setFormat('numberOfChannels', this.idHeader.channelCount);\n  }\n  parseFullPage(pageData) {\n    const magicSignature = new Token.StringType(8, 'ascii').get(pageData, 0);\n    switch (magicSignature) {\n      case 'OpusTags':\n        this.parseUserCommentList(pageData, 8);\n        this.lastPos = this.tokenizer.position - pageData.length;\n        break;\n      default:\n        break;\n    }\n  }\n  calculateDuration(header) {\n    if (this.metadata.format.sampleRate && header.absoluteGranulePosition >= 0) {\n      // Calculate duration\n      const pos_48bit = header.absoluteGranulePosition - this.idHeader.preSkip;\n      this.metadata.setFormat('numberOfSamples', pos_48bit);\n      this.metadata.setFormat('duration', pos_48bit / 48000);\n      if (this.lastPos !== -1 && this.tokenizer.fileInfo.size && this.metadata.format.duration) {\n        const dataSize = this.tokenizer.fileInfo.size - this.lastPos;\n        this.metadata.setFormat('bitrate', 8 * dataSize / this.metadata.format.duration);\n      }\n    }\n  }\n}\nexports.OpusParser = OpusParser;","map":{"version":3,"names":["Object","defineProperty","exports","value","OpusParser","Token","require","VorbisParser_1","Opus","VorbisParser","constructor","metadata","options","tokenizer","lastPos","parseFirstPage","header","pageData","setFormat","idHeader","IdHeader","length","get","magicSignature","Error","inputSampleRate","channelCount","parseFullPage","StringType","parseUserCommentList","position","calculateDuration","format","sampleRate","absoluteGranulePosition","pos_48bit","preSkip","fileInfo","size","duration","dataSize"],"sources":["C:/Users/vanitas/node_modules/music-metadata/lib/ogg/opus/OpusParser.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OpusParser = void 0;\nconst Token = require(\"token-types\");\nconst VorbisParser_1 = require(\"../vorbis/VorbisParser\");\nconst Opus = require(\"./Opus\");\n/**\n * Opus parser\n * Internet Engineering Task Force (IETF) - RFC 6716\n * Used by OggParser\n */\nclass OpusParser extends VorbisParser_1.VorbisParser {\n    constructor(metadata, options, tokenizer) {\n        super(metadata, options);\n        this.tokenizer = tokenizer;\n        this.lastPos = -1;\n    }\n    /**\n     * Parse first Opus Ogg page\n     * @param {IPageHeader} header\n     * @param {Buffer} pageData\n     */\n    parseFirstPage(header, pageData) {\n        this.metadata.setFormat('codec', 'Opus');\n        // Parse Opus ID Header\n        this.idHeader = new Opus.IdHeader(pageData.length).get(pageData, 0);\n        if (this.idHeader.magicSignature !== \"OpusHead\")\n            throw new Error(\"Illegal ogg/Opus magic-signature\");\n        this.metadata.setFormat('sampleRate', this.idHeader.inputSampleRate);\n        this.metadata.setFormat('numberOfChannels', this.idHeader.channelCount);\n    }\n    parseFullPage(pageData) {\n        const magicSignature = new Token.StringType(8, 'ascii').get(pageData, 0);\n        switch (magicSignature) {\n            case 'OpusTags':\n                this.parseUserCommentList(pageData, 8);\n                this.lastPos = this.tokenizer.position - pageData.length;\n                break;\n            default:\n                break;\n        }\n    }\n    calculateDuration(header) {\n        if (this.metadata.format.sampleRate && header.absoluteGranulePosition >= 0) {\n            // Calculate duration\n            const pos_48bit = header.absoluteGranulePosition - this.idHeader.preSkip;\n            this.metadata.setFormat('numberOfSamples', pos_48bit);\n            this.metadata.setFormat('duration', pos_48bit / 48000);\n            if (this.lastPos !== -1 && this.tokenizer.fileInfo.size && this.metadata.format.duration) {\n                const dataSize = this.tokenizer.fileInfo.size - this.lastPos;\n                this.metadata.setFormat('bitrate', 8 * dataSize / this.metadata.format.duration);\n            }\n        }\n    }\n}\nexports.OpusParser = OpusParser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}