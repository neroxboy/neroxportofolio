{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChapterText = exports.StcoAtom = exports.StszAtom = exports.StscAtom = exports.SampleToChunkToken = exports.SttsAtom = exports.TimeToSampleToken = exports.SoundSampleDescriptionV0 = exports.SoundSampleDescriptionVersion = exports.StsdAtom = exports.TrackHeaderAtom = exports.NameAtom = exports.DataAtom = exports.MvhdAtom = exports.MdhdAtom = exports.FixedLengthAtom = exports.mhdr = exports.tkhd = exports.ftyp = exports.ExtendedSize = exports.Header = void 0;\nconst Token = require(\"token-types\");\nconst debug_1 = require(\"debug\");\nconst FourCC_1 = require(\"../common/FourCC\");\nconst debug = (0, debug_1.default)('music-metadata:parser:MP4:atom');\nexports.Header = {\n  len: 8,\n  get: (buf, off) => {\n    const length = Token.UINT32_BE.get(buf, off);\n    if (length < 0) throw new Error('Invalid atom header length');\n    return {\n      length: BigInt(length),\n      name: new Token.StringType(4, 'binary').get(buf, off + 4)\n    };\n  },\n  put: (buf, off, hdr) => {\n    Token.UINT32_BE.put(buf, off, Number(hdr.length));\n    return FourCC_1.FourCcToken.put(buf, off + 4, hdr.name);\n  }\n};\n/**\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap1/qtff1.html#//apple_ref/doc/uid/TP40000939-CH203-38190\n */\nexports.ExtendedSize = Token.UINT64_BE;\nexports.ftyp = {\n  len: 4,\n  get: (buf, off) => {\n    return {\n      type: new Token.StringType(4, 'ascii').get(buf, off)\n    };\n  }\n};\nexports.tkhd = {\n  len: 4,\n  get: (buf, off) => {\n    return {\n      type: new Token.StringType(4, 'ascii').get(buf, off)\n    };\n  }\n};\n/**\n * Token: Movie Header Atom\n */\nexports.mhdr = {\n  len: 8,\n  get: (buf, off) => {\n    return {\n      version: Token.UINT8.get(buf, off),\n      flags: Token.UINT24_BE.get(buf, off + 1),\n      nextItemID: Token.UINT32_BE.get(buf, off + 4)\n    };\n  }\n};\n/**\n * Base class for 'fixed' length atoms.\n * In some cases these atoms are longer then the sum of the described fields.\n * Issue: https://github.com/Borewit/music-metadata/issues/120\n */\nclass FixedLengthAtom {\n  /**\n   *\n   * @param {number} len Length as specified in the size field\n   * @param {number} expLen Total length of sum of specified fields in the standard\n   */\n  constructor(len, expLen, atomId) {\n    this.len = len;\n    if (len < expLen) {\n      throw new Error(`Atom ${atomId} expected to be ${expLen}, but specifies ${len} bytes long.`);\n    } else if (len > expLen) {\n      debug(`Warning: atom ${atomId} expected to be ${expLen}, but was actually ${len} bytes long.`);\n    }\n  }\n}\nexports.FixedLengthAtom = FixedLengthAtom;\n/**\n * Timestamp stored in seconds since Mac Epoch (1 January 1904)\n */\nconst SecondsSinceMacEpoch = {\n  len: 4,\n  get: (buf, off) => {\n    const secondsSinceUnixEpoch = Token.UINT32_BE.get(buf, off) - 2082844800;\n    return new Date(secondsSinceUnixEpoch * 1000);\n  }\n};\n/**\n * Token: Media Header Atom\n * Ref:\n * - https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-SW34\n * - https://wiki.multimedia.cx/index.php/QuickTime_container#mdhd\n */\nclass MdhdAtom extends FixedLengthAtom {\n  constructor(len) {\n    super(len, 24, 'mdhd');\n    this.len = len;\n  }\n  get(buf, off) {\n    return {\n      version: Token.UINT8.get(buf, off + 0),\n      flags: Token.UINT24_BE.get(buf, off + 1),\n      creationTime: SecondsSinceMacEpoch.get(buf, off + 4),\n      modificationTime: SecondsSinceMacEpoch.get(buf, off + 8),\n      timeScale: Token.UINT32_BE.get(buf, off + 12),\n      duration: Token.UINT32_BE.get(buf, off + 16),\n      language: Token.UINT16_BE.get(buf, off + 20),\n      quality: Token.UINT16_BE.get(buf, off + 22)\n    };\n  }\n}\nexports.MdhdAtom = MdhdAtom;\n/**\n * Token: Movie Header Atom\n */\nclass MvhdAtom extends FixedLengthAtom {\n  constructor(len) {\n    super(len, 100, 'mvhd');\n    this.len = len;\n  }\n  get(buf, off) {\n    return {\n      version: Token.UINT8.get(buf, off),\n      flags: Token.UINT24_BE.get(buf, off + 1),\n      creationTime: SecondsSinceMacEpoch.get(buf, off + 4),\n      modificationTime: SecondsSinceMacEpoch.get(buf, off + 8),\n      timeScale: Token.UINT32_BE.get(buf, off + 12),\n      duration: Token.UINT32_BE.get(buf, off + 16),\n      preferredRate: Token.UINT32_BE.get(buf, off + 20),\n      preferredVolume: Token.UINT16_BE.get(buf, off + 24),\n      // ignore reserver: 10 bytes\n      // ignore matrix structure: 36 bytes\n      previewTime: Token.UINT32_BE.get(buf, off + 72),\n      previewDuration: Token.UINT32_BE.get(buf, off + 76),\n      posterTime: Token.UINT32_BE.get(buf, off + 80),\n      selectionTime: Token.UINT32_BE.get(buf, off + 84),\n      selectionDuration: Token.UINT32_BE.get(buf, off + 88),\n      currentTime: Token.UINT32_BE.get(buf, off + 92),\n      nextTrackID: Token.UINT32_BE.get(buf, off + 96)\n    };\n  }\n}\nexports.MvhdAtom = MvhdAtom;\n/**\n * Data Atom Structure\n */\nclass DataAtom {\n  constructor(len) {\n    this.len = len;\n  }\n  get(buf, off) {\n    return {\n      type: {\n        set: Token.UINT8.get(buf, off + 0),\n        type: Token.UINT24_BE.get(buf, off + 1)\n      },\n      locale: Token.UINT24_BE.get(buf, off + 4),\n      value: Buffer.from(new Token.Uint8ArrayType(this.len - 8).get(buf, off + 8))\n    };\n  }\n}\nexports.DataAtom = DataAtom;\n/**\n * Data Atom Structure\n * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW31\n */\nclass NameAtom {\n  constructor(len) {\n    this.len = len;\n  }\n  get(buf, off) {\n    return {\n      version: Token.UINT8.get(buf, off),\n      flags: Token.UINT24_BE.get(buf, off + 1),\n      name: new Token.StringType(this.len - 4, 'utf-8').get(buf, off + 4)\n    };\n  }\n}\nexports.NameAtom = NameAtom;\n/**\n * Track Header Atoms structure\n * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25550\n */\nclass TrackHeaderAtom {\n  constructor(len) {\n    this.len = len;\n  }\n  get(buf, off) {\n    return {\n      version: Token.UINT8.get(buf, off),\n      flags: Token.UINT24_BE.get(buf, off + 1),\n      creationTime: SecondsSinceMacEpoch.get(buf, off + 4),\n      modificationTime: SecondsSinceMacEpoch.get(buf, off + 8),\n      trackId: Token.UINT32_BE.get(buf, off + 12),\n      // reserved 4 bytes\n      duration: Token.UINT32_BE.get(buf, off + 20),\n      layer: Token.UINT16_BE.get(buf, off + 24),\n      alternateGroup: Token.UINT16_BE.get(buf, off + 26),\n      volume: Token.UINT16_BE.get(buf, off + 28) // ToDo: fixed point\n      // ToDo: add remaining fields\n    };\n  }\n}\nexports.TrackHeaderAtom = TrackHeaderAtom;\n/**\n * Atom: Sample Description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\nconst stsdHeader = {\n  len: 8,\n  get: (buf, off) => {\n    return {\n      version: Token.UINT8.get(buf, off),\n      flags: Token.UINT24_BE.get(buf, off + 1),\n      numberOfEntries: Token.UINT32_BE.get(buf, off + 4)\n    };\n  }\n};\n/**\n * Atom: Sample Description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\nclass SampleDescriptionTable {\n  constructor(len) {\n    this.len = len;\n  }\n  get(buf, off) {\n    return {\n      dataFormat: FourCC_1.FourCcToken.get(buf, off),\n      dataReferenceIndex: Token.UINT16_BE.get(buf, off + 10),\n      description: new Token.Uint8ArrayType(this.len - 12).get(buf, off + 12)\n    };\n  }\n}\n/**\n * Atom: Sample-description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\nclass StsdAtom {\n  constructor(len) {\n    this.len = len;\n  }\n  get(buf, off) {\n    const header = stsdHeader.get(buf, off);\n    off += stsdHeader.len;\n    const table = [];\n    for (let n = 0; n < header.numberOfEntries; ++n) {\n      const size = Token.UINT32_BE.get(buf, off); // Sample description size\n      off += Token.UINT32_BE.len;\n      table.push(new SampleDescriptionTable(size).get(buf, off));\n      off += size;\n    }\n    return {\n      header,\n      table\n    };\n  }\n}\nexports.StsdAtom = StsdAtom;\n/**\n * Common Sound Sample Description (version & revision)\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-57317\n */\nexports.SoundSampleDescriptionVersion = {\n  len: 8,\n  get(buf, off) {\n    return {\n      version: Token.INT16_BE.get(buf, off),\n      revision: Token.INT16_BE.get(buf, off + 2),\n      vendor: Token.INT32_BE.get(buf, off + 4)\n    };\n  }\n};\n/**\n * Sound Sample Description (Version 0)\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-130736\n */\nexports.SoundSampleDescriptionV0 = {\n  len: 12,\n  get(buf, off) {\n    return {\n      numAudioChannels: Token.INT16_BE.get(buf, off + 0),\n      sampleSize: Token.INT16_BE.get(buf, off + 2),\n      compressionId: Token.INT16_BE.get(buf, off + 4),\n      packetSize: Token.INT16_BE.get(buf, off + 6),\n      sampleRate: Token.UINT16_BE.get(buf, off + 8) + Token.UINT16_BE.get(buf, off + 10) / 10000\n    };\n  }\n};\nclass SimpleTableAtom {\n  constructor(len, token) {\n    this.len = len;\n    this.token = token;\n  }\n  get(buf, off) {\n    const nrOfEntries = Token.INT32_BE.get(buf, off + 4);\n    return {\n      version: Token.INT8.get(buf, off + 0),\n      flags: Token.INT24_BE.get(buf, off + 1),\n      numberOfEntries: nrOfEntries,\n      entries: readTokenTable(buf, this.token, off + 8, this.len - 8, nrOfEntries)\n    };\n  }\n}\nexports.TimeToSampleToken = {\n  len: 8,\n  get(buf, off) {\n    return {\n      count: Token.INT32_BE.get(buf, off + 0),\n      duration: Token.INT32_BE.get(buf, off + 4)\n    };\n  }\n};\n/**\n * Time-to-sample('stts') atom.\n * Store duration information for a media’s samples.\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25696\n */\nclass SttsAtom extends SimpleTableAtom {\n  constructor(len) {\n    super(len, exports.TimeToSampleToken);\n    this.len = len;\n  }\n}\nexports.SttsAtom = SttsAtom;\nexports.SampleToChunkToken = {\n  len: 12,\n  get(buf, off) {\n    return {\n      firstChunk: Token.INT32_BE.get(buf, off),\n      samplesPerChunk: Token.INT32_BE.get(buf, off + 4),\n      sampleDescriptionId: Token.INT32_BE.get(buf, off + 8)\n    };\n  }\n};\n/**\n * Sample-to-Chunk ('stsc') atom interface\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25706\n */\nclass StscAtom extends SimpleTableAtom {\n  constructor(len) {\n    super(len, exports.SampleToChunkToken);\n    this.len = len;\n  }\n}\nexports.StscAtom = StscAtom;\n/**\n * Sample-size ('stsz') atom\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25710\n */\nclass StszAtom {\n  constructor(len) {\n    this.len = len;\n  }\n  get(buf, off) {\n    const nrOfEntries = Token.INT32_BE.get(buf, off + 8);\n    return {\n      version: Token.INT8.get(buf, off),\n      flags: Token.INT24_BE.get(buf, off + 1),\n      sampleSize: Token.INT32_BE.get(buf, off + 4),\n      numberOfEntries: nrOfEntries,\n      entries: readTokenTable(buf, Token.INT32_BE, off + 12, this.len - 12, nrOfEntries)\n    };\n  }\n}\nexports.StszAtom = StszAtom;\n/**\n * Chunk offset atom, 'stco'\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25715\n */\nclass StcoAtom extends SimpleTableAtom {\n  constructor(len) {\n    super(len, Token.INT32_BE);\n    this.len = len;\n  }\n}\nexports.StcoAtom = StcoAtom;\n/**\n * Token used to decode text-track from 'mdat' atom (raw data stream)\n */\nclass ChapterText {\n  constructor(len) {\n    this.len = len;\n  }\n  get(buf, off) {\n    const titleLen = Token.INT16_BE.get(buf, off + 0);\n    const str = new Token.StringType(titleLen, 'utf-8');\n    return str.get(buf, off + 2);\n  }\n}\nexports.ChapterText = ChapterText;\nfunction readTokenTable(buf, token, off, remainingLen, numberOfEntries) {\n  debug(`remainingLen=${remainingLen}, numberOfEntries=${numberOfEntries} * token-len=${token.len}`);\n  if (remainingLen === 0) return [];\n  if (remainingLen !== numberOfEntries * token.len) throw new Error('mismatch number-of-entries with remaining atom-length');\n  const entries = [];\n  // parse offset-table\n  for (let n = 0; n < numberOfEntries; ++n) {\n    entries.push(token.get(buf, off));\n    off += token.len;\n  }\n  return entries;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","ChapterText","StcoAtom","StszAtom","StscAtom","SampleToChunkToken","SttsAtom","TimeToSampleToken","SoundSampleDescriptionV0","SoundSampleDescriptionVersion","StsdAtom","TrackHeaderAtom","NameAtom","DataAtom","MvhdAtom","MdhdAtom","FixedLengthAtom","mhdr","tkhd","ftyp","ExtendedSize","Header","Token","require","debug_1","FourCC_1","debug","default","len","get","buf","off","length","UINT32_BE","Error","BigInt","name","StringType","put","hdr","Number","FourCcToken","UINT64_BE","type","version","UINT8","flags","UINT24_BE","nextItemID","constructor","expLen","atomId","SecondsSinceMacEpoch","secondsSinceUnixEpoch","Date","creationTime","modificationTime","timeScale","duration","language","UINT16_BE","quality","preferredRate","preferredVolume","previewTime","previewDuration","posterTime","selectionTime","selectionDuration","currentTime","nextTrackID","set","locale","Buffer","from","Uint8ArrayType","trackId","layer","alternateGroup","volume","stsdHeader","numberOfEntries","SampleDescriptionTable","dataFormat","dataReferenceIndex","description","header","table","n","size","push","INT16_BE","revision","vendor","INT32_BE","numAudioChannels","sampleSize","compressionId","packetSize","sampleRate","SimpleTableAtom","token","nrOfEntries","INT8","INT24_BE","entries","readTokenTable","count","firstChunk","samplesPerChunk","sampleDescriptionId","titleLen","str","remainingLen"],"sources":["C:/Users/vanitas/node_modules/music-metadata/lib/mp4/AtomToken.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChapterText = exports.StcoAtom = exports.StszAtom = exports.StscAtom = exports.SampleToChunkToken = exports.SttsAtom = exports.TimeToSampleToken = exports.SoundSampleDescriptionV0 = exports.SoundSampleDescriptionVersion = exports.StsdAtom = exports.TrackHeaderAtom = exports.NameAtom = exports.DataAtom = exports.MvhdAtom = exports.MdhdAtom = exports.FixedLengthAtom = exports.mhdr = exports.tkhd = exports.ftyp = exports.ExtendedSize = exports.Header = void 0;\nconst Token = require(\"token-types\");\nconst debug_1 = require(\"debug\");\nconst FourCC_1 = require(\"../common/FourCC\");\nconst debug = (0, debug_1.default)('music-metadata:parser:MP4:atom');\nexports.Header = {\n    len: 8,\n    get: (buf, off) => {\n        const length = Token.UINT32_BE.get(buf, off);\n        if (length < 0)\n            throw new Error('Invalid atom header length');\n        return {\n            length: BigInt(length),\n            name: new Token.StringType(4, 'binary').get(buf, off + 4)\n        };\n    },\n    put: (buf, off, hdr) => {\n        Token.UINT32_BE.put(buf, off, Number(hdr.length));\n        return FourCC_1.FourCcToken.put(buf, off + 4, hdr.name);\n    }\n};\n/**\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap1/qtff1.html#//apple_ref/doc/uid/TP40000939-CH203-38190\n */\nexports.ExtendedSize = Token.UINT64_BE;\nexports.ftyp = {\n    len: 4,\n    get: (buf, off) => {\n        return {\n            type: new Token.StringType(4, 'ascii').get(buf, off)\n        };\n    }\n};\nexports.tkhd = {\n    len: 4,\n    get: (buf, off) => {\n        return {\n            type: new Token.StringType(4, 'ascii').get(buf, off)\n        };\n    }\n};\n/**\n * Token: Movie Header Atom\n */\nexports.mhdr = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            version: Token.UINT8.get(buf, off),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            nextItemID: Token.UINT32_BE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Base class for 'fixed' length atoms.\n * In some cases these atoms are longer then the sum of the described fields.\n * Issue: https://github.com/Borewit/music-metadata/issues/120\n */\nclass FixedLengthAtom {\n    /**\n     *\n     * @param {number} len Length as specified in the size field\n     * @param {number} expLen Total length of sum of specified fields in the standard\n     */\n    constructor(len, expLen, atomId) {\n        this.len = len;\n        if (len < expLen) {\n            throw new Error(`Atom ${atomId} expected to be ${expLen}, but specifies ${len} bytes long.`);\n        }\n        else if (len > expLen) {\n            debug(`Warning: atom ${atomId} expected to be ${expLen}, but was actually ${len} bytes long.`);\n        }\n    }\n}\nexports.FixedLengthAtom = FixedLengthAtom;\n/**\n * Timestamp stored in seconds since Mac Epoch (1 January 1904)\n */\nconst SecondsSinceMacEpoch = {\n    len: 4,\n    get: (buf, off) => {\n        const secondsSinceUnixEpoch = Token.UINT32_BE.get(buf, off) - 2082844800;\n        return new Date(secondsSinceUnixEpoch * 1000);\n    }\n};\n/**\n * Token: Media Header Atom\n * Ref:\n * - https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-SW34\n * - https://wiki.multimedia.cx/index.php/QuickTime_container#mdhd\n */\nclass MdhdAtom extends FixedLengthAtom {\n    constructor(len) {\n        super(len, 24, 'mdhd');\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            version: Token.UINT8.get(buf, off + 0),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            creationTime: SecondsSinceMacEpoch.get(buf, off + 4),\n            modificationTime: SecondsSinceMacEpoch.get(buf, off + 8),\n            timeScale: Token.UINT32_BE.get(buf, off + 12),\n            duration: Token.UINT32_BE.get(buf, off + 16),\n            language: Token.UINT16_BE.get(buf, off + 20),\n            quality: Token.UINT16_BE.get(buf, off + 22)\n        };\n    }\n}\nexports.MdhdAtom = MdhdAtom;\n/**\n * Token: Movie Header Atom\n */\nclass MvhdAtom extends FixedLengthAtom {\n    constructor(len) {\n        super(len, 100, 'mvhd');\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            version: Token.UINT8.get(buf, off),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            creationTime: SecondsSinceMacEpoch.get(buf, off + 4),\n            modificationTime: SecondsSinceMacEpoch.get(buf, off + 8),\n            timeScale: Token.UINT32_BE.get(buf, off + 12),\n            duration: Token.UINT32_BE.get(buf, off + 16),\n            preferredRate: Token.UINT32_BE.get(buf, off + 20),\n            preferredVolume: Token.UINT16_BE.get(buf, off + 24),\n            // ignore reserver: 10 bytes\n            // ignore matrix structure: 36 bytes\n            previewTime: Token.UINT32_BE.get(buf, off + 72),\n            previewDuration: Token.UINT32_BE.get(buf, off + 76),\n            posterTime: Token.UINT32_BE.get(buf, off + 80),\n            selectionTime: Token.UINT32_BE.get(buf, off + 84),\n            selectionDuration: Token.UINT32_BE.get(buf, off + 88),\n            currentTime: Token.UINT32_BE.get(buf, off + 92),\n            nextTrackID: Token.UINT32_BE.get(buf, off + 96)\n        };\n    }\n}\nexports.MvhdAtom = MvhdAtom;\n/**\n * Data Atom Structure\n */\nclass DataAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            type: {\n                set: Token.UINT8.get(buf, off + 0),\n                type: Token.UINT24_BE.get(buf, off + 1)\n            },\n            locale: Token.UINT24_BE.get(buf, off + 4),\n            value: Buffer.from(new Token.Uint8ArrayType(this.len - 8).get(buf, off + 8))\n        };\n    }\n}\nexports.DataAtom = DataAtom;\n/**\n * Data Atom Structure\n * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW31\n */\nclass NameAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            version: Token.UINT8.get(buf, off),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            name: new Token.StringType(this.len - 4, 'utf-8').get(buf, off + 4)\n        };\n    }\n}\nexports.NameAtom = NameAtom;\n/**\n * Track Header Atoms structure\n * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25550\n */\nclass TrackHeaderAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            version: Token.UINT8.get(buf, off),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            creationTime: SecondsSinceMacEpoch.get(buf, off + 4),\n            modificationTime: SecondsSinceMacEpoch.get(buf, off + 8),\n            trackId: Token.UINT32_BE.get(buf, off + 12),\n            // reserved 4 bytes\n            duration: Token.UINT32_BE.get(buf, off + 20),\n            layer: Token.UINT16_BE.get(buf, off + 24),\n            alternateGroup: Token.UINT16_BE.get(buf, off + 26),\n            volume: Token.UINT16_BE.get(buf, off + 28) // ToDo: fixed point\n            // ToDo: add remaining fields\n        };\n    }\n}\nexports.TrackHeaderAtom = TrackHeaderAtom;\n/**\n * Atom: Sample Description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\nconst stsdHeader = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            version: Token.UINT8.get(buf, off),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            numberOfEntries: Token.UINT32_BE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Atom: Sample Description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\nclass SampleDescriptionTable {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            dataFormat: FourCC_1.FourCcToken.get(buf, off),\n            dataReferenceIndex: Token.UINT16_BE.get(buf, off + 10),\n            description: new Token.Uint8ArrayType(this.len - 12).get(buf, off + 12)\n        };\n    }\n}\n/**\n * Atom: Sample-description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\nclass StsdAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        const header = stsdHeader.get(buf, off);\n        off += stsdHeader.len;\n        const table = [];\n        for (let n = 0; n < header.numberOfEntries; ++n) {\n            const size = Token.UINT32_BE.get(buf, off); // Sample description size\n            off += Token.UINT32_BE.len;\n            table.push(new SampleDescriptionTable(size).get(buf, off));\n            off += size;\n        }\n        return {\n            header,\n            table\n        };\n    }\n}\nexports.StsdAtom = StsdAtom;\n/**\n * Common Sound Sample Description (version & revision)\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-57317\n */\nexports.SoundSampleDescriptionVersion = {\n    len: 8,\n    get(buf, off) {\n        return {\n            version: Token.INT16_BE.get(buf, off),\n            revision: Token.INT16_BE.get(buf, off + 2),\n            vendor: Token.INT32_BE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Sound Sample Description (Version 0)\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-130736\n */\nexports.SoundSampleDescriptionV0 = {\n    len: 12,\n    get(buf, off) {\n        return {\n            numAudioChannels: Token.INT16_BE.get(buf, off + 0),\n            sampleSize: Token.INT16_BE.get(buf, off + 2),\n            compressionId: Token.INT16_BE.get(buf, off + 4),\n            packetSize: Token.INT16_BE.get(buf, off + 6),\n            sampleRate: Token.UINT16_BE.get(buf, off + 8) + Token.UINT16_BE.get(buf, off + 10) / 10000\n        };\n    }\n};\nclass SimpleTableAtom {\n    constructor(len, token) {\n        this.len = len;\n        this.token = token;\n    }\n    get(buf, off) {\n        const nrOfEntries = Token.INT32_BE.get(buf, off + 4);\n        return {\n            version: Token.INT8.get(buf, off + 0),\n            flags: Token.INT24_BE.get(buf, off + 1),\n            numberOfEntries: nrOfEntries,\n            entries: readTokenTable(buf, this.token, off + 8, this.len - 8, nrOfEntries)\n        };\n    }\n}\nexports.TimeToSampleToken = {\n    len: 8,\n    get(buf, off) {\n        return {\n            count: Token.INT32_BE.get(buf, off + 0),\n            duration: Token.INT32_BE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Time-to-sample('stts') atom.\n * Store duration information for a media’s samples.\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25696\n */\nclass SttsAtom extends SimpleTableAtom {\n    constructor(len) {\n        super(len, exports.TimeToSampleToken);\n        this.len = len;\n    }\n}\nexports.SttsAtom = SttsAtom;\nexports.SampleToChunkToken = {\n    len: 12,\n    get(buf, off) {\n        return {\n            firstChunk: Token.INT32_BE.get(buf, off),\n            samplesPerChunk: Token.INT32_BE.get(buf, off + 4),\n            sampleDescriptionId: Token.INT32_BE.get(buf, off + 8)\n        };\n    }\n};\n/**\n * Sample-to-Chunk ('stsc') atom interface\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25706\n */\nclass StscAtom extends SimpleTableAtom {\n    constructor(len) {\n        super(len, exports.SampleToChunkToken);\n        this.len = len;\n    }\n}\nexports.StscAtom = StscAtom;\n/**\n * Sample-size ('stsz') atom\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25710\n */\nclass StszAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        const nrOfEntries = Token.INT32_BE.get(buf, off + 8);\n        return {\n            version: Token.INT8.get(buf, off),\n            flags: Token.INT24_BE.get(buf, off + 1),\n            sampleSize: Token.INT32_BE.get(buf, off + 4),\n            numberOfEntries: nrOfEntries,\n            entries: readTokenTable(buf, Token.INT32_BE, off + 12, this.len - 12, nrOfEntries)\n        };\n    }\n}\nexports.StszAtom = StszAtom;\n/**\n * Chunk offset atom, 'stco'\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25715\n */\nclass StcoAtom extends SimpleTableAtom {\n    constructor(len) {\n        super(len, Token.INT32_BE);\n        this.len = len;\n    }\n}\nexports.StcoAtom = StcoAtom;\n/**\n * Token used to decode text-track from 'mdat' atom (raw data stream)\n */\nclass ChapterText {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        const titleLen = Token.INT16_BE.get(buf, off + 0);\n        const str = new Token.StringType(titleLen, 'utf-8');\n        return str.get(buf, off + 2);\n    }\n}\nexports.ChapterText = ChapterText;\nfunction readTokenTable(buf, token, off, remainingLen, numberOfEntries) {\n    debug(`remainingLen=${remainingLen}, numberOfEntries=${numberOfEntries} * token-len=${token.len}`);\n    if (remainingLen === 0)\n        return [];\n    if (remainingLen !== numberOfEntries * token.len)\n        throw new Error('mismatch number-of-entries with remaining atom-length');\n    const entries = [];\n    // parse offset-table\n    for (let n = 0; n < numberOfEntries; ++n) {\n        entries.push(token.get(buf, off));\n        off += token.len;\n    }\n    return entries;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}