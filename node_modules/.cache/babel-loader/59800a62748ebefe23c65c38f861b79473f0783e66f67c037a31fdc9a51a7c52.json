{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Binary search\n * @param array the array to search in\n * @param predicate return a value of < 0, if the item you're looking for should come before, 0 if it is the item you're looking for\n */\nfunction binarySearch(array, predicate) {\n  let low = 0;\n  let high = array.length;\n  // base cases to allow entering a sorted collection in O(N)\n  if (array.length === 0) return low;\n  if (predicate(array[low]) < 0) return low - 1;else if (predicate(array[low]) === 0) return low;\n  const maxPred = predicate(array[high - 1]);\n  if (maxPred > 0) return high;else if (maxPred === 0) return high - 1;\n  while (low !== high) {\n    const mid = low + Math.floor((high - low) / 2);\n    const pred = predicate(array[mid]);\n    if (pred < 0) high = mid;else if (pred > 0) low = mid + 1;else return mid;\n  }\n  return low;\n}\nexports.default = binarySearch;","map":{"version":3,"names":["Object","defineProperty","exports","value","binarySearch","array","predicate","low","high","length","maxPred","mid","Math","floor","pred","default"],"sources":["C:/Users/vanitas/node_modules/@adiwajshing/keyed-db/lib/BinarySearch.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Binary search\n * @param array the array to search in\n * @param predicate return a value of < 0, if the item you're looking for should come before, 0 if it is the item you're looking for\n */\nfunction binarySearch(array, predicate) {\n    let low = 0;\n    let high = array.length;\n    // base cases to allow entering a sorted collection in O(N)\n    if (array.length === 0)\n        return low;\n    if (predicate(array[low]) < 0)\n        return low - 1;\n    else if (predicate(array[low]) === 0)\n        return low;\n    const maxPred = predicate(array[high - 1]);\n    if (maxPred > 0)\n        return high;\n    else if (maxPred === 0)\n        return high - 1;\n    while (low !== high) {\n        const mid = low + Math.floor((high - low) / 2);\n        const pred = predicate(array[mid]);\n        if (pred < 0)\n            high = mid;\n        else if (pred > 0)\n            low = mid + 1;\n        else\n            return mid;\n    }\n    return low;\n}\nexports.default = binarySearch;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,KAAK,EAAEC,SAAS,EAAE;EACpC,IAAIC,GAAG,GAAG,CAAC;EACX,IAAIC,IAAI,GAAGH,KAAK,CAACI,MAAM;EACvB;EACA,IAAIJ,KAAK,CAACI,MAAM,KAAK,CAAC,EAClB,OAAOF,GAAG;EACd,IAAID,SAAS,CAACD,KAAK,CAACE,GAAG,CAAC,CAAC,GAAG,CAAC,EACzB,OAAOA,GAAG,GAAG,CAAC,CAAC,KACd,IAAID,SAAS,CAACD,KAAK,CAACE,GAAG,CAAC,CAAC,KAAK,CAAC,EAChC,OAAOA,GAAG;EACd,MAAMG,OAAO,GAAGJ,SAAS,CAACD,KAAK,CAACG,IAAI,GAAG,CAAC,CAAC,CAAC;EAC1C,IAAIE,OAAO,GAAG,CAAC,EACX,OAAOF,IAAI,CAAC,KACX,IAAIE,OAAO,KAAK,CAAC,EAClB,OAAOF,IAAI,GAAG,CAAC;EACnB,OAAOD,GAAG,KAAKC,IAAI,EAAE;IACjB,MAAMG,GAAG,GAAGJ,GAAG,GAAGK,IAAI,CAACC,KAAK,CAAC,CAACL,IAAI,GAAGD,GAAG,IAAI,CAAC,CAAC;IAC9C,MAAMO,IAAI,GAAGR,SAAS,CAACD,KAAK,CAACM,GAAG,CAAC,CAAC;IAClC,IAAIG,IAAI,GAAG,CAAC,EACRN,IAAI,GAAGG,GAAG,CAAC,KACV,IAAIG,IAAI,GAAG,CAAC,EACbP,GAAG,GAAGI,GAAG,GAAG,CAAC,CAAC,KAEd,OAAOA,GAAG;EAClB;EACA,OAAOJ,GAAG;AACd;AACAL,OAAO,CAACa,OAAO,GAAGX,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}