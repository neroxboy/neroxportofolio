{"ast":null,"code":"// vim: ts=4:sw=4:expandtab\n\nconst curve = require('./curve');\nconst nodeCrypto = require('crypto');\nfunction isNonNegativeInteger(n) {\n  return typeof n === 'number' && n % 1 === 0 && n >= 0;\n}\nexports.generateIdentityKeyPair = curve.generateKeyPair;\nexports.generateRegistrationId = function () {\n  var registrationId = Uint16Array.from(nodeCrypto.randomBytes(2))[0];\n  return registrationId & 0x3fff;\n};\nexports.generateSignedPreKey = function (identityKeyPair, signedKeyId) {\n  if (!(identityKeyPair.privKey instanceof Buffer) || identityKeyPair.privKey.byteLength != 32 || !(identityKeyPair.pubKey instanceof Buffer) || identityKeyPair.pubKey.byteLength != 33) {\n    throw new TypeError('Invalid argument for identityKeyPair');\n  }\n  if (!isNonNegativeInteger(signedKeyId)) {\n    throw new TypeError('Invalid argument for signedKeyId: ' + signedKeyId);\n  }\n  const keyPair = curve.generateKeyPair();\n  const sig = curve.calculateSignature(identityKeyPair.privKey, keyPair.pubKey);\n  return {\n    keyId: signedKeyId,\n    keyPair: keyPair,\n    signature: sig\n  };\n};\nexports.generatePreKey = function (keyId) {\n  if (!isNonNegativeInteger(keyId)) {\n    throw new TypeError('Invalid argument for keyId: ' + keyId);\n  }\n  const keyPair = curve.generateKeyPair();\n  return {\n    keyId,\n    keyPair\n  };\n};","map":{"version":3,"names":["curve","require","nodeCrypto","isNonNegativeInteger","n","exports","generateIdentityKeyPair","generateKeyPair","generateRegistrationId","registrationId","Uint16Array","from","randomBytes","generateSignedPreKey","identityKeyPair","signedKeyId","privKey","Buffer","byteLength","pubKey","TypeError","keyPair","sig","calculateSignature","keyId","signature","generatePreKey"],"sources":["C:/Users/vanitas/node_modules/libsignal/src/keyhelper.js"],"sourcesContent":["// vim: ts=4:sw=4:expandtab\n\nconst curve = require('./curve');\nconst nodeCrypto = require('crypto');\n\nfunction isNonNegativeInteger(n) {\n    return (typeof n === 'number' && (n % 1) === 0  && n >= 0);\n}\n\nexports.generateIdentityKeyPair = curve.generateKeyPair;\n\nexports.generateRegistrationId = function() {\n    var registrationId = Uint16Array.from(nodeCrypto.randomBytes(2))[0];\n    return registrationId & 0x3fff;\n};\n\nexports.generateSignedPreKey = function(identityKeyPair, signedKeyId) {\n    if (!(identityKeyPair.privKey instanceof Buffer) ||\n        identityKeyPair.privKey.byteLength != 32 ||\n        !(identityKeyPair.pubKey instanceof Buffer) ||\n        identityKeyPair.pubKey.byteLength != 33) {\n        throw new TypeError('Invalid argument for identityKeyPair');\n    }\n    if (!isNonNegativeInteger(signedKeyId)) {\n        throw new TypeError('Invalid argument for signedKeyId: ' + signedKeyId);\n    }\n    const keyPair = curve.generateKeyPair();\n    const sig = curve.calculateSignature(identityKeyPair.privKey, keyPair.pubKey);\n    return {\n        keyId: signedKeyId,\n        keyPair: keyPair,\n        signature: sig\n    };\n};\n\nexports.generatePreKey = function(keyId) {\n    if (!isNonNegativeInteger(keyId)) {\n        throw new TypeError('Invalid argument for keyId: ' + keyId);\n    }\n    const keyPair = curve.generateKeyPair();\n    return {\n        keyId,\n        keyPair\n    };\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;AAChC,MAAMC,UAAU,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAEpC,SAASE,oBAAoBA,CAACC,CAAC,EAAE;EAC7B,OAAQ,OAAOA,CAAC,KAAK,QAAQ,IAAKA,CAAC,GAAG,CAAC,KAAM,CAAC,IAAKA,CAAC,IAAI,CAAC;AAC7D;AAEAC,OAAO,CAACC,uBAAuB,GAAGN,KAAK,CAACO,eAAe;AAEvDF,OAAO,CAACG,sBAAsB,GAAG,YAAW;EACxC,IAAIC,cAAc,GAAGC,WAAW,CAACC,IAAI,CAACT,UAAU,CAACU,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnE,OAAOH,cAAc,GAAG,MAAM;AAClC,CAAC;AAEDJ,OAAO,CAACQ,oBAAoB,GAAG,UAASC,eAAe,EAAEC,WAAW,EAAE;EAClE,IAAI,EAAED,eAAe,CAACE,OAAO,YAAYC,MAAM,CAAC,IAC5CH,eAAe,CAACE,OAAO,CAACE,UAAU,IAAI,EAAE,IACxC,EAAEJ,eAAe,CAACK,MAAM,YAAYF,MAAM,CAAC,IAC3CH,eAAe,CAACK,MAAM,CAACD,UAAU,IAAI,EAAE,EAAE;IACzC,MAAM,IAAIE,SAAS,CAAC,sCAAsC,CAAC;EAC/D;EACA,IAAI,CAACjB,oBAAoB,CAACY,WAAW,CAAC,EAAE;IACpC,MAAM,IAAIK,SAAS,CAAC,oCAAoC,GAAGL,WAAW,CAAC;EAC3E;EACA,MAAMM,OAAO,GAAGrB,KAAK,CAACO,eAAe,CAAC,CAAC;EACvC,MAAMe,GAAG,GAAGtB,KAAK,CAACuB,kBAAkB,CAACT,eAAe,CAACE,OAAO,EAAEK,OAAO,CAACF,MAAM,CAAC;EAC7E,OAAO;IACHK,KAAK,EAAET,WAAW;IAClBM,OAAO,EAAEA,OAAO;IAChBI,SAAS,EAAEH;EACf,CAAC;AACL,CAAC;AAEDjB,OAAO,CAACqB,cAAc,GAAG,UAASF,KAAK,EAAE;EACrC,IAAI,CAACrB,oBAAoB,CAACqB,KAAK,CAAC,EAAE;IAC9B,MAAM,IAAIJ,SAAS,CAAC,8BAA8B,GAAGI,KAAK,CAAC;EAC/D;EACA,MAAMH,OAAO,GAAGrB,KAAK,CAACO,eAAe,CAAC,CAAC;EACvC,OAAO;IACHiB,KAAK;IACLH;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}