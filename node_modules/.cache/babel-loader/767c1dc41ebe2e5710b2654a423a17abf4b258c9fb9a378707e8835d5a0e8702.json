{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _config = require(\"./config\");\nvar _hooks = require(\"./hooks\");\nvar _Snowflake = require(\"./Snowflake\");\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj[\"default\"] = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nvar Snowfall = function Snowfall() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? _Snowflake.defaultConfig.color : _ref$color,\n    _ref$changeFrequency = _ref.changeFrequency,\n    changeFrequency = _ref$changeFrequency === void 0 ? _Snowflake.defaultConfig.changeFrequency : _ref$changeFrequency,\n    _ref$radius = _ref.radius,\n    radius = _ref$radius === void 0 ? _Snowflake.defaultConfig.radius : _ref$radius,\n    _ref$speed = _ref.speed,\n    speed = _ref$speed === void 0 ? _Snowflake.defaultConfig.speed : _ref$speed,\n    _ref$wind = _ref.wind,\n    wind = _ref$wind === void 0 ? _Snowflake.defaultConfig.wind : _ref$wind,\n    _ref$rotationSpeed = _ref.rotationSpeed,\n    rotationSpeed = _ref$rotationSpeed === void 0 ? _Snowflake.defaultConfig.rotationSpeed : _ref$rotationSpeed,\n    _ref$snowflakeCount = _ref.snowflakeCount,\n    snowflakeCount = _ref$snowflakeCount === void 0 ? 150 : _ref$snowflakeCount,\n    images = _ref.images,\n    style = _ref.style;\n  var mergedStyle = (0, _hooks.useSnowfallStyle)(style);\n  var canvasRef = (0, _react.useRef)(null);\n  var canvasSize = (0, _hooks.useComponentSize)(canvasRef);\n  var animationFrame = (0, _react.useRef)(0);\n  var lastUpdate = (0, _react.useRef)(Date.now());\n  var config = (0, _hooks.useDeepMemo)({\n    color: color,\n    changeFrequency: changeFrequency,\n    radius: radius,\n    speed: speed,\n    wind: wind,\n    rotationSpeed: rotationSpeed,\n    images: images\n  });\n  var snowflakes = (0, _hooks.useSnowflakes)(canvasRef, snowflakeCount, config);\n  var render = (0, _react.useCallback)(function () {\n    var framesPassed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var canvas = canvasRef.current;\n    if (canvas) {\n      // Update the positions of the snowflakes\n      snowflakes.forEach(function (snowflake) {\n        return snowflake.update(canvas, framesPassed);\n      }); // Render them if the canvas is available\n\n      var ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.clearRect(0, 0, canvas.offsetWidth, canvas.offsetHeight);\n        snowflakes.forEach(function (snowflake) {\n          return snowflake.draw(ctx);\n        });\n      }\n    }\n  }, [snowflakes]);\n  var loop = (0, _react.useCallback)(function () {\n    // Update based on time passed so that a slow frame rate won't slow down the snowflake\n    var now = Date.now();\n    var msPassed = Date.now() - lastUpdate.current;\n    lastUpdate.current = now; // Frames that would have passed if running at 60 fps\n\n    var framesPassed = msPassed / _config.targetFrameTime;\n    render(framesPassed);\n    animationFrame.current = requestAnimationFrame(loop);\n  }, [render]);\n  (0, _react.useEffect)(function () {\n    loop();\n    return function () {\n      return cancelAnimationFrame(animationFrame.current);\n    };\n  }, [loop]);\n  return /*#__PURE__*/_react[\"default\"].createElement(\"canvas\", {\n    ref: canvasRef,\n    height: canvasSize.height,\n    width: canvasSize.width,\n    style: mergedStyle,\n    \"data-testid\": \"SnowfallCanvas\"\n  });\n};\nvar _default = Snowfall;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_config","_hooks","_Snowflake","Snowfall","_ref","arguments","length","undefined","_ref$color","color","defaultConfig","_ref$changeFrequency","changeFrequency","_ref$radius","radius","_ref$speed","speed","_ref$wind","wind","_ref$rotationSpeed","rotationSpeed","_ref$snowflakeCount","snowflakeCount","images","style","mergedStyle","useSnowfallStyle","canvasRef","useRef","canvasSize","useComponentSize","animationFrame","lastUpdate","Date","now","config","useDeepMemo","snowflakes","useSnowflakes","render","useCallback","framesPassed","canvas","current","forEach","snowflake","update","ctx","getContext","setTransform","clearRect","offsetWidth","offsetHeight","draw","loop","msPassed","targetFrameTime","requestAnimationFrame","useEffect","cancelAnimationFrame","createElement","ref","height","width"],"sources":["C:\\Users\\vanitas\\Downloads\\tesskil\\node_modules\\react-snowfall\\src\\Snowfall.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react'\r\nimport { targetFrameTime } from './config'\r\nimport { useComponentSize, useSnowfallStyle, useSnowflakes, useDeepMemo } from './hooks'\r\nimport { SnowflakeProps, defaultConfig } from './Snowflake'\r\n\r\nexport interface SnowfallProps extends Partial<SnowflakeProps> {\r\n  /**\r\n   * The number of snowflakes to be rendered.\r\n   *\r\n   * The default value is 150.\r\n   */\r\n  snowflakeCount?: number\r\n  /**\r\n   * Any style properties that will be passed to the canvas element.\r\n   */\r\n  style?: React.CSSProperties\r\n}\r\n\r\nconst Snowfall = ({\r\n  color = defaultConfig.color,\r\n  changeFrequency = defaultConfig.changeFrequency,\r\n  radius = defaultConfig.radius,\r\n  speed = defaultConfig.speed,\r\n  wind = defaultConfig.wind,\r\n  rotationSpeed = defaultConfig.rotationSpeed,\r\n  snowflakeCount = 150,\r\n  images,\r\n  style,\r\n}: SnowfallProps = {}): JSX.Element => {\r\n  const mergedStyle = useSnowfallStyle(style)\r\n\r\n  const canvasRef = useRef<HTMLCanvasElement>(null)\r\n  const canvasSize = useComponentSize(canvasRef)\r\n  const animationFrame = useRef(0)\r\n\r\n  const lastUpdate = useRef(Date.now())\r\n  const config = useDeepMemo<SnowflakeProps>({ color, changeFrequency, radius, speed, wind, rotationSpeed, images })\r\n  const snowflakes = useSnowflakes(canvasRef, snowflakeCount, config)\r\n\r\n  const render = useCallback(\r\n    (framesPassed = 1) => {\r\n      const canvas = canvasRef.current\r\n      if (canvas) {\r\n        // Update the positions of the snowflakes\r\n        snowflakes.forEach((snowflake) => snowflake.update(canvas, framesPassed))\r\n\r\n        // Render them if the canvas is available\r\n        const ctx = canvas.getContext('2d')\r\n        if (ctx) {\r\n          ctx.setTransform(1, 0, 0, 1, 0, 0)\r\n          ctx.clearRect(0, 0, canvas.offsetWidth, canvas.offsetHeight)\r\n\r\n          snowflakes.forEach((snowflake) => snowflake.draw(ctx))\r\n        }\r\n      }\r\n    },\r\n    [snowflakes],\r\n  )\r\n\r\n  const loop = useCallback(() => {\r\n    // Update based on time passed so that a slow frame rate won't slow down the snowflake\r\n    const now = Date.now()\r\n    const msPassed = Date.now() - lastUpdate.current\r\n    lastUpdate.current = now\r\n\r\n    // Frames that would have passed if running at 60 fps\r\n    const framesPassed = msPassed / targetFrameTime\r\n\r\n    render(framesPassed)\r\n\r\n    animationFrame.current = requestAnimationFrame(loop)\r\n  }, [render])\r\n\r\n  useEffect(() => {\r\n    loop()\r\n    return () => cancelAnimationFrame(animationFrame.current)\r\n  }, [loop])\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      height={canvasSize.height}\r\n      width={canvasSize.width}\r\n      style={mergedStyle}\r\n      data-testid=\"SnowfallCanvas\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default Snowfall\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}