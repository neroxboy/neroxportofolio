{"ast":null,"code":"import { WASMAudioDecoderWorker } from \"@wasm-audio-decoders/common\";\nimport EmscriptenWASM from \"./EmscriptenWasm.js\";\nimport MPEGDecoder from \"./MPEGDecoder.js\";\nexport default class MPEGDecoderWebWorker extends WASMAudioDecoderWorker {\n  constructor(options) {\n    super(options, \"mpg123-decoder\", MPEGDecoder, EmscriptenWASM);\n  }\n  async decode(data) {\n    return this.postToDecoder(\"decode\", data);\n  }\n  async decodeFrame(data) {\n    return this.postToDecoder(\"decodeFrame\", data);\n  }\n  async decodeFrames(data) {\n    return this.postToDecoder(\"decodeFrames\", data);\n  }\n}","map":{"version":3,"names":["WASMAudioDecoderWorker","EmscriptenWASM","MPEGDecoder","MPEGDecoderWebWorker","constructor","options","decode","data","postToDecoder","decodeFrame","decodeFrames"],"sources":["C:/Users/vanitas/node_modules/mpg123-decoder/src/MPEGDecoderWebWorker.js"],"sourcesContent":["import { WASMAudioDecoderWorker } from \"@wasm-audio-decoders/common\";\nimport EmscriptenWASM from \"./EmscriptenWasm.js\";\nimport MPEGDecoder from \"./MPEGDecoder.js\";\n\nexport default class MPEGDecoderWebWorker extends WASMAudioDecoderWorker {\n  constructor(options) {\n    super(options, \"mpg123-decoder\", MPEGDecoder, EmscriptenWASM);\n  }\n\n  async decode(data) {\n    return this.postToDecoder(\"decode\", data);\n  }\n\n  async decodeFrame(data) {\n    return this.postToDecoder(\"decodeFrame\", data);\n  }\n\n  async decodeFrames(data) {\n    return this.postToDecoder(\"decodeFrames\", data);\n  }\n}\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,6BAA6B;AACpE,OAAOC,cAAc,MAAM,qBAAqB;AAChD,OAAOC,WAAW,MAAM,kBAAkB;AAE1C,eAAe,MAAMC,oBAAoB,SAASH,sBAAsB,CAAC;EACvEI,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAACA,OAAO,EAAE,gBAAgB,EAAEH,WAAW,EAAED,cAAc,CAAC;EAC/D;EAEA,MAAMK,MAAMA,CAACC,IAAI,EAAE;IACjB,OAAO,IAAI,CAACC,aAAa,CAAC,QAAQ,EAAED,IAAI,CAAC;EAC3C;EAEA,MAAME,WAAWA,CAACF,IAAI,EAAE;IACtB,OAAO,IAAI,CAACC,aAAa,CAAC,aAAa,EAAED,IAAI,CAAC;EAChD;EAEA,MAAMG,YAAYA,CAACH,IAAI,EAAE;IACvB,OAAO,IAAI,CAACC,aAAa,CAAC,cAAc,EAAED,IAAI,CAAC;EACjD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}