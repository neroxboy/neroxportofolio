{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReplayGain = void 0;\nconst common = require(\"../common/Util\");\n/**\n * https://github.com/Borewit/music-metadata/wiki/Replay-Gain-Data-Format#name-code\n */\nvar NameCode;\n(function (NameCode) {\n  /**\n   * not set\n   */\n  NameCode[NameCode[\"not_set\"] = 0] = \"not_set\";\n  /**\n   * Radio Gain Adjustment\n   */\n  NameCode[NameCode[\"radio\"] = 1] = \"radio\";\n  /**\n   * Audiophile Gain Adjustment\n   */\n  NameCode[NameCode[\"audiophile\"] = 2] = \"audiophile\";\n})(NameCode || (NameCode = {}));\n/**\n * https://github.com/Borewit/music-metadata/wiki/Replay-Gain-Data-Format#originator-code\n */\nvar ReplayGainOriginator;\n(function (ReplayGainOriginator) {\n  /**\n   * Replay Gain unspecified\n   */\n  ReplayGainOriginator[ReplayGainOriginator[\"unspecified\"] = 0] = \"unspecified\";\n  /**\n   * Replay Gain pre-set by artist/producer/mastering engineer\n   */\n  ReplayGainOriginator[ReplayGainOriginator[\"engineer\"] = 1] = \"engineer\";\n  /**\n   * Replay Gain set by user\n   */\n  ReplayGainOriginator[ReplayGainOriginator[\"user\"] = 2] = \"user\";\n  /**\n   * Replay Gain determined automatically, as described on this site\n   */\n  ReplayGainOriginator[ReplayGainOriginator[\"automatic\"] = 3] = \"automatic\";\n  /**\n   * Set by simple RMS average\n   */\n  ReplayGainOriginator[ReplayGainOriginator[\"rms_average\"] = 4] = \"rms_average\";\n})(ReplayGainOriginator || (ReplayGainOriginator = {}));\n/**\n * Replay Gain Data Format\n *\n * https://github.com/Borewit/music-metadata/wiki/Replay-Gain-Data-Format\n */\nexports.ReplayGain = {\n  len: 2,\n  get: (buf, off) => {\n    const gain_type = common.getBitAllignedNumber(buf, off, 0, 3);\n    const sign = common.getBitAllignedNumber(buf, off, 6, 1);\n    const gain_adj = common.getBitAllignedNumber(buf, off, 7, 9) / 10.0;\n    if (gain_type > 0) {\n      return {\n        type: common.getBitAllignedNumber(buf, off, 0, 3),\n        origin: common.getBitAllignedNumber(buf, off, 3, 3),\n        adjustment: sign ? -gain_adj : gain_adj\n      };\n    }\n    return undefined;\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","ReplayGain","common","require","NameCode","ReplayGainOriginator","len","get","buf","off","gain_type","getBitAllignedNumber","sign","gain_adj","type","origin","adjustment","undefined"],"sources":["C:/Users/vanitas/node_modules/music-metadata/lib/mpeg/ReplayGainDataFormat.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReplayGain = void 0;\nconst common = require(\"../common/Util\");\n/**\n * https://github.com/Borewit/music-metadata/wiki/Replay-Gain-Data-Format#name-code\n */\nvar NameCode;\n(function (NameCode) {\n    /**\n     * not set\n     */\n    NameCode[NameCode[\"not_set\"] = 0] = \"not_set\";\n    /**\n     * Radio Gain Adjustment\n     */\n    NameCode[NameCode[\"radio\"] = 1] = \"radio\";\n    /**\n     * Audiophile Gain Adjustment\n     */\n    NameCode[NameCode[\"audiophile\"] = 2] = \"audiophile\";\n})(NameCode || (NameCode = {}));\n/**\n * https://github.com/Borewit/music-metadata/wiki/Replay-Gain-Data-Format#originator-code\n */\nvar ReplayGainOriginator;\n(function (ReplayGainOriginator) {\n    /**\n     * Replay Gain unspecified\n     */\n    ReplayGainOriginator[ReplayGainOriginator[\"unspecified\"] = 0] = \"unspecified\";\n    /**\n     * Replay Gain pre-set by artist/producer/mastering engineer\n     */\n    ReplayGainOriginator[ReplayGainOriginator[\"engineer\"] = 1] = \"engineer\";\n    /**\n     * Replay Gain set by user\n     */\n    ReplayGainOriginator[ReplayGainOriginator[\"user\"] = 2] = \"user\";\n    /**\n     * Replay Gain determined automatically, as described on this site\n     */\n    ReplayGainOriginator[ReplayGainOriginator[\"automatic\"] = 3] = \"automatic\";\n    /**\n     * Set by simple RMS average\n     */\n    ReplayGainOriginator[ReplayGainOriginator[\"rms_average\"] = 4] = \"rms_average\";\n})(ReplayGainOriginator || (ReplayGainOriginator = {}));\n/**\n * Replay Gain Data Format\n *\n * https://github.com/Borewit/music-metadata/wiki/Replay-Gain-Data-Format\n */\nexports.ReplayGain = {\n    len: 2,\n    get: (buf, off) => {\n        const gain_type = common.getBitAllignedNumber(buf, off, 0, 3);\n        const sign = common.getBitAllignedNumber(buf, off, 6, 1);\n        const gain_adj = common.getBitAllignedNumber(buf, off, 7, 9) / 10.0;\n        if (gain_type > 0) {\n            return {\n                type: common.getBitAllignedNumber(buf, off, 0, 3),\n                origin: common.getBitAllignedNumber(buf, off, 3, 3),\n                adjustment: (sign ? -gain_adj : gain_adj)\n            };\n        }\n        return undefined;\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,MAAMC,MAAM,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACxC;AACA;AACA;AACA,IAAIC,QAAQ;AACZ,CAAC,UAAUA,QAAQ,EAAE;EACjB;AACJ;AACA;EACIA,QAAQ,CAACA,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EAC7C;AACJ;AACA;EACIA,QAAQ,CAACA,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;EACzC;AACJ;AACA;EACIA,QAAQ,CAACA,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY;AACvD,CAAC,EAAEA,QAAQ,KAAKA,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/B;AACA;AACA;AACA,IAAIC,oBAAoB;AACxB,CAAC,UAAUA,oBAAoB,EAAE;EAC7B;AACJ;AACA;EACIA,oBAAoB,CAACA,oBAAoB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa;EAC7E;AACJ;AACA;EACIA,oBAAoB,CAACA,oBAAoB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU;EACvE;AACJ;AACA;EACIA,oBAAoB,CAACA,oBAAoB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EAC/D;AACJ;AACA;EACIA,oBAAoB,CAACA,oBAAoB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW;EACzE;AACJ;AACA;EACIA,oBAAoB,CAACA,oBAAoB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa;AACjF,CAAC,EAAEA,oBAAoB,KAAKA,oBAAoB,GAAG,CAAC,CAAC,CAAC,CAAC;AACvD;AACA;AACA;AACA;AACA;AACAN,OAAO,CAACE,UAAU,GAAG;EACjBK,GAAG,EAAE,CAAC;EACNC,GAAG,EAAEA,CAACC,GAAG,EAAEC,GAAG,KAAK;IACf,MAAMC,SAAS,GAAGR,MAAM,CAACS,oBAAoB,CAACH,GAAG,EAAEC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;IAC7D,MAAMG,IAAI,GAAGV,MAAM,CAACS,oBAAoB,CAACH,GAAG,EAAEC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;IACxD,MAAMI,QAAQ,GAAGX,MAAM,CAACS,oBAAoB,CAACH,GAAG,EAAEC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI;IACnE,IAAIC,SAAS,GAAG,CAAC,EAAE;MACf,OAAO;QACHI,IAAI,EAAEZ,MAAM,CAACS,oBAAoB,CAACH,GAAG,EAAEC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACjDM,MAAM,EAAEb,MAAM,CAACS,oBAAoB,CAACH,GAAG,EAAEC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACnDO,UAAU,EAAGJ,IAAI,GAAG,CAACC,QAAQ,GAAGA;MACpC,CAAC;IACL;IACA,OAAOI,SAAS;EACpB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}