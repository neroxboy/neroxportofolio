{"ast":null,"code":"const CiphertextMessage = require('./ciphertext_message');\nconst protobufs = require('./protobufs');\nclass SenderKeyDistributionMessage extends CiphertextMessage {\n  constructor(id = null, iteration = null, chainKey = null, signatureKey = null, serialized = null) {\n    super();\n    if (serialized) {\n      try {\n        const version = serialized[0];\n        const message = serialized.slice(1);\n        const distributionMessage = protobufs.SenderKeyDistributionMessage.decode(message).toJSON();\n        this.serialized = serialized;\n        this.id = distributionMessage.id;\n        this.iteration = distributionMessage.iteration;\n        this.chainKey = distributionMessage.chainKey;\n        this.signatureKey = distributionMessage.signingKey;\n      } catch (e) {\n        throw new Error(e);\n      }\n    } else {\n      const version = this.intsToByteHighAndLow(this.CURRENT_VERSION, this.CURRENT_VERSION);\n      this.id = id;\n      this.iteration = iteration;\n      this.chainKey = chainKey;\n      this.signatureKey = signatureKey;\n      const message = protobufs.SenderKeyDistributionMessage.encode(protobufs.SenderKeyDistributionMessage.create({\n        id,\n        iteration,\n        chainKey,\n        signingKey: this.signatureKey\n      })).finish();\n      this.serialized = Buffer.concat([Buffer.from([version]), message]);\n    }\n  }\n  intsToByteHighAndLow(highValue, lowValue) {\n    return ((highValue << 4 | lowValue) & 0xff) % 256;\n  }\n  serialize() {\n    return this.serialized;\n  }\n  getType() {\n    return this.SENDERKEY_DISTRIBUTION_TYPE;\n  }\n  getIteration() {\n    return this.iteration;\n  }\n  getChainKey() {\n    return typeof this.chainKey === 'string' ? Buffer.from(this.chainKey, 'base64') : this.chainKey;\n  }\n  getSignatureKey() {\n    return typeof this.signatureKey === 'string' ? Buffer.from(this.signatureKey, 'base64') : this.signatureKey;\n  }\n  getId() {\n    return this.id;\n  }\n}\nmodule.exports = SenderKeyDistributionMessage;","map":{"version":3,"names":["CiphertextMessage","require","protobufs","SenderKeyDistributionMessage","constructor","id","iteration","chainKey","signatureKey","serialized","version","message","slice","distributionMessage","decode","toJSON","signingKey","e","Error","intsToByteHighAndLow","CURRENT_VERSION","encode","create","finish","Buffer","concat","from","highValue","lowValue","serialize","getType","SENDERKEY_DISTRIBUTION_TYPE","getIteration","getChainKey","getSignatureKey","getId","module","exports"],"sources":["C:/Users/vanitas/node_modules/@whiskeysockets/baileys/WASignalGroup/sender_key_distribution_message.js"],"sourcesContent":["const CiphertextMessage = require('./ciphertext_message');\nconst protobufs = require('./protobufs');\n\nclass SenderKeyDistributionMessage extends CiphertextMessage {\n  constructor(\n    id = null,\n    iteration = null,\n    chainKey = null,\n    signatureKey = null,\n    serialized = null\n  ) {\n    super();\n    if (serialized) {\n      try {\n        const version = serialized[0];\n        const message = serialized.slice(1);\n\n        const distributionMessage = protobufs.SenderKeyDistributionMessage.decode(\n          message\n        ).toJSON();\n        this.serialized = serialized;\n        this.id = distributionMessage.id;\n        this.iteration = distributionMessage.iteration;\n        this.chainKey = distributionMessage.chainKey;\n        this.signatureKey = distributionMessage.signingKey;\n      } catch (e) {\n        throw new Error(e);\n      }\n    } else {\n      const version = this.intsToByteHighAndLow(this.CURRENT_VERSION, this.CURRENT_VERSION);\n      this.id = id;\n      this.iteration = iteration;\n      this.chainKey = chainKey;\n      this.signatureKey = signatureKey;\n      const message = protobufs.SenderKeyDistributionMessage.encode(\n        protobufs.SenderKeyDistributionMessage.create({\n          id,\n          iteration,\n          chainKey,\n          signingKey: this.signatureKey,\n        })\n      ).finish();\n      this.serialized = Buffer.concat([Buffer.from([version]), message]);\n    }\n  }\n\n  intsToByteHighAndLow(highValue, lowValue) {\n    return (((highValue << 4) | lowValue) & 0xff) % 256;\n  }\n\n  serialize() {\n    return this.serialized;\n  }\n\n  getType() {\n    return this.SENDERKEY_DISTRIBUTION_TYPE;\n  }\n\n  getIteration() {\n    return this.iteration;\n  }\n\n  getChainKey() {\n    return typeof this.chainKey === 'string' ? Buffer.from(this.chainKey, 'base64') : this.chainKey;\n  }\n\n  getSignatureKey() {\n    return typeof this.signatureKey === 'string'\n      ? Buffer.from(this.signatureKey, 'base64')\n      : this.signatureKey;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n\nmodule.exports = SenderKeyDistributionMessage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}