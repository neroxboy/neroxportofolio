{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonTagMapper = void 0;\nclass CommonTagMapper {\n  static toIntOrNull(str) {\n    const cleaned = parseInt(str, 10);\n    return isNaN(cleaned) ? null : cleaned;\n  }\n  // TODO: a string of 1of1 would fail to be converted\n  // converts 1/10 to no : 1, of : 10\n  // or 1 to no : 1, of : 0\n  static normalizeTrack(origVal) {\n    const split = origVal.toString().split('/');\n    return {\n      no: parseInt(split[0], 10) || null,\n      of: parseInt(split[1], 10) || null\n    };\n  }\n  constructor(tagTypes, tagMap) {\n    this.tagTypes = tagTypes;\n    this.tagMap = tagMap;\n  }\n  /**\n   * Process and set common tags\n   * write common tags to\n   * @param tag Native tag\n   * @param warnings Register warnings\n   * @return common name\n   */\n  mapGenericTag(tag, warnings) {\n    tag = {\n      id: tag.id,\n      value: tag.value\n    }; // clone object\n    this.postMap(tag, warnings);\n    // Convert native tag event to generic 'alias' tag\n    const id = this.getCommonName(tag.id);\n    return id ? {\n      id,\n      value: tag.value\n    } : null;\n  }\n  /**\n   * Convert native tag key to common tag key\n   * @tag  Native header tag\n   * @return common tag name (alias)\n   */\n  getCommonName(tag) {\n    return this.tagMap[tag];\n  }\n  /**\n   * Handle post mapping exceptions / correction\n   * @param tag Tag e.g. {\"©alb\", \"Buena Vista Social Club\")\n   * @param warnings Used to register warnings\n   */\n  postMap(tag, warnings) {\n    return;\n  }\n}\nCommonTagMapper.maxRatingScore = 1;\nexports.CommonTagMapper = CommonTagMapper;","map":{"version":3,"names":["Object","defineProperty","exports","value","CommonTagMapper","toIntOrNull","str","cleaned","parseInt","isNaN","normalizeTrack","origVal","split","toString","no","of","constructor","tagTypes","tagMap","mapGenericTag","tag","warnings","id","postMap","getCommonName","maxRatingScore"],"sources":["C:/Users/vanitas/node_modules/music-metadata/lib/common/GenericTagMapper.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommonTagMapper = void 0;\nclass CommonTagMapper {\n    static toIntOrNull(str) {\n        const cleaned = parseInt(str, 10);\n        return isNaN(cleaned) ? null : cleaned;\n    }\n    // TODO: a string of 1of1 would fail to be converted\n    // converts 1/10 to no : 1, of : 10\n    // or 1 to no : 1, of : 0\n    static normalizeTrack(origVal) {\n        const split = origVal.toString().split('/');\n        return {\n            no: parseInt(split[0], 10) || null,\n            of: parseInt(split[1], 10) || null\n        };\n    }\n    constructor(tagTypes, tagMap) {\n        this.tagTypes = tagTypes;\n        this.tagMap = tagMap;\n    }\n    /**\n     * Process and set common tags\n     * write common tags to\n     * @param tag Native tag\n     * @param warnings Register warnings\n     * @return common name\n     */\n    mapGenericTag(tag, warnings) {\n        tag = { id: tag.id, value: tag.value }; // clone object\n        this.postMap(tag, warnings);\n        // Convert native tag event to generic 'alias' tag\n        const id = this.getCommonName(tag.id);\n        return id ? { id, value: tag.value } : null;\n    }\n    /**\n     * Convert native tag key to common tag key\n     * @tag  Native header tag\n     * @return common tag name (alias)\n     */\n    getCommonName(tag) {\n        return this.tagMap[tag];\n    }\n    /**\n     * Handle post mapping exceptions / correction\n     * @param tag Tag e.g. {\"©alb\", \"Buena Vista Social Club\")\n     * @param warnings Used to register warnings\n     */\n    postMap(tag, warnings) {\n        return;\n    }\n}\nCommonTagMapper.maxRatingScore = 1;\nexports.CommonTagMapper = CommonTagMapper;\n//# sourceMappingURL=GenericTagMapper.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAChC,MAAMA,eAAe,CAAC;EAClB,OAAOC,WAAWA,CAACC,GAAG,EAAE;IACpB,MAAMC,OAAO,GAAGC,QAAQ,CAACF,GAAG,EAAE,EAAE,CAAC;IACjC,OAAOG,KAAK,CAACF,OAAO,CAAC,GAAG,IAAI,GAAGA,OAAO;EAC1C;EACA;EACA;EACA;EACA,OAAOG,cAAcA,CAACC,OAAO,EAAE;IAC3B,MAAMC,KAAK,GAAGD,OAAO,CAACE,QAAQ,CAAC,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC;IAC3C,OAAO;MACHE,EAAE,EAAEN,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,IAAI;MAClCG,EAAE,EAAEP,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI;IAClC,CAAC;EACL;EACAI,WAAWA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IAC1B,IAAI,CAACD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,aAAaA,CAACC,GAAG,EAAEC,QAAQ,EAAE;IACzBD,GAAG,GAAG;MAAEE,EAAE,EAAEF,GAAG,CAACE,EAAE;MAAEnB,KAAK,EAAEiB,GAAG,CAACjB;IAAM,CAAC,CAAC,CAAC;IACxC,IAAI,CAACoB,OAAO,CAACH,GAAG,EAAEC,QAAQ,CAAC;IAC3B;IACA,MAAMC,EAAE,GAAG,IAAI,CAACE,aAAa,CAACJ,GAAG,CAACE,EAAE,CAAC;IACrC,OAAOA,EAAE,GAAG;MAAEA,EAAE;MAAEnB,KAAK,EAAEiB,GAAG,CAACjB;IAAM,CAAC,GAAG,IAAI;EAC/C;EACA;AACJ;AACA;AACA;AACA;EACIqB,aAAaA,CAACJ,GAAG,EAAE;IACf,OAAO,IAAI,CAACF,MAAM,CAACE,GAAG,CAAC;EAC3B;EACA;AACJ;AACA;AACA;AACA;EACIG,OAAOA,CAACH,GAAG,EAAEC,QAAQ,EAAE;IACnB;EACJ;AACJ;AACAjB,eAAe,CAACqB,cAAc,GAAG,CAAC;AAClCvB,OAAO,CAACE,eAAe,GAAGA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}