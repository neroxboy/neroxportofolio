{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bytesToCrockford = exports.trimUndefined = exports.isWABusinessPlatform = exports.getCodeFromWSError = exports.getCallStatusFromNode = exports.getErrorCodeFromStreamError = exports.getStatusFromReceiptType = exports.generateMdTagPrefix = exports.fetchLatestWaWebVersion = exports.fetchLatestBaileysVersion = exports.printQRIfNecessaryListener = exports.bindWaitForConnectionUpdate = exports.bindWaitForEvent = exports.generateMessageID = exports.generateMessageIDV2 = exports.promiseTimeout = exports.delayCancellable = exports.delay = exports.debouncedTimeout = exports.unixTimestampSeconds = exports.toNumber = exports.encodeBigEndian = exports.generateRegistrationId = exports.encodeWAMessage = exports.unpadRandomMax16 = exports.writeRandomPadMax16 = exports.getKeyAuthor = exports.BufferJSON = exports.getPlatformId = exports.Browsers = void 0;\nconst boom_1 = require(\"@hapi/boom\");\nconst axios_1 = __importDefault(require(\"axios\"));\nconst crypto_1 = require(\"crypto\");\nconst os_1 = require(\"os\");\nconst WAProto_1 = require(\"../../WAProto\");\nconst baileys_version_json_1 = require(\"../Defaults/baileys-version.json\");\nconst Types_1 = require(\"../Types\");\nconst WABinary_1 = require(\"../WABinary\");\nconst PLATFORM_MAP = {\n  'aix': 'AIX',\n  'darwin': 'Mac OS',\n  'win32': 'Windows',\n  'android': 'Android',\n  'freebsd': 'FreeBSD',\n  'openbsd': 'OpenBSD',\n  'sunos': 'Solaris'\n};\nexports.Browsers = {\n  ubuntu: browser => ['Ubuntu', browser, '22.04.4'],\n  macOS: browser => ['Mac OS', browser, '14.4.1'],\n  baileys: browser => ['Baileys', browser, '6.5.0'],\n  windows: browser => ['Windows', browser, '10.0.22631'],\n  /** The appropriate browser based on your OS & release */\n  appropriate: browser => [PLATFORM_MAP[(0, os_1.platform)()] || 'Ubuntu', browser, (0, os_1.release)()]\n};\nconst getPlatformId = browser => {\n  const platformType = WAProto_1.proto.DeviceProps.PlatformType[browser.toUpperCase()];\n  return platformType ? platformType.toString().charCodeAt(0).toString() : '49'; //chrome\n};\nexports.getPlatformId = getPlatformId;\nexports.BufferJSON = {\n  replacer: (k, value) => {\n    if (Buffer.isBuffer(value) || value instanceof Uint8Array || (value === null || value === void 0 ? void 0 : value.type) === 'Buffer') {\n      return {\n        type: 'Buffer',\n        data: Buffer.from((value === null || value === void 0 ? void 0 : value.data) || value).toString('base64')\n      };\n    }\n    return value;\n  },\n  reviver: (_, value) => {\n    if (typeof value === 'object' && !!value && (value.buffer === true || value.type === 'Buffer')) {\n      const val = value.data || value.value;\n      return typeof val === 'string' ? Buffer.from(val, 'base64') : Buffer.from(val || []);\n    }\n    return value;\n  }\n};\nconst getKeyAuthor = (key, meId = 'me') => ((key === null || key === void 0 ? void 0 : key.fromMe) ? meId : (key === null || key === void 0 ? void 0 : key.participant) || (key === null || key === void 0 ? void 0 : key.remoteJid)) || '';\nexports.getKeyAuthor = getKeyAuthor;\nconst writeRandomPadMax16 = msg => {\n  const pad = (0, crypto_1.randomBytes)(1);\n  pad[0] &= 0xf;\n  if (!pad[0]) {\n    pad[0] = 0xf;\n  }\n  return Buffer.concat([msg, Buffer.alloc(pad[0], pad[0])]);\n};\nexports.writeRandomPadMax16 = writeRandomPadMax16;\nconst unpadRandomMax16 = e => {\n  const t = new Uint8Array(e);\n  if (0 === t.length) {\n    throw new Error('unpadPkcs7 given empty bytes');\n  }\n  var r = t[t.length - 1];\n  if (r > t.length) {\n    throw new Error(`unpad given ${t.length} bytes, but pad is ${r}`);\n  }\n  return new Uint8Array(t.buffer, t.byteOffset, t.length - r);\n};\nexports.unpadRandomMax16 = unpadRandomMax16;\nconst encodeWAMessage = message => (0, exports.writeRandomPadMax16)(WAProto_1.proto.Message.encode(message).finish());\nexports.encodeWAMessage = encodeWAMessage;\nconst generateRegistrationId = () => {\n  return Uint16Array.from((0, crypto_1.randomBytes)(2))[0] & 16383;\n};\nexports.generateRegistrationId = generateRegistrationId;\nconst encodeBigEndian = (e, t = 4) => {\n  let r = e;\n  const a = new Uint8Array(t);\n  for (let i = t - 1; i >= 0; i--) {\n    a[i] = 255 & r;\n    r >>>= 8;\n  }\n  return a;\n};\nexports.encodeBigEndian = encodeBigEndian;\nconst toNumber = t => typeof t === 'object' && t ? 'toNumber' in t ? t.toNumber() : t.low : t;\nexports.toNumber = toNumber;\n/** unix timestamp of a date in seconds */\nconst unixTimestampSeconds = (date = new Date()) => Math.floor(date.getTime() / 1000);\nexports.unixTimestampSeconds = unixTimestampSeconds;\nconst debouncedTimeout = (intervalMs = 1000, task) => {\n  let timeout;\n  return {\n    start: (newIntervalMs, newTask) => {\n      task = newTask || task;\n      intervalMs = newIntervalMs || intervalMs;\n      timeout && clearTimeout(timeout);\n      timeout = setTimeout(() => task === null || task === void 0 ? void 0 : task(), intervalMs);\n    },\n    cancel: () => {\n      timeout && clearTimeout(timeout);\n      timeout = undefined;\n    },\n    setTask: newTask => task = newTask,\n    setInterval: newInterval => intervalMs = newInterval\n  };\n};\nexports.debouncedTimeout = debouncedTimeout;\nconst delay = ms => (0, exports.delayCancellable)(ms).delay;\nexports.delay = delay;\nconst delayCancellable = ms => {\n  const stack = new Error().stack;\n  let timeout;\n  let reject;\n  const delay = new Promise((resolve, _reject) => {\n    timeout = setTimeout(resolve, ms);\n    reject = _reject;\n  });\n  const cancel = () => {\n    clearTimeout(timeout);\n    reject(new boom_1.Boom('Cancelled', {\n      statusCode: 500,\n      data: {\n        stack\n      }\n    }));\n  };\n  return {\n    delay,\n    cancel\n  };\n};\nexports.delayCancellable = delayCancellable;\nasync function promiseTimeout(ms, promise) {\n  if (!ms) {\n    return new Promise(promise);\n  }\n  const stack = new Error().stack;\n  // Create a promise that rejects in <ms> milliseconds\n  const {\n    delay,\n    cancel\n  } = (0, exports.delayCancellable)(ms);\n  const p = new Promise((resolve, reject) => {\n    delay.then(() => reject(new boom_1.Boom('Timed Out', {\n      statusCode: Types_1.DisconnectReason.timedOut,\n      data: {\n        stack\n      }\n    }))).catch(err => reject(err));\n    promise(resolve, reject);\n  }).finally(cancel);\n  return p;\n}\nexports.promiseTimeout = promiseTimeout;\n// inspired from whatsmeow code\n// https://github.com/tulir/whatsmeow/blob/64bc969fbe78d31ae0dd443b8d4c80a5d026d07a/send.go#L42\nconst generateMessageIDV2 = userId => {\n  const data = Buffer.alloc(8 + 20 + 16);\n  data.writeBigUInt64BE(BigInt(Math.floor(Date.now() / 1000)));\n  if (userId) {\n    const id = (0, WABinary_1.jidDecode)(userId);\n    if (id === null || id === void 0 ? void 0 : id.user) {\n      data.write(id.user, 8);\n      data.write('@c.us', 8 + id.user.length);\n    }\n  }\n  const random = (0, crypto_1.randomBytes)(16);\n  random.copy(data, 28);\n  const hash = (0, crypto_1.createHash)('sha256').update(data).digest();\n  return '3EB0' + hash.toString('hex').toUpperCase().substring(0, 18);\n};\nexports.generateMessageIDV2 = generateMessageIDV2;\n// generate a random ID to attach to a message\nconst generateMessageID = () => '3EB0' + (0, crypto_1.randomBytes)(18).toString('hex').toUpperCase();\nexports.generateMessageID = generateMessageID;\nfunction bindWaitForEvent(ev, event) {\n  return async (check, timeoutMs) => {\n    let listener;\n    let closeListener;\n    await promiseTimeout(timeoutMs, (resolve, reject) => {\n      closeListener = ({\n        connection,\n        lastDisconnect\n      }) => {\n        if (connection === 'close') {\n          reject((lastDisconnect === null || lastDisconnect === void 0 ? void 0 : lastDisconnect.error) || new boom_1.Boom('Connection Closed', {\n            statusCode: Types_1.DisconnectReason.connectionClosed\n          }));\n        }\n      };\n      ev.on('connection.update', closeListener);\n      listener = update => {\n        if (check(update)) {\n          resolve();\n        }\n      };\n      ev.on(event, listener);\n    }).finally(() => {\n      ev.off(event, listener);\n      ev.off('connection.update', closeListener);\n    });\n  };\n}\nexports.bindWaitForEvent = bindWaitForEvent;\nconst bindWaitForConnectionUpdate = ev => bindWaitForEvent(ev, 'connection.update');\nexports.bindWaitForConnectionUpdate = bindWaitForConnectionUpdate;\nconst printQRIfNecessaryListener = (ev, logger) => {\n  ev.on('connection.update', async ({\n    qr\n  }) => {\n    if (qr) {\n      const QR = await import('qrcode-terminal').then(m => m.default || m).catch(() => {\n        logger.error('QR code terminal not added as dependency');\n      });\n      QR === null || QR === void 0 ? void 0 : QR.generate(qr, {\n        small: true\n      });\n    }\n  });\n};\nexports.printQRIfNecessaryListener = printQRIfNecessaryListener;\n/**\n * utility that fetches latest baileys version from the master branch.\n * Use to ensure your WA connection is always on the latest version\n */\nconst fetchLatestBaileysVersion = async (options = {}) => {\n  const URL = 'https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/src/Defaults/baileys-version.json';\n  try {\n    const result = await axios_1.default.get(URL, {\n      ...options,\n      responseType: 'json'\n    });\n    return {\n      version: result.data.version,\n      isLatest: true\n    };\n  } catch (error) {\n    return {\n      version: baileys_version_json_1.version,\n      isLatest: false,\n      error\n    };\n  }\n};\nexports.fetchLatestBaileysVersion = fetchLatestBaileysVersion;\n/**\n * A utility that fetches the latest web version of whatsapp.\n * Use to ensure your WA connection is always on the latest version\n */\nconst fetchLatestWaWebVersion = async options => {\n  try {\n    const result = await axios_1.default.get('https://web.whatsapp.com/check-update?version=1&platform=web', {\n      ...options,\n      responseType: 'json'\n    });\n    const version = result.data.currentVersion.split('.');\n    return {\n      version: [+version[0], +version[1], +version[2]],\n      isLatest: true\n    };\n  } catch (error) {\n    return {\n      version: baileys_version_json_1.version,\n      isLatest: false,\n      error\n    };\n  }\n};\nexports.fetchLatestWaWebVersion = fetchLatestWaWebVersion;\n/** unique message tag prefix for MD clients */\nconst generateMdTagPrefix = () => {\n  const bytes = (0, crypto_1.randomBytes)(4);\n  return `${bytes.readUInt16BE()}.${bytes.readUInt16BE(2)}-`;\n};\nexports.generateMdTagPrefix = generateMdTagPrefix;\nconst STATUS_MAP = {\n  'played': WAProto_1.proto.WebMessageInfo.Status.PLAYED,\n  'read': WAProto_1.proto.WebMessageInfo.Status.READ,\n  'read-self': WAProto_1.proto.WebMessageInfo.Status.READ\n};\n/**\n * Given a type of receipt, returns what the new status of the message should be\n * @param type type from receipt\n */\nconst getStatusFromReceiptType = type => {\n  const status = STATUS_MAP[type];\n  if (typeof type === 'undefined') {\n    return WAProto_1.proto.WebMessageInfo.Status.DELIVERY_ACK;\n  }\n  return status;\n};\nexports.getStatusFromReceiptType = getStatusFromReceiptType;\nconst CODE_MAP = {\n  conflict: Types_1.DisconnectReason.connectionReplaced\n};\n/**\n * Stream errors generally provide a reason, map that to a baileys DisconnectReason\n * @param reason the string reason given, eg. \"conflict\"\n */\nconst getErrorCodeFromStreamError = node => {\n  const [reasonNode] = (0, WABinary_1.getAllBinaryNodeChildren)(node);\n  let reason = (reasonNode === null || reasonNode === void 0 ? void 0 : reasonNode.tag) || 'unknown';\n  const statusCode = +(node.attrs.code || CODE_MAP[reason] || Types_1.DisconnectReason.badSession);\n  if (statusCode === Types_1.DisconnectReason.restartRequired) {\n    reason = 'restart required';\n  }\n  return {\n    reason,\n    statusCode\n  };\n};\nexports.getErrorCodeFromStreamError = getErrorCodeFromStreamError;\nconst getCallStatusFromNode = ({\n  tag,\n  attrs\n}) => {\n  let status;\n  switch (tag) {\n    case 'offer':\n    case 'offer_notice':\n      status = 'offer';\n      break;\n    case 'terminate':\n      if (attrs.reason === 'timeout') {\n        status = 'timeout';\n      } else {\n        //fired when accepted/rejected/timeout/caller hangs up\n        status = 'terminate';\n      }\n      break;\n    case 'reject':\n      status = 'reject';\n      break;\n    case 'accept':\n      status = 'accept';\n      break;\n    default:\n      status = 'ringing';\n      break;\n  }\n  return status;\n};\nexports.getCallStatusFromNode = getCallStatusFromNode;\nconst UNEXPECTED_SERVER_CODE_TEXT = 'Unexpected server response: ';\nconst getCodeFromWSError = error => {\n  var _a, _b, _c;\n  let statusCode = 500;\n  if ((_a = error === null || error === void 0 ? void 0 : error.message) === null || _a === void 0 ? void 0 : _a.includes(UNEXPECTED_SERVER_CODE_TEXT)) {\n    const code = +(error === null || error === void 0 ? void 0 : error.message.slice(UNEXPECTED_SERVER_CODE_TEXT.length));\n    if (!Number.isNaN(code) && code >= 400) {\n      statusCode = code;\n    }\n  } else if (((_b = error === null || error === void 0 ? void 0 : error.code) === null || _b === void 0 ? void 0 : _b.startsWith('E')) || ((_c = error === null || error === void 0 ? void 0 : error.message) === null || _c === void 0 ? void 0 : _c.includes('timed out'))) {\n    // handle ETIMEOUT, ENOTFOUND etc\n    statusCode = 408;\n  }\n  return statusCode;\n};\nexports.getCodeFromWSError = getCodeFromWSError;\n/**\n * Is the given platform WA business\n * @param platform AuthenticationCreds.platform\n */\nconst isWABusinessPlatform = platform => {\n  return platform === 'smbi' || platform === 'smba';\n};\nexports.isWABusinessPlatform = isWABusinessPlatform;\nfunction trimUndefined(obj) {\n  for (const key in obj) {\n    if (typeof obj[key] === 'undefined') {\n      delete obj[key];\n    }\n  }\n  return obj;\n}\nexports.trimUndefined = trimUndefined;\nconst CROCKFORD_CHARACTERS = '123456789ABCDEFGHJKLMNPQRSTVWXYZ';\nfunction bytesToCrockford(buffer) {\n  let value = 0;\n  let bitCount = 0;\n  const crockford = [];\n  for (let i = 0; i < buffer.length; i++) {\n    value = value << 8 | buffer[i] & 0xff;\n    bitCount += 8;\n    while (bitCount >= 5) {\n      crockford.push(CROCKFORD_CHARACTERS.charAt(value >>> bitCount - 5 & 31));\n      bitCount -= 5;\n    }\n  }\n  if (bitCount > 0) {\n    crockford.push(CROCKFORD_CHARACTERS.charAt(value << 5 - bitCount & 31));\n  }\n  return crockford.join('');\n}\nexports.bytesToCrockford = bytesToCrockford;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","bytesToCrockford","trimUndefined","isWABusinessPlatform","getCodeFromWSError","getCallStatusFromNode","getErrorCodeFromStreamError","getStatusFromReceiptType","generateMdTagPrefix","fetchLatestWaWebVersion","fetchLatestBaileysVersion","printQRIfNecessaryListener","bindWaitForConnectionUpdate","bindWaitForEvent","generateMessageID","generateMessageIDV2","promiseTimeout","delayCancellable","delay","debouncedTimeout","unixTimestampSeconds","toNumber","encodeBigEndian","generateRegistrationId","encodeWAMessage","unpadRandomMax16","writeRandomPadMax16","getKeyAuthor","BufferJSON","getPlatformId","Browsers","boom_1","require","axios_1","crypto_1","os_1","WAProto_1","baileys_version_json_1","Types_1","WABinary_1","PLATFORM_MAP","ubuntu","browser","macOS","baileys","windows","appropriate","platform","release","platformType","proto","DeviceProps","PlatformType","toUpperCase","toString","charCodeAt","replacer","k","Buffer","isBuffer","Uint8Array","type","data","from","reviver","_","buffer","val","key","meId","fromMe","participant","remoteJid","msg","pad","randomBytes","concat","alloc","e","t","length","Error","r","byteOffset","message","Message","encode","finish","Uint16Array","a","i","low","date","Date","Math","floor","getTime","intervalMs","task","timeout","start","newIntervalMs","newTask","clearTimeout","setTimeout","cancel","undefined","setTask","setInterval","newInterval","ms","stack","reject","Promise","resolve","_reject","Boom","statusCode","promise","p","then","DisconnectReason","timedOut","catch","err","finally","userId","writeBigUInt64BE","BigInt","now","id","jidDecode","user","write","random","copy","hash","createHash","update","digest","substring","ev","event","check","timeoutMs","listener","closeListener","connection","lastDisconnect","error","connectionClosed","on","off","logger","qr","QR","m","default","generate","small","options","URL","result","get","responseType","version","isLatest","currentVersion","split","bytes","readUInt16BE","STATUS_MAP","WebMessageInfo","Status","PLAYED","READ","status","DELIVERY_ACK","CODE_MAP","conflict","connectionReplaced","node","reasonNode","getAllBinaryNodeChildren","reason","tag","attrs","code","badSession","restartRequired","UNEXPECTED_SERVER_CODE_TEXT","_a","_b","_c","includes","slice","Number","isNaN","startsWith","obj","CROCKFORD_CHARACTERS","bitCount","crockford","push","charAt","join"],"sources":["C:/Users/vanitas/node_modules/@whiskeysockets/baileys/lib/Utils/generics.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytesToCrockford = exports.trimUndefined = exports.isWABusinessPlatform = exports.getCodeFromWSError = exports.getCallStatusFromNode = exports.getErrorCodeFromStreamError = exports.getStatusFromReceiptType = exports.generateMdTagPrefix = exports.fetchLatestWaWebVersion = exports.fetchLatestBaileysVersion = exports.printQRIfNecessaryListener = exports.bindWaitForConnectionUpdate = exports.bindWaitForEvent = exports.generateMessageID = exports.generateMessageIDV2 = exports.promiseTimeout = exports.delayCancellable = exports.delay = exports.debouncedTimeout = exports.unixTimestampSeconds = exports.toNumber = exports.encodeBigEndian = exports.generateRegistrationId = exports.encodeWAMessage = exports.unpadRandomMax16 = exports.writeRandomPadMax16 = exports.getKeyAuthor = exports.BufferJSON = exports.getPlatformId = exports.Browsers = void 0;\nconst boom_1 = require(\"@hapi/boom\");\nconst axios_1 = __importDefault(require(\"axios\"));\nconst crypto_1 = require(\"crypto\");\nconst os_1 = require(\"os\");\nconst WAProto_1 = require(\"../../WAProto\");\nconst baileys_version_json_1 = require(\"../Defaults/baileys-version.json\");\nconst Types_1 = require(\"../Types\");\nconst WABinary_1 = require(\"../WABinary\");\nconst PLATFORM_MAP = {\n    'aix': 'AIX',\n    'darwin': 'Mac OS',\n    'win32': 'Windows',\n    'android': 'Android',\n    'freebsd': 'FreeBSD',\n    'openbsd': 'OpenBSD',\n    'sunos': 'Solaris'\n};\nexports.Browsers = {\n    ubuntu: (browser) => ['Ubuntu', browser, '22.04.4'],\n    macOS: (browser) => ['Mac OS', browser, '14.4.1'],\n    baileys: (browser) => ['Baileys', browser, '6.5.0'],\n    windows: (browser) => ['Windows', browser, '10.0.22631'],\n    /** The appropriate browser based on your OS & release */\n    appropriate: (browser) => [PLATFORM_MAP[(0, os_1.platform)()] || 'Ubuntu', browser, (0, os_1.release)()]\n};\nconst getPlatformId = (browser) => {\n    const platformType = WAProto_1.proto.DeviceProps.PlatformType[browser.toUpperCase()];\n    return platformType ? platformType.toString().charCodeAt(0).toString() : '49'; //chrome\n};\nexports.getPlatformId = getPlatformId;\nexports.BufferJSON = {\n    replacer: (k, value) => {\n        if (Buffer.isBuffer(value) || value instanceof Uint8Array || (value === null || value === void 0 ? void 0 : value.type) === 'Buffer') {\n            return { type: 'Buffer', data: Buffer.from((value === null || value === void 0 ? void 0 : value.data) || value).toString('base64') };\n        }\n        return value;\n    },\n    reviver: (_, value) => {\n        if (typeof value === 'object' && !!value && (value.buffer === true || value.type === 'Buffer')) {\n            const val = value.data || value.value;\n            return typeof val === 'string' ? Buffer.from(val, 'base64') : Buffer.from(val || []);\n        }\n        return value;\n    }\n};\nconst getKeyAuthor = (key, meId = 'me') => (((key === null || key === void 0 ? void 0 : key.fromMe) ? meId : (key === null || key === void 0 ? void 0 : key.participant) || (key === null || key === void 0 ? void 0 : key.remoteJid)) || '');\nexports.getKeyAuthor = getKeyAuthor;\nconst writeRandomPadMax16 = (msg) => {\n    const pad = (0, crypto_1.randomBytes)(1);\n    pad[0] &= 0xf;\n    if (!pad[0]) {\n        pad[0] = 0xf;\n    }\n    return Buffer.concat([msg, Buffer.alloc(pad[0], pad[0])]);\n};\nexports.writeRandomPadMax16 = writeRandomPadMax16;\nconst unpadRandomMax16 = (e) => {\n    const t = new Uint8Array(e);\n    if (0 === t.length) {\n        throw new Error('unpadPkcs7 given empty bytes');\n    }\n    var r = t[t.length - 1];\n    if (r > t.length) {\n        throw new Error(`unpad given ${t.length} bytes, but pad is ${r}`);\n    }\n    return new Uint8Array(t.buffer, t.byteOffset, t.length - r);\n};\nexports.unpadRandomMax16 = unpadRandomMax16;\nconst encodeWAMessage = (message) => ((0, exports.writeRandomPadMax16)(WAProto_1.proto.Message.encode(message).finish()));\nexports.encodeWAMessage = encodeWAMessage;\nconst generateRegistrationId = () => {\n    return Uint16Array.from((0, crypto_1.randomBytes)(2))[0] & 16383;\n};\nexports.generateRegistrationId = generateRegistrationId;\nconst encodeBigEndian = (e, t = 4) => {\n    let r = e;\n    const a = new Uint8Array(t);\n    for (let i = t - 1; i >= 0; i--) {\n        a[i] = 255 & r;\n        r >>>= 8;\n    }\n    return a;\n};\nexports.encodeBigEndian = encodeBigEndian;\nconst toNumber = (t) => ((typeof t === 'object' && t) ? ('toNumber' in t ? t.toNumber() : t.low) : t);\nexports.toNumber = toNumber;\n/** unix timestamp of a date in seconds */\nconst unixTimestampSeconds = (date = new Date()) => Math.floor(date.getTime() / 1000);\nexports.unixTimestampSeconds = unixTimestampSeconds;\nconst debouncedTimeout = (intervalMs = 1000, task) => {\n    let timeout;\n    return {\n        start: (newIntervalMs, newTask) => {\n            task = newTask || task;\n            intervalMs = newIntervalMs || intervalMs;\n            timeout && clearTimeout(timeout);\n            timeout = setTimeout(() => task === null || task === void 0 ? void 0 : task(), intervalMs);\n        },\n        cancel: () => {\n            timeout && clearTimeout(timeout);\n            timeout = undefined;\n        },\n        setTask: (newTask) => task = newTask,\n        setInterval: (newInterval) => intervalMs = newInterval\n    };\n};\nexports.debouncedTimeout = debouncedTimeout;\nconst delay = (ms) => (0, exports.delayCancellable)(ms).delay;\nexports.delay = delay;\nconst delayCancellable = (ms) => {\n    const stack = new Error().stack;\n    let timeout;\n    let reject;\n    const delay = new Promise((resolve, _reject) => {\n        timeout = setTimeout(resolve, ms);\n        reject = _reject;\n    });\n    const cancel = () => {\n        clearTimeout(timeout);\n        reject(new boom_1.Boom('Cancelled', {\n            statusCode: 500,\n            data: {\n                stack\n            }\n        }));\n    };\n    return { delay, cancel };\n};\nexports.delayCancellable = delayCancellable;\nasync function promiseTimeout(ms, promise) {\n    if (!ms) {\n        return new Promise(promise);\n    }\n    const stack = new Error().stack;\n    // Create a promise that rejects in <ms> milliseconds\n    const { delay, cancel } = (0, exports.delayCancellable)(ms);\n    const p = new Promise((resolve, reject) => {\n        delay\n            .then(() => reject(new boom_1.Boom('Timed Out', {\n            statusCode: Types_1.DisconnectReason.timedOut,\n            data: {\n                stack\n            }\n        })))\n            .catch(err => reject(err));\n        promise(resolve, reject);\n    })\n        .finally(cancel);\n    return p;\n}\nexports.promiseTimeout = promiseTimeout;\n// inspired from whatsmeow code\n// https://github.com/tulir/whatsmeow/blob/64bc969fbe78d31ae0dd443b8d4c80a5d026d07a/send.go#L42\nconst generateMessageIDV2 = (userId) => {\n    const data = Buffer.alloc(8 + 20 + 16);\n    data.writeBigUInt64BE(BigInt(Math.floor(Date.now() / 1000)));\n    if (userId) {\n        const id = (0, WABinary_1.jidDecode)(userId);\n        if (id === null || id === void 0 ? void 0 : id.user) {\n            data.write(id.user, 8);\n            data.write('@c.us', 8 + id.user.length);\n        }\n    }\n    const random = (0, crypto_1.randomBytes)(16);\n    random.copy(data, 28);\n    const hash = (0, crypto_1.createHash)('sha256').update(data).digest();\n    return '3EB0' + hash.toString('hex').toUpperCase().substring(0, 18);\n};\nexports.generateMessageIDV2 = generateMessageIDV2;\n// generate a random ID to attach to a message\nconst generateMessageID = () => '3EB0' + (0, crypto_1.randomBytes)(18).toString('hex').toUpperCase();\nexports.generateMessageID = generateMessageID;\nfunction bindWaitForEvent(ev, event) {\n    return async (check, timeoutMs) => {\n        let listener;\n        let closeListener;\n        await (promiseTimeout(timeoutMs, (resolve, reject) => {\n            closeListener = ({ connection, lastDisconnect }) => {\n                if (connection === 'close') {\n                    reject((lastDisconnect === null || lastDisconnect === void 0 ? void 0 : lastDisconnect.error)\n                        || new boom_1.Boom('Connection Closed', { statusCode: Types_1.DisconnectReason.connectionClosed }));\n                }\n            };\n            ev.on('connection.update', closeListener);\n            listener = (update) => {\n                if (check(update)) {\n                    resolve();\n                }\n            };\n            ev.on(event, listener);\n        })\n            .finally(() => {\n            ev.off(event, listener);\n            ev.off('connection.update', closeListener);\n        }));\n    };\n}\nexports.bindWaitForEvent = bindWaitForEvent;\nconst bindWaitForConnectionUpdate = (ev) => bindWaitForEvent(ev, 'connection.update');\nexports.bindWaitForConnectionUpdate = bindWaitForConnectionUpdate;\nconst printQRIfNecessaryListener = (ev, logger) => {\n    ev.on('connection.update', async ({ qr }) => {\n        if (qr) {\n            const QR = await import('qrcode-terminal')\n                .then(m => m.default || m)\n                .catch(() => {\n                logger.error('QR code terminal not added as dependency');\n            });\n            QR === null || QR === void 0 ? void 0 : QR.generate(qr, { small: true });\n        }\n    });\n};\nexports.printQRIfNecessaryListener = printQRIfNecessaryListener;\n/**\n * utility that fetches latest baileys version from the master branch.\n * Use to ensure your WA connection is always on the latest version\n */\nconst fetchLatestBaileysVersion = async (options = {}) => {\n    const URL = 'https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/src/Defaults/baileys-version.json';\n    try {\n        const result = await axios_1.default.get(URL, {\n            ...options,\n            responseType: 'json'\n        });\n        return {\n            version: result.data.version,\n            isLatest: true\n        };\n    }\n    catch (error) {\n        return {\n            version: baileys_version_json_1.version,\n            isLatest: false,\n            error\n        };\n    }\n};\nexports.fetchLatestBaileysVersion = fetchLatestBaileysVersion;\n/**\n * A utility that fetches the latest web version of whatsapp.\n * Use to ensure your WA connection is always on the latest version\n */\nconst fetchLatestWaWebVersion = async (options) => {\n    try {\n        const result = await axios_1.default.get('https://web.whatsapp.com/check-update?version=1&platform=web', {\n            ...options,\n            responseType: 'json'\n        });\n        const version = result.data.currentVersion.split('.');\n        return {\n            version: [+version[0], +version[1], +version[2]],\n            isLatest: true\n        };\n    }\n    catch (error) {\n        return {\n            version: baileys_version_json_1.version,\n            isLatest: false,\n            error\n        };\n    }\n};\nexports.fetchLatestWaWebVersion = fetchLatestWaWebVersion;\n/** unique message tag prefix for MD clients */\nconst generateMdTagPrefix = () => {\n    const bytes = (0, crypto_1.randomBytes)(4);\n    return `${bytes.readUInt16BE()}.${bytes.readUInt16BE(2)}-`;\n};\nexports.generateMdTagPrefix = generateMdTagPrefix;\nconst STATUS_MAP = {\n    'played': WAProto_1.proto.WebMessageInfo.Status.PLAYED,\n    'read': WAProto_1.proto.WebMessageInfo.Status.READ,\n    'read-self': WAProto_1.proto.WebMessageInfo.Status.READ\n};\n/**\n * Given a type of receipt, returns what the new status of the message should be\n * @param type type from receipt\n */\nconst getStatusFromReceiptType = (type) => {\n    const status = STATUS_MAP[type];\n    if (typeof type === 'undefined') {\n        return WAProto_1.proto.WebMessageInfo.Status.DELIVERY_ACK;\n    }\n    return status;\n};\nexports.getStatusFromReceiptType = getStatusFromReceiptType;\nconst CODE_MAP = {\n    conflict: Types_1.DisconnectReason.connectionReplaced\n};\n/**\n * Stream errors generally provide a reason, map that to a baileys DisconnectReason\n * @param reason the string reason given, eg. \"conflict\"\n */\nconst getErrorCodeFromStreamError = (node) => {\n    const [reasonNode] = (0, WABinary_1.getAllBinaryNodeChildren)(node);\n    let reason = (reasonNode === null || reasonNode === void 0 ? void 0 : reasonNode.tag) || 'unknown';\n    const statusCode = +(node.attrs.code || CODE_MAP[reason] || Types_1.DisconnectReason.badSession);\n    if (statusCode === Types_1.DisconnectReason.restartRequired) {\n        reason = 'restart required';\n    }\n    return {\n        reason,\n        statusCode\n    };\n};\nexports.getErrorCodeFromStreamError = getErrorCodeFromStreamError;\nconst getCallStatusFromNode = ({ tag, attrs }) => {\n    let status;\n    switch (tag) {\n        case 'offer':\n        case 'offer_notice':\n            status = 'offer';\n            break;\n        case 'terminate':\n            if (attrs.reason === 'timeout') {\n                status = 'timeout';\n            }\n            else {\n                //fired when accepted/rejected/timeout/caller hangs up\n                status = 'terminate';\n            }\n            break;\n        case 'reject':\n            status = 'reject';\n            break;\n        case 'accept':\n            status = 'accept';\n            break;\n        default:\n            status = 'ringing';\n            break;\n    }\n    return status;\n};\nexports.getCallStatusFromNode = getCallStatusFromNode;\nconst UNEXPECTED_SERVER_CODE_TEXT = 'Unexpected server response: ';\nconst getCodeFromWSError = (error) => {\n    var _a, _b, _c;\n    let statusCode = 500;\n    if ((_a = error === null || error === void 0 ? void 0 : error.message) === null || _a === void 0 ? void 0 : _a.includes(UNEXPECTED_SERVER_CODE_TEXT)) {\n        const code = +(error === null || error === void 0 ? void 0 : error.message.slice(UNEXPECTED_SERVER_CODE_TEXT.length));\n        if (!Number.isNaN(code) && code >= 400) {\n            statusCode = code;\n        }\n    }\n    else if (((_b = error === null || error === void 0 ? void 0 : error.code) === null || _b === void 0 ? void 0 : _b.startsWith('E'))\n        || ((_c = error === null || error === void 0 ? void 0 : error.message) === null || _c === void 0 ? void 0 : _c.includes('timed out'))) { // handle ETIMEOUT, ENOTFOUND etc\n        statusCode = 408;\n    }\n    return statusCode;\n};\nexports.getCodeFromWSError = getCodeFromWSError;\n/**\n * Is the given platform WA business\n * @param platform AuthenticationCreds.platform\n */\nconst isWABusinessPlatform = (platform) => {\n    return platform === 'smbi' || platform === 'smba';\n};\nexports.isWABusinessPlatform = isWABusinessPlatform;\nfunction trimUndefined(obj) {\n    for (const key in obj) {\n        if (typeof obj[key] === 'undefined') {\n            delete obj[key];\n        }\n    }\n    return obj;\n}\nexports.trimUndefined = trimUndefined;\nconst CROCKFORD_CHARACTERS = '123456789ABCDEFGHJKLMNPQRSTVWXYZ';\nfunction bytesToCrockford(buffer) {\n    let value = 0;\n    let bitCount = 0;\n    const crockford = [];\n    for (let i = 0; i < buffer.length; i++) {\n        value = (value << 8) | (buffer[i] & 0xff);\n        bitCount += 8;\n        while (bitCount >= 5) {\n            crockford.push(CROCKFORD_CHARACTERS.charAt((value >>> (bitCount - 5)) & 31));\n            bitCount -= 5;\n        }\n    }\n    if (bitCount > 0) {\n        crockford.push(CROCKFORD_CHARACTERS.charAt((value << (5 - bitCount)) & 31));\n    }\n    return crockford.join('');\n}\nexports.bytesToCrockford = bytesToCrockford;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}