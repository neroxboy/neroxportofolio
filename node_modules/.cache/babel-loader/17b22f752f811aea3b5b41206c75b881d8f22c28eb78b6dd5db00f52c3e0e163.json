{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction makeOrderedDictionary(idGetter) {\n  const array = [];\n  const dict = {};\n  const get = id => dict[id];\n  const update = item => {\n    const id = idGetter(item);\n    const idx = array.findIndex(i => idGetter(i) === id);\n    if (idx >= 0) {\n      array[idx] = item;\n      dict[id] = item;\n    }\n    return false;\n  };\n  const upsert = (item, mode) => {\n    const id = idGetter(item);\n    if (get(id)) {\n      update(item);\n    } else {\n      if (mode === 'append') {\n        array.push(item);\n      } else {\n        array.splice(0, 0, item);\n      }\n      dict[id] = item;\n    }\n  };\n  const remove = item => {\n    const id = idGetter(item);\n    const idx = array.findIndex(i => idGetter(i) === id);\n    if (idx >= 0) {\n      array.splice(idx, 1);\n      delete dict[id];\n      return true;\n    }\n    return false;\n  };\n  return {\n    array,\n    get,\n    upsert,\n    update,\n    remove,\n    updateAssign: (id, update) => {\n      const item = get(id);\n      if (item) {\n        Object.assign(item, update);\n        delete dict[id];\n        dict[idGetter(item)] = item;\n        return true;\n      }\n      return false;\n    },\n    clear: () => {\n      array.splice(0, array.length);\n      Object.keys(dict).forEach(key => {\n        delete dict[key];\n      });\n    },\n    filter: contain => {\n      let i = 0;\n      while (i < array.length) {\n        if (!contain(array[i])) {\n          delete dict[idGetter(array[i])];\n          array.splice(i, 1);\n        } else {\n          i += 1;\n        }\n      }\n    },\n    toJSON: () => array,\n    fromJSON: newItems => {\n      array.splice(0, array.length, ...newItems);\n    }\n  };\n}\nexports.default = makeOrderedDictionary;","map":{"version":3,"names":["Object","defineProperty","exports","value","makeOrderedDictionary","idGetter","array","dict","get","id","update","item","idx","findIndex","i","upsert","mode","push","splice","remove","updateAssign","assign","clear","length","keys","forEach","key","filter","contain","toJSON","fromJSON","newItems","default"],"sources":["C:/Users/vanitas/node_modules/@whiskeysockets/baileys/lib/Store/make-ordered-dictionary.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction makeOrderedDictionary(idGetter) {\n    const array = [];\n    const dict = {};\n    const get = (id) => dict[id];\n    const update = (item) => {\n        const id = idGetter(item);\n        const idx = array.findIndex(i => idGetter(i) === id);\n        if (idx >= 0) {\n            array[idx] = item;\n            dict[id] = item;\n        }\n        return false;\n    };\n    const upsert = (item, mode) => {\n        const id = idGetter(item);\n        if (get(id)) {\n            update(item);\n        }\n        else {\n            if (mode === 'append') {\n                array.push(item);\n            }\n            else {\n                array.splice(0, 0, item);\n            }\n            dict[id] = item;\n        }\n    };\n    const remove = (item) => {\n        const id = idGetter(item);\n        const idx = array.findIndex(i => idGetter(i) === id);\n        if (idx >= 0) {\n            array.splice(idx, 1);\n            delete dict[id];\n            return true;\n        }\n        return false;\n    };\n    return {\n        array,\n        get,\n        upsert,\n        update,\n        remove,\n        updateAssign: (id, update) => {\n            const item = get(id);\n            if (item) {\n                Object.assign(item, update);\n                delete dict[id];\n                dict[idGetter(item)] = item;\n                return true;\n            }\n            return false;\n        },\n        clear: () => {\n            array.splice(0, array.length);\n            Object.keys(dict).forEach(key => {\n                delete dict[key];\n            });\n        },\n        filter: (contain) => {\n            let i = 0;\n            while (i < array.length) {\n                if (!contain(array[i])) {\n                    delete dict[idGetter(array[i])];\n                    array.splice(i, 1);\n                }\n                else {\n                    i += 1;\n                }\n            }\n        },\n        toJSON: () => array,\n        fromJSON: (newItems) => {\n            array.splice(0, array.length, ...newItems);\n        }\n    };\n}\nexports.default = makeOrderedDictionary;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}