{"ast":null,"code":"const {\n  deriveSecrets\n} = require('libsignal/src/crypto');\nclass SenderMessageKey {\n  iteration = 0;\n  iv = Buffer.alloc(0);\n  cipherKey = Buffer.alloc(0);\n  seed = Buffer.alloc(0);\n  constructor(iteration, seed) {\n    const derivative = deriveSecrets(seed, Buffer.alloc(32), Buffer.from('WhisperGroup'));\n    const keys = new Uint8Array(32);\n    keys.set(new Uint8Array(derivative[0].slice(16)));\n    keys.set(new Uint8Array(derivative[1].slice(0, 16)), 16);\n    this.iv = Buffer.from(derivative[0].slice(0, 16));\n    this.cipherKey = Buffer.from(keys.buffer);\n    this.iteration = iteration;\n    this.seed = seed;\n  }\n  getIteration() {\n    return this.iteration;\n  }\n  getIv() {\n    return this.iv;\n  }\n  getCipherKey() {\n    return this.cipherKey;\n  }\n  getSeed() {\n    return this.seed;\n  }\n}\nmodule.exports = SenderMessageKey;","map":{"version":3,"names":["deriveSecrets","require","SenderMessageKey","iteration","iv","Buffer","alloc","cipherKey","seed","constructor","derivative","from","keys","Uint8Array","set","slice","buffer","getIteration","getIv","getCipherKey","getSeed","module","exports"],"sources":["C:/Users/vanitas/node_modules/@whiskeysockets/baileys/WASignalGroup/sender_message_key.js"],"sourcesContent":["const { deriveSecrets } = require('libsignal/src/crypto');\nclass SenderMessageKey {\n    iteration = 0;\n\n    iv = Buffer.alloc(0);\n\n    cipherKey = Buffer.alloc(0);\n\n    seed = Buffer.alloc(0);\n\n    constructor(iteration, seed) {\n        const derivative = deriveSecrets(seed, Buffer.alloc(32), Buffer.from('WhisperGroup'));\n        const keys = new Uint8Array(32);\n        keys.set(new Uint8Array(derivative[0].slice(16)));\n        keys.set(new Uint8Array(derivative[1].slice(0, 16)), 16);\n        this.iv = Buffer.from(derivative[0].slice(0, 16));\n        this.cipherKey = Buffer.from(keys.buffer);\n\n        this.iteration = iteration;\n        this.seed = seed;\n    }\n\n    getIteration() {\n        return this.iteration;\n    }\n\n    getIv() {\n        return this.iv;\n    }\n\n    getCipherKey() {\n        return this.cipherKey;\n    }\n\n    getSeed() {\n        return this.seed;\n    }\n}\nmodule.exports = SenderMessageKey;"],"mappings":"AAAA,MAAM;EAAEA;AAAc,CAAC,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AACzD,MAAMC,gBAAgB,CAAC;EACnBC,SAAS,GAAG,CAAC;EAEbC,EAAE,GAAGC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAEpBC,SAAS,GAAGF,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAE3BE,IAAI,GAAGH,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAEtBG,WAAWA,CAACN,SAAS,EAAEK,IAAI,EAAE;IACzB,MAAME,UAAU,GAAGV,aAAa,CAACQ,IAAI,EAAEH,MAAM,CAACC,KAAK,CAAC,EAAE,CAAC,EAAED,MAAM,CAACM,IAAI,CAAC,cAAc,CAAC,CAAC;IACrF,MAAMC,IAAI,GAAG,IAAIC,UAAU,CAAC,EAAE,CAAC;IAC/BD,IAAI,CAACE,GAAG,CAAC,IAAID,UAAU,CAACH,UAAU,CAAC,CAAC,CAAC,CAACK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACjDH,IAAI,CAACE,GAAG,CAAC,IAAID,UAAU,CAACH,UAAU,CAAC,CAAC,CAAC,CAACK,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;IACxD,IAAI,CAACX,EAAE,GAAGC,MAAM,CAACM,IAAI,CAACD,UAAU,CAAC,CAAC,CAAC,CAACK,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACjD,IAAI,CAACR,SAAS,GAAGF,MAAM,CAACM,IAAI,CAACC,IAAI,CAACI,MAAM,CAAC;IAEzC,IAAI,CAACb,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACK,IAAI,GAAGA,IAAI;EACpB;EAEAS,YAAYA,CAAA,EAAG;IACX,OAAO,IAAI,CAACd,SAAS;EACzB;EAEAe,KAAKA,CAAA,EAAG;IACJ,OAAO,IAAI,CAACd,EAAE;EAClB;EAEAe,YAAYA,CAAA,EAAG;IACX,OAAO,IAAI,CAACZ,SAAS;EACzB;EAEAa,OAAOA,CAAA,EAAG;IACN,OAAO,IAAI,CAACZ,IAAI;EACpB;AACJ;AACAa,MAAM,CAACC,OAAO,GAAGpB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}