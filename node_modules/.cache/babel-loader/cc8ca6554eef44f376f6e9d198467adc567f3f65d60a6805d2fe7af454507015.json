{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nlet _0 = new Uint8Array(16);\nlet _9 = new Uint8Array(32);\n_9[0] = 9;\nfunction gf(init) {\n  var i,\n    r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n}\n;\nconst gf0 = gf(),\n  gf1 = gf([1]),\n  _121665 = gf([0xdb41, 1]),\n  D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n  D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n  X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n  Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n  I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\nfunction ts64(x, i, h, l) {\n  x[i] = h >> 24 & 0xff;\n  x[i + 1] = h >> 16 & 0xff;\n  x[i + 2] = h >> 8 & 0xff;\n  x[i + 3] = h & 0xff;\n  x[i + 4] = l >> 24 & 0xff;\n  x[i + 5] = l >> 16 & 0xff;\n  x[i + 6] = l >> 8 & 0xff;\n  x[i + 7] = l & 0xff;\n}\nfunction vn(x, xi, y, yi, n) {\n  var i,\n    d = 0;\n  for (i = 0; i < n; i++) d |= x[xi + i] ^ y[yi + i];\n  return (1 & d - 1 >>> 8) - 1;\n}\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x, xi, y, yi, 32);\n}\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i] | 0;\n}\nfunction car25519(o) {\n  var i,\n    v,\n    c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c - 1 + 37 * (c - 1);\n}\nfunction sel25519(p, q, b) {\n  var t,\n    c = ~(b - 1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(),\n    t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - (m[i - 1] >> 16 & 1);\n      m[i - 1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - (m[14] >> 16 & 1);\n    b = m[15] >> 16 & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1 - b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2 * i] = t[i] & 0xff;\n    o[2 * i + 1] = t[i] >> 8;\n  }\n}\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n  o[15] &= 0x7fff;\n}\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\nfunction M(o, a, b) {\n  var v,\n    c,\n    t0 = 0,\n    t1 = 0,\n    t2 = 0,\n    t3 = 0,\n    t4 = 0,\n    t5 = 0,\n    t6 = 0,\n    t7 = 0,\n    t8 = 0,\n    t9 = 0,\n    t10 = 0,\n    t11 = 0,\n    t12 = 0,\n    t13 = 0,\n    t14 = 0,\n    t15 = 0,\n    t16 = 0,\n    t17 = 0,\n    t18 = 0,\n    t19 = 0,\n    t20 = 0,\n    t21 = 0,\n    t22 = 0,\n    t23 = 0,\n    t24 = 0,\n    t25 = 0,\n    t26 = 0,\n    t27 = 0,\n    t28 = 0,\n    t29 = 0,\n    t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n  t0 += 38 * t16;\n  t1 += 38 * t17;\n  t2 += 38 * t18;\n  t3 += 38 * t19;\n  t4 += 38 * t20;\n  t5 += 38 * t21;\n  t6 += 38 * t22;\n  t7 += 38 * t23;\n  t8 += 38 * t24;\n  t9 += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n  // first car\n  c = 1;\n  v = t0 + c + 65535;\n  c = Math.floor(v / 65536);\n  t0 = v - c * 65536;\n  v = t1 + c + 65535;\n  c = Math.floor(v / 65536);\n  t1 = v - c * 65536;\n  v = t2 + c + 65535;\n  c = Math.floor(v / 65536);\n  t2 = v - c * 65536;\n  v = t3 + c + 65535;\n  c = Math.floor(v / 65536);\n  t3 = v - c * 65536;\n  v = t4 + c + 65535;\n  c = Math.floor(v / 65536);\n  t4 = v - c * 65536;\n  v = t5 + c + 65535;\n  c = Math.floor(v / 65536);\n  t5 = v - c * 65536;\n  v = t6 + c + 65535;\n  c = Math.floor(v / 65536);\n  t6 = v - c * 65536;\n  v = t7 + c + 65535;\n  c = Math.floor(v / 65536);\n  t7 = v - c * 65536;\n  v = t8 + c + 65535;\n  c = Math.floor(v / 65536);\n  t8 = v - c * 65536;\n  v = t9 + c + 65535;\n  c = Math.floor(v / 65536);\n  t9 = v - c * 65536;\n  v = t10 + c + 65535;\n  c = Math.floor(v / 65536);\n  t10 = v - c * 65536;\n  v = t11 + c + 65535;\n  c = Math.floor(v / 65536);\n  t11 = v - c * 65536;\n  v = t12 + c + 65535;\n  c = Math.floor(v / 65536);\n  t12 = v - c * 65536;\n  v = t13 + c + 65535;\n  c = Math.floor(v / 65536);\n  t13 = v - c * 65536;\n  v = t14 + c + 65535;\n  c = Math.floor(v / 65536);\n  t14 = v - c * 65536;\n  v = t15 + c + 65535;\n  c = Math.floor(v / 65536);\n  t15 = v - c * 65536;\n  t0 += c - 1 + 37 * (c - 1);\n  // second car\n  c = 1;\n  v = t0 + c + 65535;\n  c = Math.floor(v / 65536);\n  t0 = v - c * 65536;\n  v = t1 + c + 65535;\n  c = Math.floor(v / 65536);\n  t1 = v - c * 65536;\n  v = t2 + c + 65535;\n  c = Math.floor(v / 65536);\n  t2 = v - c * 65536;\n  v = t3 + c + 65535;\n  c = Math.floor(v / 65536);\n  t3 = v - c * 65536;\n  v = t4 + c + 65535;\n  c = Math.floor(v / 65536);\n  t4 = v - c * 65536;\n  v = t5 + c + 65535;\n  c = Math.floor(v / 65536);\n  t5 = v - c * 65536;\n  v = t6 + c + 65535;\n  c = Math.floor(v / 65536);\n  t6 = v - c * 65536;\n  v = t7 + c + 65535;\n  c = Math.floor(v / 65536);\n  t7 = v - c * 65536;\n  v = t8 + c + 65535;\n  c = Math.floor(v / 65536);\n  t8 = v - c * 65536;\n  v = t9 + c + 65535;\n  c = Math.floor(v / 65536);\n  t9 = v - c * 65536;\n  v = t10 + c + 65535;\n  c = Math.floor(v / 65536);\n  t10 = v - c * 65536;\n  v = t11 + c + 65535;\n  c = Math.floor(v / 65536);\n  t11 = v - c * 65536;\n  v = t12 + c + 65535;\n  c = Math.floor(v / 65536);\n  t12 = v - c * 65536;\n  v = t13 + c + 65535;\n  c = Math.floor(v / 65536);\n  t13 = v - c * 65536;\n  v = t14 + c + 65535;\n  c = Math.floor(v / 65536);\n  t14 = v - c * 65536;\n  v = t15 + c + 65535;\n  c = Math.floor(v / 65536);\n  t15 = v - c * 65536;\n  t0 += c - 1 + 37 * (c - 1);\n  o[0] = t0;\n  o[1] = t1;\n  o[2] = t2;\n  o[3] = t3;\n  o[4] = t4;\n  o[5] = t5;\n  o[6] = t6;\n  o[7] = t7;\n  o[8] = t8;\n  o[9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\nfunction S(o, a) {\n  M(o, a, a);\n}\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if (a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n    S(c, c);\n    if (a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80),\n    r,\n    i;\n  var a = gf(),\n    b = gf(),\n    c = gf(),\n    d = gf(),\n    e = gf(),\n    f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31] = n[31] & 127 | 64;\n  z[0] &= 248;\n  unpack25519(x, p);\n  for (i = 0; i < 16; i++) {\n    b[i] = x[i];\n    d[i] = a[i] = c[i] = 0;\n  }\n  a[0] = d[0] = 1;\n  for (i = 254; i >= 0; --i) {\n    r = z[i >>> 3] >>> (i & 7) & 1;\n    sel25519(a, b, r);\n    sel25519(c, d, r);\n    A(e, a, c);\n    Z(a, a, c);\n    A(c, b, d);\n    Z(b, b, d);\n    S(d, e);\n    S(f, a);\n    M(a, c, a);\n    M(c, b, e);\n    A(e, a, c);\n    Z(a, a, c);\n    S(b, a);\n    Z(c, d, f);\n    M(a, c, _121665);\n    A(a, a, d);\n    M(c, c, a);\n    M(a, d, f);\n    M(d, b, x);\n    S(b, e);\n    sel25519(a, b, r);\n    sel25519(c, d, r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i + 16] = a[i];\n    x[i + 32] = c[i];\n    x[i + 48] = b[i];\n    x[i + 64] = d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32, x32);\n  M(x16, x16, x32);\n  pack25519(q, x16);\n  return 0;\n}\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\nvar K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16),\n    wl = new Int32Array(16),\n    bh0,\n    bh1,\n    bh2,\n    bh3,\n    bh4,\n    bh5,\n    bh6,\n    bh7,\n    bl0,\n    bl1,\n    bl2,\n    bl3,\n    bl4,\n    bl5,\n    bl6,\n    bl7,\n    th,\n    tl,\n    i,\n    j,\n    h,\n    l,\n    a,\n    b,\n    c,\n    d;\n  var ah0 = hh[0],\n    ah1 = hh[1],\n    ah2 = hh[2],\n    ah3 = hh[3],\n    ah4 = hh[4],\n    ah5 = hh[5],\n    ah6 = hh[6],\n    ah7 = hh[7],\n    al0 = hl[0],\n    al1 = hl[1],\n    al2 = hl[2],\n    al3 = hl[3],\n    al4 = hl[4],\n    al5 = hl[5],\n    al6 = hl[6],\n    al7 = hl[7];\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = m[j + 0] << 24 | m[j + 1] << 16 | m[j + 2] << 8 | m[j + 3];\n      wl[i] = m[j + 4] << 24 | m[j + 5] << 16 | m[j + 6] << 8 | m[j + 7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n      // add\n      h = ah7;\n      l = al7;\n      a = l & 0xffff;\n      b = l >>> 16;\n      c = h & 0xffff;\n      d = h >>> 16;\n      // Sigma1\n      h = (ah4 >>> 14 | al4 << 32 - 14) ^ (ah4 >>> 18 | al4 << 32 - 18) ^ (al4 >>> 41 - 32 | ah4 << 32 - (41 - 32));\n      l = (al4 >>> 14 | ah4 << 32 - 14) ^ (al4 >>> 18 | ah4 << 32 - 18) ^ (ah4 >>> 41 - 32 | al4 << 32 - (41 - 32));\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      // Ch\n      h = ah4 & ah5 ^ ~ah4 & ah6;\n      l = al4 & al5 ^ ~al4 & al6;\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      // K\n      h = K[i * 2];\n      l = K[i * 2 + 1];\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      // w\n      h = wh[i % 16];\n      l = wl[i % 16];\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n      // add\n      h = th;\n      l = tl;\n      a = l & 0xffff;\n      b = l >>> 16;\n      c = h & 0xffff;\n      d = h >>> 16;\n      // Sigma0\n      h = (ah0 >>> 28 | al0 << 32 - 28) ^ (al0 >>> 34 - 32 | ah0 << 32 - (34 - 32)) ^ (al0 >>> 39 - 32 | ah0 << 32 - (39 - 32));\n      l = (al0 >>> 28 | ah0 << 32 - 28) ^ (ah0 >>> 34 - 32 | al0 << 32 - (34 - 32)) ^ (ah0 >>> 39 - 32 | al0 << 32 - (39 - 32));\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      // Maj\n      h = ah0 & ah1 ^ ah0 & ah2 ^ ah1 & ah2;\n      l = al0 & al1 ^ al0 & al2 ^ al1 & al2;\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n      bh7 = c & 0xffff | d << 16;\n      bl7 = a & 0xffff | b << 16;\n      // add\n      h = bh3;\n      l = bl3;\n      a = l & 0xffff;\n      b = l >>> 16;\n      c = h & 0xffff;\n      d = h >>> 16;\n      h = th;\n      l = tl;\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n      bh3 = c & 0xffff | d << 16;\n      bl3 = a & 0xffff | b << 16;\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n      if (i % 16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n          a = l & 0xffff;\n          b = l >>> 16;\n          c = h & 0xffff;\n          d = h >>> 16;\n          h = wh[(j + 9) % 16];\n          l = wl[(j + 9) % 16];\n          a += l & 0xffff;\n          b += l >>> 16;\n          c += h & 0xffff;\n          d += h >>> 16;\n          // sigma0\n          th = wh[(j + 1) % 16];\n          tl = wl[(j + 1) % 16];\n          h = (th >>> 1 | tl << 32 - 1) ^ (th >>> 8 | tl << 32 - 8) ^ th >>> 7;\n          l = (tl >>> 1 | th << 32 - 1) ^ (tl >>> 8 | th << 32 - 8) ^ (tl >>> 7 | th << 32 - 7);\n          a += l & 0xffff;\n          b += l >>> 16;\n          c += h & 0xffff;\n          d += h >>> 16;\n          // sigma1\n          th = wh[(j + 14) % 16];\n          tl = wl[(j + 14) % 16];\n          h = (th >>> 19 | tl << 32 - 19) ^ (tl >>> 61 - 32 | th << 32 - (61 - 32)) ^ th >>> 6;\n          l = (tl >>> 19 | th << 32 - 19) ^ (th >>> 61 - 32 | tl << 32 - (61 - 32)) ^ (tl >>> 6 | th << 32 - 6);\n          a += l & 0xffff;\n          b += l >>> 16;\n          c += h & 0xffff;\n          d += h >>> 16;\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n          wh[j] = c & 0xffff | d << 16;\n          wl[j] = a & 0xffff | b << 16;\n        }\n      }\n    }\n    // add\n    h = ah0;\n    l = al0;\n    a = l & 0xffff;\n    b = l >>> 16;\n    c = h & 0xffff;\n    d = h >>> 16;\n    h = hh[0];\n    l = hl[0];\n    a += l & 0xffff;\n    b += l >>> 16;\n    c += h & 0xffff;\n    d += h >>> 16;\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    hh[0] = ah0 = c & 0xffff | d << 16;\n    hl[0] = al0 = a & 0xffff | b << 16;\n    h = ah1;\n    l = al1;\n    a = l & 0xffff;\n    b = l >>> 16;\n    c = h & 0xffff;\n    d = h >>> 16;\n    h = hh[1];\n    l = hl[1];\n    a += l & 0xffff;\n    b += l >>> 16;\n    c += h & 0xffff;\n    d += h >>> 16;\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    hh[1] = ah1 = c & 0xffff | d << 16;\n    hl[1] = al1 = a & 0xffff | b << 16;\n    h = ah2;\n    l = al2;\n    a = l & 0xffff;\n    b = l >>> 16;\n    c = h & 0xffff;\n    d = h >>> 16;\n    h = hh[2];\n    l = hl[2];\n    a += l & 0xffff;\n    b += l >>> 16;\n    c += h & 0xffff;\n    d += h >>> 16;\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    hh[2] = ah2 = c & 0xffff | d << 16;\n    hl[2] = al2 = a & 0xffff | b << 16;\n    h = ah3;\n    l = al3;\n    a = l & 0xffff;\n    b = l >>> 16;\n    c = h & 0xffff;\n    d = h >>> 16;\n    h = hh[3];\n    l = hl[3];\n    a += l & 0xffff;\n    b += l >>> 16;\n    c += h & 0xffff;\n    d += h >>> 16;\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    hh[3] = ah3 = c & 0xffff | d << 16;\n    hl[3] = al3 = a & 0xffff | b << 16;\n    h = ah4;\n    l = al4;\n    a = l & 0xffff;\n    b = l >>> 16;\n    c = h & 0xffff;\n    d = h >>> 16;\n    h = hh[4];\n    l = hl[4];\n    a += l & 0xffff;\n    b += l >>> 16;\n    c += h & 0xffff;\n    d += h >>> 16;\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    hh[4] = ah4 = c & 0xffff | d << 16;\n    hl[4] = al4 = a & 0xffff | b << 16;\n    h = ah5;\n    l = al5;\n    a = l & 0xffff;\n    b = l >>> 16;\n    c = h & 0xffff;\n    d = h >>> 16;\n    h = hh[5];\n    l = hl[5];\n    a += l & 0xffff;\n    b += l >>> 16;\n    c += h & 0xffff;\n    d += h >>> 16;\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    hh[5] = ah5 = c & 0xffff | d << 16;\n    hl[5] = al5 = a & 0xffff | b << 16;\n    h = ah6;\n    l = al6;\n    a = l & 0xffff;\n    b = l >>> 16;\n    c = h & 0xffff;\n    d = h >>> 16;\n    h = hh[6];\n    l = hl[6];\n    a += l & 0xffff;\n    b += l >>> 16;\n    c += h & 0xffff;\n    d += h >>> 16;\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    hh[6] = ah6 = c & 0xffff | d << 16;\n    hl[6] = al6 = a & 0xffff | b << 16;\n    h = ah7;\n    l = al7;\n    a = l & 0xffff;\n    b = l >>> 16;\n    c = h & 0xffff;\n    d = h >>> 16;\n    h = hh[7];\n    l = hl[7];\n    a += l & 0xffff;\n    b += l >>> 16;\n    c += h & 0xffff;\n    d += h >>> 16;\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    hh[7] = ah7 = c & 0xffff | d << 16;\n    hl[7] = al7 = a & 0xffff | b << 16;\n    pos += 128;\n    n -= 128;\n  }\n  return n;\n}\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n    hl = new Int32Array(8),\n    x = new Uint8Array(256),\n    i,\n    b = n;\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n  for (i = 0; i < n; i++) x[i] = m[b - n + i];\n  x[n] = 128;\n  n = 256 - 128 * (n < 112 ? 1 : 0);\n  x[n - 9] = 0;\n  ts64(x, n - 8, b / 0x20000000 | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n  for (i = 0; i < 8; i++) ts64(out, 8 * i, hh[i], hl[i]);\n  return 0;\n}\nfunction add(p, q) {\n  var a = gf(),\n    b = gf(),\n    c = gf(),\n    d = gf(),\n    e = gf(),\n    f = gf(),\n    g = gf(),\n    h = gf(),\n    t = gf();\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\nfunction pack(r, p) {\n  var tx = gf(),\n    ty = gf(),\n    zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = s[i / 8 | 0] >> (i & 7) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = x[j] + 128 >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i + 1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\nfunction reduce(r) {\n  var x = new Float64Array(64),\n    i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n// Like crypto_sign, but uses secret key directly in hash.\nfunction crypto_sign_direct(sm, m, n, sk) {\n  var h = new Uint8Array(64),\n    r = new Uint8Array(64);\n  var i,\n    j,\n    x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = sk[i];\n  crypto_hash(r, sm.subarray(32), n + 32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n  for (i = 0; i < 32; i++) sm[i + 32] = sk[32 + i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i + j] += h[i] * sk[j];\n    }\n  }\n  modL(sm.subarray(32), x);\n  return n + 64;\n}\n// Note: sm must be n+128.\nfunction crypto_sign_direct_rnd(sm, m, n, sk, rnd) {\n  var h = new Uint8Array(64),\n    r = new Uint8Array(64);\n  var i,\n    j,\n    x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  // Hash separation.\n  sm[0] = 0xfe;\n  for (i = 1; i < 32; i++) sm[i] = 0xff;\n  // Secret key.\n  for (i = 0; i < 32; i++) sm[32 + i] = sk[i];\n  // Message.\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  // Random suffix.\n  for (i = 0; i < 64; i++) sm[n + 64 + i] = rnd[i];\n  crypto_hash(r, sm, n + 128);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n  for (i = 0; i < 32; i++) sm[i + 32] = sk[32 + i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n  // Wipe out random suffix.\n  for (i = 0; i < 64; i++) sm[n + 64 + i] = 0;\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i + j] += h[i] * sk[j];\n    }\n  }\n  modL(sm.subarray(32, n + 64), x);\n  return n + 64;\n}\nfunction curve25519_sign(sm, m, n, sk, opt_rnd) {\n  // If opt_rnd is provided, sm must have n + 128,\n  // otherwise it must have n + 64 bytes.\n  // Convert Curve25519 secret key into Ed25519 secret key (includes pub key).\n  var edsk = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  for (var i = 0; i < 32; i++) edsk[i] = sk[i];\n  // Ensure private key is in the correct format.\n  edsk[0] &= 248;\n  edsk[31] &= 127;\n  edsk[31] |= 64;\n  scalarbase(p, edsk);\n  pack(edsk.subarray(32), p);\n  // Remember sign bit.\n  var signBit = edsk[63] & 128;\n  var smlen;\n  if (opt_rnd) {\n    smlen = crypto_sign_direct_rnd(sm, m, n, edsk, opt_rnd);\n  } else {\n    smlen = crypto_sign_direct(sm, m, n, edsk);\n  }\n  // Copy sign bit from public key into signature.\n  sm[63] |= signBit;\n  return smlen;\n}\nfunction unpackneg(r, p) {\n  var t = gf(),\n    chk = gf(),\n    num = gf(),\n    den = gf(),\n    den2 = gf(),\n    den4 = gf(),\n    den6 = gf();\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n  if (par25519(r[0]) === p[31] >> 7) Z(r[0], gf0, r[0]);\n  M(r[3], r[0], r[1]);\n  return 0;\n}\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i, mlen;\n  var t = new Uint8Array(32),\n    h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n    q = [gf(), gf(), gf(), gf()];\n  mlen = -1;\n  if (n < 64) return -1;\n  if (unpackneg(q, pk)) return -1;\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i + 32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  mlen = n;\n  return mlen;\n}\n// Converts Curve25519 public key back to Ed25519 public key.\n// edwardsY = (montgomeryX - 1) / (montgomeryX + 1)\nfunction convertPublicKey(pk) {\n  var z = new Uint8Array(32),\n    x = gf(),\n    a = gf(),\n    b = gf();\n  unpack25519(x, pk);\n  A(a, x, gf1);\n  Z(b, x, gf1);\n  inv25519(a, a);\n  M(a, a, b);\n  pack25519(z, a);\n  return z;\n}\nfunction curve25519_sign_open(m, sm, n, pk) {\n  // Convert Curve25519 public key into Ed25519 public key.\n  var edpk = convertPublicKey(pk);\n  // Restore sign bit from signature.\n  edpk[31] |= sm[63] & 128;\n  // Remove sign bit from signature.\n  sm[63] &= 127;\n  // Verify signed message.\n  return crypto_sign_open(m, sm, n, edpk);\n}\n/* High-level API */\nfunction checkArrayTypes(...args) {\n  var t, i;\n  for (i = 0; i < arguments.length; i++) {\n    if ((t = Object.prototype.toString.call(arguments[i])) !== '[object Uint8Array]') throw new TypeError('unexpected type ' + t + ', use Uint8Array');\n  }\n}\n/**\n * Returns a raw shared key between own private key and peer's public key (in other words, this is an ECC Diffie-Hellman function X25519, performing scalar multiplication).\n *\n * The result should not be used directly as a key, but should be processed with a one-way function (e.g. HSalsa20 as in NaCl, or any secure cryptographic hash function, such as SHA-256, or key derivation function, such as HKDF).\n *\n * @export\n * @param {Uint8Array} secretKey\n * @param {Uint8Array} publicKey\n * @returns Uint8Array\n */\nfunction sharedKey(secretKey, publicKey) {\n  checkArrayTypes(publicKey, secretKey);\n  if (publicKey.length !== 32) throw new Error('wrong public key length');\n  if (secretKey.length !== 32) throw new Error('wrong secret key length');\n  var sharedKey = new Uint8Array(32);\n  crypto_scalarmult(sharedKey, secretKey, publicKey);\n  return sharedKey;\n}\nexports.sharedKey = sharedKey;\n/**\n * Signs the given message using the private key and returns a signed message (signature concatenated with the message copy).\n *\n * Optional random data argument (which must have 64 random bytes) turns on hash separation and randomization to make signatures non-deterministic.\n *\n * @export\n * @param {Uint8Array} secretKey\n * @param {*} msg\n * @param {Uint8Array} opt_random\n * @returns\n */\nfunction signMessage(secretKey, msg, opt_random) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== 32) throw new Error('wrong secret key length');\n  if (opt_random) {\n    checkArrayTypes(opt_random);\n    if (opt_random.length !== 64) throw new Error('wrong random data length');\n    var buf = new Uint8Array(128 + msg.length);\n    curve25519_sign(buf, msg, msg.length, secretKey, opt_random);\n    return new Uint8Array(buf.subarray(0, 64 + msg.length));\n  } else {\n    var signedMsg = new Uint8Array(64 + msg.length);\n    curve25519_sign(signedMsg, msg, msg.length, secretKey);\n    return signedMsg;\n  }\n}\nexports.signMessage = signMessage;\n/**\n * Verifies signed message with the public key and returns the original message without signature if it's correct or null if verification fails.\n *\n * @export\n * @param {Uint8Array} publicKey\n * @param {*} signedMsg\n * @returns Message\n */\nfunction openMessage(publicKey, signedMsg) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== 32) throw new Error('wrong public key length');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = curve25519_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n}\nexports.openMessage = openMessage;\n/**\n * Signs the given message using the private key and returns signature.\n *\n * Optional random data argument (which must have 64 random bytes) turns on hash separation and randomization to make signatures non-deterministic.\n *\n * @export\n * @param {Uint8Array} secretKey\n * @param {*} msg\n * @param {Uint8Array} opt_random\n * @returns\n */\nfunction sign(secretKey, msg, opt_random) {\n  checkArrayTypes(secretKey, msg);\n  if (secretKey.length !== 32) throw new Error('wrong secret key length');\n  if (opt_random) {\n    checkArrayTypes(opt_random);\n    if (opt_random.length !== 64) throw new Error('wrong random data length');\n  }\n  var buf = new Uint8Array((opt_random ? 128 : 64) + msg.length);\n  curve25519_sign(buf, msg, msg.length, secretKey, opt_random);\n  var signature = new Uint8Array(64);\n  for (var i = 0; i < signature.length; i++) signature[i] = buf[i];\n  return signature;\n}\nexports.sign = sign;\n/**\n * Verifies the given signature for the message using the given private key. Returns true if the signature is valid, false otherwise.\n *\n * @export\n * @param {Uint8Array} publicKey\n * @param {*} msg\n * @param {*} signature\n * @returns\n */\nfunction verify(publicKey, msg, signature) {\n  checkArrayTypes(msg, signature, publicKey);\n  if (signature.length !== 64) throw new Error('wrong signature length');\n  if (publicKey.length !== 32) throw new Error('wrong public key length');\n  var sm = new Uint8Array(64 + msg.length);\n  var m = new Uint8Array(64 + msg.length);\n  var i;\n  for (i = 0; i < 64; i++) sm[i] = signature[i];\n  for (i = 0; i < msg.length; i++) sm[i + 64] = msg[i];\n  return curve25519_sign_open(m, sm, sm.length, publicKey) >= 0;\n}\nexports.verify = verify;\n/**\n * Generates a new key pair from the given 32-byte secret seed (which should be generated with a CSPRNG) and returns it as object.\n *\n * The returned keys can be used for signing and key agreement.\n *\n * @export\n * @param {Uint8Array} seed required\n * @returns\n */\nfunction generateKeyPair(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== 32) throw new Error('wrong seed length');\n  var sk = new Uint8Array(32);\n  var pk = new Uint8Array(32);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_scalarmult_base(pk, sk);\n  // Turn secret key into the correct format.\n  sk[0] &= 248;\n  sk[31] &= 127;\n  sk[31] |= 64;\n  // Remove sign bit from public key.\n  pk[31] &= 127;\n  return {\n    public: pk,\n    private: sk\n  };\n}\nexports.generateKeyPair = generateKeyPair;\nexports.default = {};","map":{"version":3,"names":["Object","defineProperty","exports","value","_0","Uint8Array","_9","gf","init","i","r","Float64Array","length","gf0","gf1","_121665","D","D2","X","Y","I","ts64","x","h","l","vn","xi","y","yi","n","d","crypto_verify_32","set25519","a","car25519","o","v","c","Math","floor","sel25519","p","q","b","t","pack25519","j","m","neq25519","par25519","unpack25519","A","Z","M","t0","t1","t2","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","z","e","f","x32","subarray","x16","crypto_scalarmult_base","K","crypto_hashblocks_hl","hh","hl","wh","Int32Array","wl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","pos","crypto_hash","out","add","g","cswap","pack","tx","ty","zi","scalarmult","s","scalarbase","L","modL","carry","k","reduce","crypto_sign_direct","sm","sk","crypto_sign_direct_rnd","rnd","curve25519_sign","opt_rnd","edsk","signBit","smlen","unpackneg","chk","num","den","den2","den4","den6","crypto_sign_open","pk","mlen","convertPublicKey","curve25519_sign_open","edpk","checkArrayTypes","args","arguments","prototype","toString","call","TypeError","sharedKey","secretKey","publicKey","Error","signMessage","msg","opt_random","buf","signedMsg","openMessage","tmp","sign","signature","verify","generateKeyPair","seed","public","private","default"],"sources":["C:/Users/vanitas/node_modules/curve25519-js/lib/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _0 = new Uint8Array(16);\nlet _9 = new Uint8Array(32);\n_9[0] = 9;\nfunction gf(init) {\n    var i, r = new Float64Array(16);\n    if (init)\n        for (i = 0; i < init.length; i++)\n            r[i] = init[i];\n    return r;\n}\n;\nconst gf0 = gf(), gf1 = gf([1]), _121665 = gf([0xdb41, 1]), D = gf([\n    0x78a3,\n    0x1359,\n    0x4dca,\n    0x75eb,\n    0xd8ab,\n    0x4141,\n    0x0a4d,\n    0x0070,\n    0xe898,\n    0x7779,\n    0x4079,\n    0x8cc7,\n    0xfe73,\n    0x2b6f,\n    0x6cee,\n    0x5203,\n]), D2 = gf([\n    0xf159,\n    0x26b2,\n    0x9b94,\n    0xebd6,\n    0xb156,\n    0x8283,\n    0x149a,\n    0x00e0,\n    0xd130,\n    0xeef3,\n    0x80f2,\n    0x198e,\n    0xfce7,\n    0x56df,\n    0xd9dc,\n    0x2406,\n]), X = gf([\n    0xd51a,\n    0x8f25,\n    0x2d60,\n    0xc956,\n    0xa7b2,\n    0x9525,\n    0xc760,\n    0x692c,\n    0xdc5c,\n    0xfdd6,\n    0xe231,\n    0xc0a4,\n    0x53fe,\n    0xcd6e,\n    0x36d3,\n    0x2169,\n]), Y = gf([\n    0x6658,\n    0x6666,\n    0x6666,\n    0x6666,\n    0x6666,\n    0x6666,\n    0x6666,\n    0x6666,\n    0x6666,\n    0x6666,\n    0x6666,\n    0x6666,\n    0x6666,\n    0x6666,\n    0x6666,\n    0x6666,\n]), I = gf([\n    0xa0b0,\n    0x4a0e,\n    0x1b27,\n    0xc4ee,\n    0xe478,\n    0xad2f,\n    0x1806,\n    0x2f43,\n    0xd7a7,\n    0x3dfb,\n    0x0099,\n    0x2b4d,\n    0xdf0b,\n    0x4fc1,\n    0x2480,\n    0x2b83,\n]);\nfunction ts64(x, i, h, l) {\n    x[i] = (h >> 24) & 0xff;\n    x[i + 1] = (h >> 16) & 0xff;\n    x[i + 2] = (h >> 8) & 0xff;\n    x[i + 3] = h & 0xff;\n    x[i + 4] = (l >> 24) & 0xff;\n    x[i + 5] = (l >> 16) & 0xff;\n    x[i + 6] = (l >> 8) & 0xff;\n    x[i + 7] = l & 0xff;\n}\nfunction vn(x, xi, y, yi, n) {\n    var i, d = 0;\n    for (i = 0; i < n; i++)\n        d |= x[xi + i] ^ y[yi + i];\n    return (1 & ((d - 1) >>> 8)) - 1;\n}\nfunction crypto_verify_32(x, xi, y, yi) {\n    return vn(x, xi, y, yi, 32);\n}\nfunction set25519(r, a) {\n    var i;\n    for (i = 0; i < 16; i++)\n        r[i] = a[i] | 0;\n}\nfunction car25519(o) {\n    var i, v, c = 1;\n    for (i = 0; i < 16; i++) {\n        v = o[i] + c + 65535;\n        c = Math.floor(v / 65536);\n        o[i] = v - c * 65536;\n    }\n    o[0] += c - 1 + 37 * (c - 1);\n}\nfunction sel25519(p, q, b) {\n    var t, c = ~(b - 1);\n    for (var i = 0; i < 16; i++) {\n        t = c & (p[i] ^ q[i]);\n        p[i] ^= t;\n        q[i] ^= t;\n    }\n}\nfunction pack25519(o, n) {\n    var i, j, b;\n    var m = gf(), t = gf();\n    for (i = 0; i < 16; i++)\n        t[i] = n[i];\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (j = 0; j < 2; j++) {\n        m[0] = t[0] - 0xffed;\n        for (i = 1; i < 15; i++) {\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n            m[i - 1] &= 0xffff;\n        }\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n        b = (m[15] >> 16) & 1;\n        m[14] &= 0xffff;\n        sel25519(t, m, 1 - b);\n    }\n    for (i = 0; i < 16; i++) {\n        o[2 * i] = t[i] & 0xff;\n        o[2 * i + 1] = t[i] >> 8;\n    }\n}\nfunction neq25519(a, b) {\n    var c = new Uint8Array(32), d = new Uint8Array(32);\n    pack25519(c, a);\n    pack25519(d, b);\n    return crypto_verify_32(c, 0, d, 0);\n}\nfunction par25519(a) {\n    var d = new Uint8Array(32);\n    pack25519(d, a);\n    return d[0] & 1;\n}\nfunction unpack25519(o, n) {\n    var i;\n    for (i = 0; i < 16; i++)\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    o[15] &= 0x7fff;\n}\nfunction A(o, a, b) {\n    for (var i = 0; i < 16; i++)\n        o[i] = a[i] + b[i];\n}\nfunction Z(o, a, b) {\n    for (var i = 0; i < 16; i++)\n        o[i] = a[i] - b[i];\n}\nfunction M(o, a, b) {\n    var v, c, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11], b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30;\n    // t15 left as is\n    // first car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    // second car\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n}\nfunction S(o, a) {\n    M(o, a, a);\n}\nfunction inv25519(o, i) {\n    var c = gf();\n    var a;\n    for (a = 0; a < 16; a++)\n        c[a] = i[a];\n    for (a = 253; a >= 0; a--) {\n        S(c, c);\n        if (a !== 2 && a !== 4)\n            M(c, c, i);\n    }\n    for (a = 0; a < 16; a++)\n        o[a] = c[a];\n}\nfunction pow2523(o, i) {\n    var c = gf();\n    var a;\n    for (a = 0; a < 16; a++)\n        c[a] = i[a];\n    for (a = 250; a >= 0; a--) {\n        S(c, c);\n        if (a !== 1)\n            M(c, c, i);\n    }\n    for (a = 0; a < 16; a++)\n        o[a] = c[a];\n}\nfunction crypto_scalarmult(q, n, p) {\n    var z = new Uint8Array(32);\n    var x = new Float64Array(80), r, i;\n    var a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf();\n    for (i = 0; i < 31; i++)\n        z[i] = n[i];\n    z[31] = (n[31] & 127) | 64;\n    z[0] &= 248;\n    unpack25519(x, p);\n    for (i = 0; i < 16; i++) {\n        b[i] = x[i];\n        d[i] = a[i] = c[i] = 0;\n    }\n    a[0] = d[0] = 1;\n    for (i = 254; i >= 0; --i) {\n        r = (z[i >>> 3] >>> (i & 7)) & 1;\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n        A(e, a, c);\n        Z(a, a, c);\n        A(c, b, d);\n        Z(b, b, d);\n        S(d, e);\n        S(f, a);\n        M(a, c, a);\n        M(c, b, e);\n        A(e, a, c);\n        Z(a, a, c);\n        S(b, a);\n        Z(c, d, f);\n        M(a, c, _121665);\n        A(a, a, d);\n        M(c, c, a);\n        M(a, d, f);\n        M(d, b, x);\n        S(b, e);\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n    }\n    for (i = 0; i < 16; i++) {\n        x[i + 16] = a[i];\n        x[i + 32] = c[i];\n        x[i + 48] = b[i];\n        x[i + 64] = d[i];\n    }\n    var x32 = x.subarray(32);\n    var x16 = x.subarray(16);\n    inv25519(x32, x32);\n    M(x16, x16, x32);\n    pack25519(q, x16);\n    return 0;\n}\nfunction crypto_scalarmult_base(q, n) {\n    return crypto_scalarmult(q, n, _9);\n}\nvar K = [\n    0x428a2f98,\n    0xd728ae22,\n    0x71374491,\n    0x23ef65cd,\n    0xb5c0fbcf,\n    0xec4d3b2f,\n    0xe9b5dba5,\n    0x8189dbbc,\n    0x3956c25b,\n    0xf348b538,\n    0x59f111f1,\n    0xb605d019,\n    0x923f82a4,\n    0xaf194f9b,\n    0xab1c5ed5,\n    0xda6d8118,\n    0xd807aa98,\n    0xa3030242,\n    0x12835b01,\n    0x45706fbe,\n    0x243185be,\n    0x4ee4b28c,\n    0x550c7dc3,\n    0xd5ffb4e2,\n    0x72be5d74,\n    0xf27b896f,\n    0x80deb1fe,\n    0x3b1696b1,\n    0x9bdc06a7,\n    0x25c71235,\n    0xc19bf174,\n    0xcf692694,\n    0xe49b69c1,\n    0x9ef14ad2,\n    0xefbe4786,\n    0x384f25e3,\n    0x0fc19dc6,\n    0x8b8cd5b5,\n    0x240ca1cc,\n    0x77ac9c65,\n    0x2de92c6f,\n    0x592b0275,\n    0x4a7484aa,\n    0x6ea6e483,\n    0x5cb0a9dc,\n    0xbd41fbd4,\n    0x76f988da,\n    0x831153b5,\n    0x983e5152,\n    0xee66dfab,\n    0xa831c66d,\n    0x2db43210,\n    0xb00327c8,\n    0x98fb213f,\n    0xbf597fc7,\n    0xbeef0ee4,\n    0xc6e00bf3,\n    0x3da88fc2,\n    0xd5a79147,\n    0x930aa725,\n    0x06ca6351,\n    0xe003826f,\n    0x14292967,\n    0x0a0e6e70,\n    0x27b70a85,\n    0x46d22ffc,\n    0x2e1b2138,\n    0x5c26c926,\n    0x4d2c6dfc,\n    0x5ac42aed,\n    0x53380d13,\n    0x9d95b3df,\n    0x650a7354,\n    0x8baf63de,\n    0x766a0abb,\n    0x3c77b2a8,\n    0x81c2c92e,\n    0x47edaee6,\n    0x92722c85,\n    0x1482353b,\n    0xa2bfe8a1,\n    0x4cf10364,\n    0xa81a664b,\n    0xbc423001,\n    0xc24b8b70,\n    0xd0f89791,\n    0xc76c51a3,\n    0x0654be30,\n    0xd192e819,\n    0xd6ef5218,\n    0xd6990624,\n    0x5565a910,\n    0xf40e3585,\n    0x5771202a,\n    0x106aa070,\n    0x32bbd1b8,\n    0x19a4c116,\n    0xb8d2d0c8,\n    0x1e376c08,\n    0x5141ab53,\n    0x2748774c,\n    0xdf8eeb99,\n    0x34b0bcb5,\n    0xe19b48a8,\n    0x391c0cb3,\n    0xc5c95a63,\n    0x4ed8aa4a,\n    0xe3418acb,\n    0x5b9cca4f,\n    0x7763e373,\n    0x682e6ff3,\n    0xd6b2b8a3,\n    0x748f82ee,\n    0x5defb2fc,\n    0x78a5636f,\n    0x43172f60,\n    0x84c87814,\n    0xa1f0ab72,\n    0x8cc70208,\n    0x1a6439ec,\n    0x90befffa,\n    0x23631e28,\n    0xa4506ceb,\n    0xde82bde9,\n    0xbef9a3f7,\n    0xb2c67915,\n    0xc67178f2,\n    0xe372532b,\n    0xca273ece,\n    0xea26619c,\n    0xd186b8c7,\n    0x21c0c207,\n    0xeada7dd6,\n    0xcde0eb1e,\n    0xf57d4f7f,\n    0xee6ed178,\n    0x06f067aa,\n    0x72176fba,\n    0x0a637dc5,\n    0xa2c898a6,\n    0x113f9804,\n    0xbef90dae,\n    0x1b710b35,\n    0x131c471b,\n    0x28db77f5,\n    0x23047d84,\n    0x32caab7b,\n    0x40c72493,\n    0x3c9ebe0a,\n    0x15c9bebc,\n    0x431d67c4,\n    0x9c100d4c,\n    0x4cc5d4be,\n    0xcb3e42b6,\n    0x597f299c,\n    0xfc657e2a,\n    0x5fcb6fab,\n    0x3ad6faec,\n    0x6c44198c,\n    0x4a475817,\n];\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n    var wh = new Int32Array(16), wl = new Int32Array(16), bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7, bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7, th, tl, i, j, h, l, a, b, c, d;\n    var ah0 = hh[0], ah1 = hh[1], ah2 = hh[2], ah3 = hh[3], ah4 = hh[4], ah5 = hh[5], ah6 = hh[6], ah7 = hh[7], al0 = hl[0], al1 = hl[1], al2 = hl[2], al3 = hl[3], al4 = hl[4], al5 = hl[5], al6 = hl[6], al7 = hl[7];\n    var pos = 0;\n    while (n >= 128) {\n        for (i = 0; i < 16; i++) {\n            j = 8 * i + pos;\n            wh[i] = (m[j + 0] << 24) | (m[j + 1] << 16) | (m[j + 2] << 8) | m[j + 3];\n            wl[i] = (m[j + 4] << 24) | (m[j + 5] << 16) | (m[j + 6] << 8) | m[j + 7];\n        }\n        for (i = 0; i < 80; i++) {\n            bh0 = ah0;\n            bh1 = ah1;\n            bh2 = ah2;\n            bh3 = ah3;\n            bh4 = ah4;\n            bh5 = ah5;\n            bh6 = ah6;\n            bh7 = ah7;\n            bl0 = al0;\n            bl1 = al1;\n            bl2 = al2;\n            bl3 = al3;\n            bl4 = al4;\n            bl5 = al5;\n            bl6 = al6;\n            bl7 = al7;\n            // add\n            h = ah7;\n            l = al7;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            // Sigma1\n            h =\n                ((ah4 >>> 14) | (al4 << (32 - 14))) ^\n                    ((ah4 >>> 18) | (al4 << (32 - 18))) ^\n                    ((al4 >>> (41 - 32)) | (ah4 << (32 - (41 - 32))));\n            l =\n                ((al4 >>> 14) | (ah4 << (32 - 14))) ^\n                    ((al4 >>> 18) | (ah4 << (32 - 18))) ^\n                    ((ah4 >>> (41 - 32)) | (al4 << (32 - (41 - 32))));\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            // Ch\n            h = (ah4 & ah5) ^ (~ah4 & ah6);\n            l = (al4 & al5) ^ (~al4 & al6);\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            // K\n            h = K[i * 2];\n            l = K[i * 2 + 1];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            // w\n            h = wh[i % 16];\n            l = wl[i % 16];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            th = (c & 0xffff) | (d << 16);\n            tl = (a & 0xffff) | (b << 16);\n            // add\n            h = th;\n            l = tl;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            // Sigma0\n            h =\n                ((ah0 >>> 28) | (al0 << (32 - 28))) ^\n                    ((al0 >>> (34 - 32)) | (ah0 << (32 - (34 - 32)))) ^\n                    ((al0 >>> (39 - 32)) | (ah0 << (32 - (39 - 32))));\n            l =\n                ((al0 >>> 28) | (ah0 << (32 - 28))) ^\n                    ((ah0 >>> (34 - 32)) | (al0 << (32 - (34 - 32)))) ^\n                    ((ah0 >>> (39 - 32)) | (al0 << (32 - (39 - 32))));\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            // Maj\n            h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n            l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            bh7 = (c & 0xffff) | (d << 16);\n            bl7 = (a & 0xffff) | (b << 16);\n            // add\n            h = bh3;\n            l = bl3;\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = th;\n            l = tl;\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            bh3 = (c & 0xffff) | (d << 16);\n            bl3 = (a & 0xffff) | (b << 16);\n            ah1 = bh0;\n            ah2 = bh1;\n            ah3 = bh2;\n            ah4 = bh3;\n            ah5 = bh4;\n            ah6 = bh5;\n            ah7 = bh6;\n            ah0 = bh7;\n            al1 = bl0;\n            al2 = bl1;\n            al3 = bl2;\n            al4 = bl3;\n            al5 = bl4;\n            al6 = bl5;\n            al7 = bl6;\n            al0 = bl7;\n            if (i % 16 === 15) {\n                for (j = 0; j < 16; j++) {\n                    // add\n                    h = wh[j];\n                    l = wl[j];\n                    a = l & 0xffff;\n                    b = l >>> 16;\n                    c = h & 0xffff;\n                    d = h >>> 16;\n                    h = wh[(j + 9) % 16];\n                    l = wl[(j + 9) % 16];\n                    a += l & 0xffff;\n                    b += l >>> 16;\n                    c += h & 0xffff;\n                    d += h >>> 16;\n                    // sigma0\n                    th = wh[(j + 1) % 16];\n                    tl = wl[(j + 1) % 16];\n                    h = ((th >>> 1) | (tl << (32 - 1))) ^ ((th >>> 8) | (tl << (32 - 8))) ^ (th >>> 7);\n                    l = ((tl >>> 1) | (th << (32 - 1))) ^ ((tl >>> 8) | (th << (32 - 8))) ^ ((tl >>> 7) | (th << (32 - 7)));\n                    a += l & 0xffff;\n                    b += l >>> 16;\n                    c += h & 0xffff;\n                    d += h >>> 16;\n                    // sigma1\n                    th = wh[(j + 14) % 16];\n                    tl = wl[(j + 14) % 16];\n                    h = ((th >>> 19) | (tl << (32 - 19))) ^ ((tl >>> (61 - 32)) | (th << (32 - (61 - 32)))) ^ (th >>> 6);\n                    l =\n                        ((tl >>> 19) | (th << (32 - 19))) ^\n                            ((th >>> (61 - 32)) | (tl << (32 - (61 - 32)))) ^\n                            ((tl >>> 6) | (th << (32 - 6)));\n                    a += l & 0xffff;\n                    b += l >>> 16;\n                    c += h & 0xffff;\n                    d += h >>> 16;\n                    b += a >>> 16;\n                    c += b >>> 16;\n                    d += c >>> 16;\n                    wh[j] = (c & 0xffff) | (d << 16);\n                    wl[j] = (a & 0xffff) | (b << 16);\n                }\n            }\n        }\n        // add\n        h = ah0;\n        l = al0;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[0];\n        l = hl[0];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[0] = ah0 = (c & 0xffff) | (d << 16);\n        hl[0] = al0 = (a & 0xffff) | (b << 16);\n        h = ah1;\n        l = al1;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[1];\n        l = hl[1];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[1] = ah1 = (c & 0xffff) | (d << 16);\n        hl[1] = al1 = (a & 0xffff) | (b << 16);\n        h = ah2;\n        l = al2;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[2];\n        l = hl[2];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[2] = ah2 = (c & 0xffff) | (d << 16);\n        hl[2] = al2 = (a & 0xffff) | (b << 16);\n        h = ah3;\n        l = al3;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[3];\n        l = hl[3];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[3] = ah3 = (c & 0xffff) | (d << 16);\n        hl[3] = al3 = (a & 0xffff) | (b << 16);\n        h = ah4;\n        l = al4;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[4];\n        l = hl[4];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[4] = ah4 = (c & 0xffff) | (d << 16);\n        hl[4] = al4 = (a & 0xffff) | (b << 16);\n        h = ah5;\n        l = al5;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[5];\n        l = hl[5];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[5] = ah5 = (c & 0xffff) | (d << 16);\n        hl[5] = al5 = (a & 0xffff) | (b << 16);\n        h = ah6;\n        l = al6;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[6];\n        l = hl[6];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[6] = ah6 = (c & 0xffff) | (d << 16);\n        hl[6] = al6 = (a & 0xffff) | (b << 16);\n        h = ah7;\n        l = al7;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = hh[7];\n        l = hl[7];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        hh[7] = ah7 = (c & 0xffff) | (d << 16);\n        hl[7] = al7 = (a & 0xffff) | (b << 16);\n        pos += 128;\n        n -= 128;\n    }\n    return n;\n}\nfunction crypto_hash(out, m, n) {\n    var hh = new Int32Array(8), hl = new Int32Array(8), x = new Uint8Array(256), i, b = n;\n    hh[0] = 0x6a09e667;\n    hh[1] = 0xbb67ae85;\n    hh[2] = 0x3c6ef372;\n    hh[3] = 0xa54ff53a;\n    hh[4] = 0x510e527f;\n    hh[5] = 0x9b05688c;\n    hh[6] = 0x1f83d9ab;\n    hh[7] = 0x5be0cd19;\n    hl[0] = 0xf3bcc908;\n    hl[1] = 0x84caa73b;\n    hl[2] = 0xfe94f82b;\n    hl[3] = 0x5f1d36f1;\n    hl[4] = 0xade682d1;\n    hl[5] = 0x2b3e6c1f;\n    hl[6] = 0xfb41bd6b;\n    hl[7] = 0x137e2179;\n    crypto_hashblocks_hl(hh, hl, m, n);\n    n %= 128;\n    for (i = 0; i < n; i++)\n        x[i] = m[b - n + i];\n    x[n] = 128;\n    n = 256 - 128 * (n < 112 ? 1 : 0);\n    x[n - 9] = 0;\n    ts64(x, n - 8, (b / 0x20000000) | 0, b << 3);\n    crypto_hashblocks_hl(hh, hl, x, n);\n    for (i = 0; i < 8; i++)\n        ts64(out, 8 * i, hh[i], hl[i]);\n    return 0;\n}\nfunction add(p, q) {\n    var a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf(), g = gf(), h = gf(), t = gf();\n    Z(a, p[1], p[0]);\n    Z(t, q[1], q[0]);\n    M(a, a, t);\n    A(b, p[0], p[1]);\n    A(t, q[0], q[1]);\n    M(b, b, t);\n    M(c, p[3], q[3]);\n    M(c, c, D2);\n    M(d, p[2], q[2]);\n    A(d, d, d);\n    Z(e, b, a);\n    Z(f, d, c);\n    A(g, d, c);\n    A(h, b, a);\n    M(p[0], e, f);\n    M(p[1], h, g);\n    M(p[2], g, f);\n    M(p[3], e, h);\n}\nfunction cswap(p, q, b) {\n    var i;\n    for (i = 0; i < 4; i++) {\n        sel25519(p[i], q[i], b);\n    }\n}\nfunction pack(r, p) {\n    var tx = gf(), ty = gf(), zi = gf();\n    inv25519(zi, p[2]);\n    M(tx, p[0], zi);\n    M(ty, p[1], zi);\n    pack25519(r, ty);\n    r[31] ^= par25519(tx) << 7;\n}\nfunction scalarmult(p, q, s) {\n    var b, i;\n    set25519(p[0], gf0);\n    set25519(p[1], gf1);\n    set25519(p[2], gf1);\n    set25519(p[3], gf0);\n    for (i = 255; i >= 0; --i) {\n        b = (s[(i / 8) | 0] >> (i & 7)) & 1;\n        cswap(p, q, b);\n        add(q, p);\n        add(p, p);\n        cswap(p, q, b);\n    }\n}\nfunction scalarbase(p, s) {\n    var q = [gf(), gf(), gf(), gf()];\n    set25519(q[0], X);\n    set25519(q[1], Y);\n    set25519(q[2], gf1);\n    M(q[3], X, Y);\n    scalarmult(p, q, s);\n}\nvar L = new Float64Array([\n    0xed,\n    0xd3,\n    0xf5,\n    0x5c,\n    0x1a,\n    0x63,\n    0x12,\n    0x58,\n    0xd6,\n    0x9c,\n    0xf7,\n    0xa2,\n    0xde,\n    0xf9,\n    0xde,\n    0x14,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0x10,\n]);\nfunction modL(r, x) {\n    var carry, i, j, k;\n    for (i = 63; i >= 32; --i) {\n        carry = 0;\n        for (j = i - 32, k = i - 12; j < k; ++j) {\n            x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n            carry = (x[j] + 128) >> 8;\n            x[j] -= carry * 256;\n        }\n        x[j] += carry;\n        x[i] = 0;\n    }\n    carry = 0;\n    for (j = 0; j < 32; j++) {\n        x[j] += carry - (x[31] >> 4) * L[j];\n        carry = x[j] >> 8;\n        x[j] &= 255;\n    }\n    for (j = 0; j < 32; j++)\n        x[j] -= carry * L[j];\n    for (i = 0; i < 32; i++) {\n        x[i + 1] += x[i] >> 8;\n        r[i] = x[i] & 255;\n    }\n}\nfunction reduce(r) {\n    var x = new Float64Array(64), i;\n    for (i = 0; i < 64; i++)\n        x[i] = r[i];\n    for (i = 0; i < 64; i++)\n        r[i] = 0;\n    modL(r, x);\n}\n// Like crypto_sign, but uses secret key directly in hash.\nfunction crypto_sign_direct(sm, m, n, sk) {\n    var h = new Uint8Array(64), r = new Uint8Array(64);\n    var i, j, x = new Float64Array(64);\n    var p = [gf(), gf(), gf(), gf()];\n    for (i = 0; i < n; i++)\n        sm[64 + i] = m[i];\n    for (i = 0; i < 32; i++)\n        sm[32 + i] = sk[i];\n    crypto_hash(r, sm.subarray(32), n + 32);\n    reduce(r);\n    scalarbase(p, r);\n    pack(sm, p);\n    for (i = 0; i < 32; i++)\n        sm[i + 32] = sk[32 + i];\n    crypto_hash(h, sm, n + 64);\n    reduce(h);\n    for (i = 0; i < 64; i++)\n        x[i] = 0;\n    for (i = 0; i < 32; i++)\n        x[i] = r[i];\n    for (i = 0; i < 32; i++) {\n        for (j = 0; j < 32; j++) {\n            x[i + j] += h[i] * sk[j];\n        }\n    }\n    modL(sm.subarray(32), x);\n    return n + 64;\n}\n// Note: sm must be n+128.\nfunction crypto_sign_direct_rnd(sm, m, n, sk, rnd) {\n    var h = new Uint8Array(64), r = new Uint8Array(64);\n    var i, j, x = new Float64Array(64);\n    var p = [gf(), gf(), gf(), gf()];\n    // Hash separation.\n    sm[0] = 0xfe;\n    for (i = 1; i < 32; i++)\n        sm[i] = 0xff;\n    // Secret key.\n    for (i = 0; i < 32; i++)\n        sm[32 + i] = sk[i];\n    // Message.\n    for (i = 0; i < n; i++)\n        sm[64 + i] = m[i];\n    // Random suffix.\n    for (i = 0; i < 64; i++)\n        sm[n + 64 + i] = rnd[i];\n    crypto_hash(r, sm, n + 128);\n    reduce(r);\n    scalarbase(p, r);\n    pack(sm, p);\n    for (i = 0; i < 32; i++)\n        sm[i + 32] = sk[32 + i];\n    crypto_hash(h, sm, n + 64);\n    reduce(h);\n    // Wipe out random suffix.\n    for (i = 0; i < 64; i++)\n        sm[n + 64 + i] = 0;\n    for (i = 0; i < 64; i++)\n        x[i] = 0;\n    for (i = 0; i < 32; i++)\n        x[i] = r[i];\n    for (i = 0; i < 32; i++) {\n        for (j = 0; j < 32; j++) {\n            x[i + j] += h[i] * sk[j];\n        }\n    }\n    modL(sm.subarray(32, n + 64), x);\n    return n + 64;\n}\nfunction curve25519_sign(sm, m, n, sk, opt_rnd) {\n    // If opt_rnd is provided, sm must have n + 128,\n    // otherwise it must have n + 64 bytes.\n    // Convert Curve25519 secret key into Ed25519 secret key (includes pub key).\n    var edsk = new Uint8Array(64);\n    var p = [gf(), gf(), gf(), gf()];\n    for (var i = 0; i < 32; i++)\n        edsk[i] = sk[i];\n    // Ensure private key is in the correct format.\n    edsk[0] &= 248;\n    edsk[31] &= 127;\n    edsk[31] |= 64;\n    scalarbase(p, edsk);\n    pack(edsk.subarray(32), p);\n    // Remember sign bit.\n    var signBit = edsk[63] & 128;\n    var smlen;\n    if (opt_rnd) {\n        smlen = crypto_sign_direct_rnd(sm, m, n, edsk, opt_rnd);\n    }\n    else {\n        smlen = crypto_sign_direct(sm, m, n, edsk);\n    }\n    // Copy sign bit from public key into signature.\n    sm[63] |= signBit;\n    return smlen;\n}\nfunction unpackneg(r, p) {\n    var t = gf(), chk = gf(), num = gf(), den = gf(), den2 = gf(), den4 = gf(), den6 = gf();\n    set25519(r[2], gf1);\n    unpack25519(r[1], p);\n    S(num, r[1]);\n    M(den, num, D);\n    Z(num, num, r[2]);\n    A(den, r[2], den);\n    S(den2, den);\n    S(den4, den2);\n    M(den6, den4, den2);\n    M(t, den6, num);\n    M(t, t, den);\n    pow2523(t, t);\n    M(t, t, num);\n    M(t, t, den);\n    M(t, t, den);\n    M(r[0], t, den);\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num))\n        M(r[0], r[0], I);\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num))\n        return -1;\n    if (par25519(r[0]) === p[31] >> 7)\n        Z(r[0], gf0, r[0]);\n    M(r[3], r[0], r[1]);\n    return 0;\n}\nfunction crypto_sign_open(m, sm, n, pk) {\n    var i, mlen;\n    var t = new Uint8Array(32), h = new Uint8Array(64);\n    var p = [gf(), gf(), gf(), gf()], q = [gf(), gf(), gf(), gf()];\n    mlen = -1;\n    if (n < 64)\n        return -1;\n    if (unpackneg(q, pk))\n        return -1;\n    for (i = 0; i < n; i++)\n        m[i] = sm[i];\n    for (i = 0; i < 32; i++)\n        m[i + 32] = pk[i];\n    crypto_hash(h, m, n);\n    reduce(h);\n    scalarmult(p, q, h);\n    scalarbase(q, sm.subarray(32));\n    add(p, q);\n    pack(t, p);\n    n -= 64;\n    if (crypto_verify_32(sm, 0, t, 0)) {\n        for (i = 0; i < n; i++)\n            m[i] = 0;\n        return -1;\n    }\n    for (i = 0; i < n; i++)\n        m[i] = sm[i + 64];\n    mlen = n;\n    return mlen;\n}\n// Converts Curve25519 public key back to Ed25519 public key.\n// edwardsY = (montgomeryX - 1) / (montgomeryX + 1)\nfunction convertPublicKey(pk) {\n    var z = new Uint8Array(32), x = gf(), a = gf(), b = gf();\n    unpack25519(x, pk);\n    A(a, x, gf1);\n    Z(b, x, gf1);\n    inv25519(a, a);\n    M(a, a, b);\n    pack25519(z, a);\n    return z;\n}\nfunction curve25519_sign_open(m, sm, n, pk) {\n    // Convert Curve25519 public key into Ed25519 public key.\n    var edpk = convertPublicKey(pk);\n    // Restore sign bit from signature.\n    edpk[31] |= sm[63] & 128;\n    // Remove sign bit from signature.\n    sm[63] &= 127;\n    // Verify signed message.\n    return crypto_sign_open(m, sm, n, edpk);\n}\n/* High-level API */\nfunction checkArrayTypes(...args) {\n    var t, i;\n    for (i = 0; i < arguments.length; i++) {\n        if ((t = Object.prototype.toString.call(arguments[i])) !== '[object Uint8Array]')\n            throw new TypeError('unexpected type ' + t + ', use Uint8Array');\n    }\n}\n/**\n * Returns a raw shared key between own private key and peer's public key (in other words, this is an ECC Diffie-Hellman function X25519, performing scalar multiplication).\n *\n * The result should not be used directly as a key, but should be processed with a one-way function (e.g. HSalsa20 as in NaCl, or any secure cryptographic hash function, such as SHA-256, or key derivation function, such as HKDF).\n *\n * @export\n * @param {Uint8Array} secretKey\n * @param {Uint8Array} publicKey\n * @returns Uint8Array\n */\nfunction sharedKey(secretKey, publicKey) {\n    checkArrayTypes(publicKey, secretKey);\n    if (publicKey.length !== 32)\n        throw new Error('wrong public key length');\n    if (secretKey.length !== 32)\n        throw new Error('wrong secret key length');\n    var sharedKey = new Uint8Array(32);\n    crypto_scalarmult(sharedKey, secretKey, publicKey);\n    return sharedKey;\n}\nexports.sharedKey = sharedKey;\n/**\n * Signs the given message using the private key and returns a signed message (signature concatenated with the message copy).\n *\n * Optional random data argument (which must have 64 random bytes) turns on hash separation and randomization to make signatures non-deterministic.\n *\n * @export\n * @param {Uint8Array} secretKey\n * @param {*} msg\n * @param {Uint8Array} opt_random\n * @returns\n */\nfunction signMessage(secretKey, msg, opt_random) {\n    checkArrayTypes(msg, secretKey);\n    if (secretKey.length !== 32)\n        throw new Error('wrong secret key length');\n    if (opt_random) {\n        checkArrayTypes(opt_random);\n        if (opt_random.length !== 64)\n            throw new Error('wrong random data length');\n        var buf = new Uint8Array(128 + msg.length);\n        curve25519_sign(buf, msg, msg.length, secretKey, opt_random);\n        return new Uint8Array(buf.subarray(0, 64 + msg.length));\n    }\n    else {\n        var signedMsg = new Uint8Array(64 + msg.length);\n        curve25519_sign(signedMsg, msg, msg.length, secretKey);\n        return signedMsg;\n    }\n}\nexports.signMessage = signMessage;\n/**\n * Verifies signed message with the public key and returns the original message without signature if it's correct or null if verification fails.\n *\n * @export\n * @param {Uint8Array} publicKey\n * @param {*} signedMsg\n * @returns Message\n */\nfunction openMessage(publicKey, signedMsg) {\n    checkArrayTypes(signedMsg, publicKey);\n    if (publicKey.length !== 32)\n        throw new Error('wrong public key length');\n    var tmp = new Uint8Array(signedMsg.length);\n    var mlen = curve25519_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n    if (mlen < 0)\n        return null;\n    var m = new Uint8Array(mlen);\n    for (var i = 0; i < m.length; i++)\n        m[i] = tmp[i];\n    return m;\n}\nexports.openMessage = openMessage;\n/**\n * Signs the given message using the private key and returns signature.\n *\n * Optional random data argument (which must have 64 random bytes) turns on hash separation and randomization to make signatures non-deterministic.\n *\n * @export\n * @param {Uint8Array} secretKey\n * @param {*} msg\n * @param {Uint8Array} opt_random\n * @returns\n */\nfunction sign(secretKey, msg, opt_random) {\n    checkArrayTypes(secretKey, msg);\n    if (secretKey.length !== 32)\n        throw new Error('wrong secret key length');\n    if (opt_random) {\n        checkArrayTypes(opt_random);\n        if (opt_random.length !== 64)\n            throw new Error('wrong random data length');\n    }\n    var buf = new Uint8Array((opt_random ? 128 : 64) + msg.length);\n    curve25519_sign(buf, msg, msg.length, secretKey, opt_random);\n    var signature = new Uint8Array(64);\n    for (var i = 0; i < signature.length; i++)\n        signature[i] = buf[i];\n    return signature;\n}\nexports.sign = sign;\n/**\n * Verifies the given signature for the message using the given private key. Returns true if the signature is valid, false otherwise.\n *\n * @export\n * @param {Uint8Array} publicKey\n * @param {*} msg\n * @param {*} signature\n * @returns\n */\nfunction verify(publicKey, msg, signature) {\n    checkArrayTypes(msg, signature, publicKey);\n    if (signature.length !== 64)\n        throw new Error('wrong signature length');\n    if (publicKey.length !== 32)\n        throw new Error('wrong public key length');\n    var sm = new Uint8Array(64 + msg.length);\n    var m = new Uint8Array(64 + msg.length);\n    var i;\n    for (i = 0; i < 64; i++)\n        sm[i] = signature[i];\n    for (i = 0; i < msg.length; i++)\n        sm[i + 64] = msg[i];\n    return curve25519_sign_open(m, sm, sm.length, publicKey) >= 0;\n}\nexports.verify = verify;\n/**\n * Generates a new key pair from the given 32-byte secret seed (which should be generated with a CSPRNG) and returns it as object.\n *\n * The returned keys can be used for signing and key agreement.\n *\n * @export\n * @param {Uint8Array} seed required\n * @returns\n */\nfunction generateKeyPair(seed) {\n    checkArrayTypes(seed);\n    if (seed.length !== 32)\n        throw new Error('wrong seed length');\n    var sk = new Uint8Array(32);\n    var pk = new Uint8Array(32);\n    for (var i = 0; i < 32; i++)\n        sk[i] = seed[i];\n    crypto_scalarmult_base(pk, sk);\n    // Turn secret key into the correct format.\n    sk[0] &= 248;\n    sk[31] &= 127;\n    sk[31] |= 64;\n    // Remove sign bit from public key.\n    pk[31] &= 127;\n    return {\n        public: pk,\n        private: sk,\n    };\n}\nexports.generateKeyPair = generateKeyPair;\nexports.default = {};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}