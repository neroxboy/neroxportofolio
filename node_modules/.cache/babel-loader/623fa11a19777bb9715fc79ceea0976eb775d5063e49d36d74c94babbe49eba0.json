{"ast":null,"code":"\"use strict\";\n\n// ASF Objects\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WmPictureToken = exports.MetadataLibraryObjectState = exports.MetadataObjectState = exports.ExtendedStreamPropertiesObjectState = exports.ExtendedContentDescriptionObjectState = exports.ContentDescriptionObjectState = exports.readCodecEntries = exports.HeaderExtensionObject = exports.StreamPropertiesObject = exports.FilePropertiesObject = exports.IgnoreObjectState = exports.State = exports.HeaderObjectToken = exports.TopLevelHeaderObjectToken = exports.DataType = void 0;\nconst util = require(\"../common/Util\");\nconst Token = require(\"token-types\");\nconst GUID_1 = require(\"./GUID\");\nconst AsfUtil_1 = require(\"./AsfUtil\");\nconst ID3v2Token_1 = require(\"../id3v2/ID3v2Token\");\n/**\n * Data Type: Specifies the type of information being stored. The following values are recognized.\n */\nvar DataType;\n(function (DataType) {\n  /**\n   * Unicode string. The data consists of a sequence of Unicode characters.\n   */\n  DataType[DataType[\"UnicodeString\"] = 0] = \"UnicodeString\";\n  /**\n   * BYTE array. The type of data is implementation-specific.\n   */\n  DataType[DataType[\"ByteArray\"] = 1] = \"ByteArray\";\n  /**\n   * BOOL. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer. Only 0x0000 or 0x0001 are permitted values.\n   */\n  DataType[DataType[\"Bool\"] = 2] = \"Bool\";\n  /**\n   * DWORD. The data is 4 bytes long and should be interpreted as a 32-bit unsigned integer.\n   */\n  DataType[DataType[\"DWord\"] = 3] = \"DWord\";\n  /**\n   * QWORD. The data is 8 bytes long and should be interpreted as a 64-bit unsigned integer.\n   */\n  DataType[DataType[\"QWord\"] = 4] = \"QWord\";\n  /**\n   * WORD. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer.\n   */\n  DataType[DataType[\"Word\"] = 5] = \"Word\";\n})(DataType = exports.DataType || (exports.DataType = {}));\n/**\n * Token for: 3. ASF top-level Header Object\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3\n */\nexports.TopLevelHeaderObjectToken = {\n  len: 30,\n  get: (buf, off) => {\n    return {\n      objectId: GUID_1.default.fromBin(new Token.BufferType(16).get(buf, off)),\n      objectSize: Number(Token.UINT64_LE.get(buf, off + 16)),\n      numberOfHeaderObjects: Token.UINT32_LE.get(buf, off + 24)\n      // Reserved: 2 bytes\n    };\n  }\n};\n/**\n * Token for: 3.1 Header Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_1\n */\nexports.HeaderObjectToken = {\n  len: 24,\n  get: (buf, off) => {\n    return {\n      objectId: GUID_1.default.fromBin(new Token.BufferType(16).get(buf, off)),\n      objectSize: Number(Token.UINT64_LE.get(buf, off + 16))\n    };\n  }\n};\nclass State {\n  constructor(header) {\n    this.len = Number(header.objectSize) - exports.HeaderObjectToken.len;\n  }\n  postProcessTag(tags, name, valueType, data) {\n    if (name === 'WM/Picture') {\n      tags.push({\n        id: name,\n        value: WmPictureToken.fromBuffer(data)\n      });\n    } else {\n      const parseAttr = AsfUtil_1.AsfUtil.getParserForAttr(valueType);\n      if (!parseAttr) {\n        throw new Error('unexpected value headerType: ' + valueType);\n      }\n      tags.push({\n        id: name,\n        value: parseAttr(data)\n      });\n    }\n  }\n}\nexports.State = State;\n// ToDo: use ignore type\nclass IgnoreObjectState extends State {\n  constructor(header) {\n    super(header);\n  }\n  get(buf, off) {\n    return null;\n  }\n}\nexports.IgnoreObjectState = IgnoreObjectState;\n/**\n * Token for: 3.2: File Properties Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_2\n */\nclass FilePropertiesObject extends State {\n  constructor(header) {\n    super(header);\n  }\n  get(buf, off) {\n    return {\n      fileId: GUID_1.default.fromBin(buf, off),\n      fileSize: Token.UINT64_LE.get(buf, off + 16),\n      creationDate: Token.UINT64_LE.get(buf, off + 24),\n      dataPacketsCount: Token.UINT64_LE.get(buf, off + 32),\n      playDuration: Token.UINT64_LE.get(buf, off + 40),\n      sendDuration: Token.UINT64_LE.get(buf, off + 48),\n      preroll: Token.UINT64_LE.get(buf, off + 56),\n      flags: {\n        broadcast: util.getBit(buf, off + 64, 24),\n        seekable: util.getBit(buf, off + 64, 25)\n      },\n      // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n      minimumDataPacketSize: Token.UINT32_LE.get(buf, off + 68),\n      maximumDataPacketSize: Token.UINT32_LE.get(buf, off + 72),\n      maximumBitrate: Token.UINT32_LE.get(buf, off + 76)\n    };\n  }\n}\nFilePropertiesObject.guid = GUID_1.default.FilePropertiesObject;\nexports.FilePropertiesObject = FilePropertiesObject;\n/**\n * Token for: 3.3 Stream Properties Object (mandatory, one per stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_3\n */\nclass StreamPropertiesObject extends State {\n  constructor(header) {\n    super(header);\n  }\n  get(buf, off) {\n    return {\n      streamType: GUID_1.default.decodeMediaType(GUID_1.default.fromBin(buf, off)),\n      errorCorrectionType: GUID_1.default.fromBin(buf, off + 8)\n      // ToDo\n    };\n  }\n}\nStreamPropertiesObject.guid = GUID_1.default.StreamPropertiesObject;\nexports.StreamPropertiesObject = StreamPropertiesObject;\n/**\n * 3.4: Header Extension Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_4\n */\nclass HeaderExtensionObject {\n  constructor() {\n    this.len = 22;\n  }\n  get(buf, off) {\n    return {\n      reserved1: GUID_1.default.fromBin(buf, off),\n      reserved2: buf.readUInt16LE(off + 16),\n      extensionDataSize: buf.readUInt32LE(off + 18)\n    };\n  }\n}\nHeaderExtensionObject.guid = GUID_1.default.HeaderExtensionObject;\nexports.HeaderExtensionObject = HeaderExtensionObject;\n/**\n * 3.5: The Codec List Object provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\nconst CodecListObjectHeader = {\n  len: 20,\n  get: (buf, off) => {\n    return {\n      entryCount: buf.readUInt16LE(off + 16)\n    };\n  }\n};\nasync function readString(tokenizer) {\n  const length = await tokenizer.readNumber(Token.UINT16_LE);\n  return (await tokenizer.readToken(new Token.StringType(length * 2, 'utf16le'))).replace('\\0', '');\n}\n/**\n * 3.5: Read the Codec-List-Object, which provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\nasync function readCodecEntries(tokenizer) {\n  const codecHeader = await tokenizer.readToken(CodecListObjectHeader);\n  const entries = [];\n  for (let i = 0; i < codecHeader.entryCount; ++i) {\n    entries.push(await readCodecEntry(tokenizer));\n  }\n  return entries;\n}\nexports.readCodecEntries = readCodecEntries;\nasync function readInformation(tokenizer) {\n  const length = await tokenizer.readNumber(Token.UINT16_LE);\n  const buf = Buffer.alloc(length);\n  await tokenizer.readBuffer(buf);\n  return buf;\n}\n/**\n * Read Codec-Entries\n * @param tokenizer\n */\nasync function readCodecEntry(tokenizer) {\n  const type = await tokenizer.readNumber(Token.UINT16_LE);\n  return {\n    type: {\n      videoCodec: (type & 0x0001) === 0x0001,\n      audioCodec: (type & 0x0002) === 0x0002\n    },\n    codecName: await readString(tokenizer),\n    description: await readString(tokenizer),\n    information: await readInformation(tokenizer)\n  };\n}\n/**\n * 3.10 Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_10\n */\nclass ContentDescriptionObjectState extends State {\n  constructor(header) {\n    super(header);\n  }\n  get(buf, off) {\n    const tags = [];\n    let pos = off + 10;\n    for (let i = 0; i < ContentDescriptionObjectState.contentDescTags.length; ++i) {\n      const length = buf.readUInt16LE(off + i * 2);\n      if (length > 0) {\n        const tagName = ContentDescriptionObjectState.contentDescTags[i];\n        const end = pos + length;\n        tags.push({\n          id: tagName,\n          value: AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, end))\n        });\n        pos = end;\n      }\n    }\n    return tags;\n  }\n}\nContentDescriptionObjectState.guid = GUID_1.default.ContentDescriptionObject;\nContentDescriptionObjectState.contentDescTags = ['Title', 'Author', 'Copyright', 'Description', 'Rating'];\nexports.ContentDescriptionObjectState = ContentDescriptionObjectState;\n/**\n * 3.11 Extended Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_11\n */\nclass ExtendedContentDescriptionObjectState extends State {\n  constructor(header) {\n    super(header);\n  }\n  get(buf, off) {\n    const tags = [];\n    const attrCount = buf.readUInt16LE(off);\n    let pos = off + 2;\n    for (let i = 0; i < attrCount; i += 1) {\n      const nameLen = buf.readUInt16LE(pos);\n      pos += 2;\n      const name = AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, pos + nameLen));\n      pos += nameLen;\n      const valueType = buf.readUInt16LE(pos);\n      pos += 2;\n      const valueLen = buf.readUInt16LE(pos);\n      pos += 2;\n      const value = buf.slice(pos, pos + valueLen);\n      pos += valueLen;\n      this.postProcessTag(tags, name, valueType, value);\n    }\n    return tags;\n  }\n}\nExtendedContentDescriptionObjectState.guid = GUID_1.default.ExtendedContentDescriptionObject;\nexports.ExtendedContentDescriptionObjectState = ExtendedContentDescriptionObjectState;\n/**\n * 4.1 Extended Stream Properties Object (optional, 1 per media stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_1\n */\nclass ExtendedStreamPropertiesObjectState extends State {\n  constructor(header) {\n    super(header);\n  }\n  get(buf, off) {\n    return {\n      startTime: Token.UINT64_LE.get(buf, off),\n      endTime: Token.UINT64_LE.get(buf, off + 8),\n      dataBitrate: buf.readInt32LE(off + 12),\n      bufferSize: buf.readInt32LE(off + 16),\n      initialBufferFullness: buf.readInt32LE(off + 20),\n      alternateDataBitrate: buf.readInt32LE(off + 24),\n      alternateBufferSize: buf.readInt32LE(off + 28),\n      alternateInitialBufferFullness: buf.readInt32LE(off + 32),\n      maximumObjectSize: buf.readInt32LE(off + 36),\n      flags: {\n        reliableFlag: util.getBit(buf, off + 40, 0),\n        seekableFlag: util.getBit(buf, off + 40, 1),\n        resendLiveCleanpointsFlag: util.getBit(buf, off + 40, 2)\n      },\n      // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n      streamNumber: buf.readInt16LE(off + 42),\n      streamLanguageId: buf.readInt16LE(off + 44),\n      averageTimePerFrame: buf.readInt32LE(off + 52),\n      streamNameCount: buf.readInt32LE(off + 54),\n      payloadExtensionSystems: buf.readInt32LE(off + 56),\n      streamNames: [],\n      streamPropertiesObject: null\n    };\n  }\n}\nExtendedStreamPropertiesObjectState.guid = GUID_1.default.ExtendedStreamPropertiesObject;\nexports.ExtendedStreamPropertiesObjectState = ExtendedStreamPropertiesObjectState;\n/**\n * 4.7  Metadata Object (optional, 0 or 1)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_7\n */\nclass MetadataObjectState extends State {\n  constructor(header) {\n    super(header);\n  }\n  get(uint8Array, off) {\n    const tags = [];\n    const buf = Buffer.from(uint8Array);\n    const descriptionRecordsCount = buf.readUInt16LE(off);\n    let pos = off + 2;\n    for (let i = 0; i < descriptionRecordsCount; i += 1) {\n      pos += 4;\n      const nameLen = buf.readUInt16LE(pos);\n      pos += 2;\n      const dataType = buf.readUInt16LE(pos);\n      pos += 2;\n      const dataLen = buf.readUInt32LE(pos);\n      pos += 4;\n      const name = AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, pos + nameLen));\n      pos += nameLen;\n      const data = buf.slice(pos, pos + dataLen);\n      pos += dataLen;\n      this.postProcessTag(tags, name, dataType, data);\n    }\n    return tags;\n  }\n}\nMetadataObjectState.guid = GUID_1.default.MetadataObject;\nexports.MetadataObjectState = MetadataObjectState;\n// 4.8\tMetadata Library Object (optional, 0 or 1)\nclass MetadataLibraryObjectState extends MetadataObjectState {\n  constructor(header) {\n    super(header);\n  }\n}\nMetadataLibraryObjectState.guid = GUID_1.default.MetadataLibraryObject;\nexports.MetadataLibraryObjectState = MetadataLibraryObjectState;\n/**\n * Ref: https://msdn.microsoft.com/en-us/library/windows/desktop/dd757977(v=vs.85).aspx\n */\nclass WmPictureToken {\n  static fromBase64(base64str) {\n    return this.fromBuffer(Buffer.from(base64str, 'base64'));\n  }\n  static fromBuffer(buffer) {\n    const pic = new WmPictureToken(buffer.length);\n    return pic.get(buffer, 0);\n  }\n  constructor(len) {\n    this.len = len;\n  }\n  get(buffer, offset) {\n    const typeId = buffer.readUInt8(offset++);\n    const size = buffer.readInt32LE(offset);\n    let index = 5;\n    while (buffer.readUInt16BE(index) !== 0) {\n      index += 2;\n    }\n    const format = buffer.slice(5, index).toString('utf16le');\n    while (buffer.readUInt16BE(index) !== 0) {\n      index += 2;\n    }\n    const description = buffer.slice(5, index).toString('utf16le');\n    return {\n      type: ID3v2Token_1.AttachedPictureType[typeId],\n      format,\n      description,\n      size,\n      data: buffer.slice(index + 4)\n    };\n  }\n}\nexports.WmPictureToken = WmPictureToken;","map":{"version":3,"names":["Object","defineProperty","exports","value","WmPictureToken","MetadataLibraryObjectState","MetadataObjectState","ExtendedStreamPropertiesObjectState","ExtendedContentDescriptionObjectState","ContentDescriptionObjectState","readCodecEntries","HeaderExtensionObject","StreamPropertiesObject","FilePropertiesObject","IgnoreObjectState","State","HeaderObjectToken","TopLevelHeaderObjectToken","DataType","util","require","Token","GUID_1","AsfUtil_1","ID3v2Token_1","len","get","buf","off","objectId","default","fromBin","BufferType","objectSize","Number","UINT64_LE","numberOfHeaderObjects","UINT32_LE","constructor","header","postProcessTag","tags","name","valueType","data","push","id","fromBuffer","parseAttr","AsfUtil","getParserForAttr","Error","fileId","fileSize","creationDate","dataPacketsCount","playDuration","sendDuration","preroll","flags","broadcast","getBit","seekable","minimumDataPacketSize","maximumDataPacketSize","maximumBitrate","guid","streamType","decodeMediaType","errorCorrectionType","reserved1","reserved2","readUInt16LE","extensionDataSize","readUInt32LE","CodecListObjectHeader","entryCount","readString","tokenizer","length","readNumber","UINT16_LE","readToken","StringType","replace","codecHeader","entries","i","readCodecEntry","readInformation","Buffer","alloc","readBuffer","type","videoCodec","audioCodec","codecName","description","information","pos","contentDescTags","tagName","end","parseUnicodeAttr","slice","ContentDescriptionObject","attrCount","nameLen","valueLen","ExtendedContentDescriptionObject","startTime","endTime","dataBitrate","readInt32LE","bufferSize","initialBufferFullness","alternateDataBitrate","alternateBufferSize","alternateInitialBufferFullness","maximumObjectSize","reliableFlag","seekableFlag","resendLiveCleanpointsFlag","streamNumber","readInt16LE","streamLanguageId","averageTimePerFrame","streamNameCount","payloadExtensionSystems","streamNames","streamPropertiesObject","ExtendedStreamPropertiesObject","uint8Array","from","descriptionRecordsCount","dataType","dataLen","MetadataObject","MetadataLibraryObject","fromBase64","base64str","buffer","pic","offset","typeId","readUInt8","size","index","readUInt16BE","format","toString","AttachedPictureType"],"sources":["C:/Users/vanitas/node_modules/music-metadata/lib/asf/AsfObject.js"],"sourcesContent":["\"use strict\";\n// ASF Objects\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WmPictureToken = exports.MetadataLibraryObjectState = exports.MetadataObjectState = exports.ExtendedStreamPropertiesObjectState = exports.ExtendedContentDescriptionObjectState = exports.ContentDescriptionObjectState = exports.readCodecEntries = exports.HeaderExtensionObject = exports.StreamPropertiesObject = exports.FilePropertiesObject = exports.IgnoreObjectState = exports.State = exports.HeaderObjectToken = exports.TopLevelHeaderObjectToken = exports.DataType = void 0;\nconst util = require(\"../common/Util\");\nconst Token = require(\"token-types\");\nconst GUID_1 = require(\"./GUID\");\nconst AsfUtil_1 = require(\"./AsfUtil\");\nconst ID3v2Token_1 = require(\"../id3v2/ID3v2Token\");\n/**\n * Data Type: Specifies the type of information being stored. The following values are recognized.\n */\nvar DataType;\n(function (DataType) {\n    /**\n     * Unicode string. The data consists of a sequence of Unicode characters.\n     */\n    DataType[DataType[\"UnicodeString\"] = 0] = \"UnicodeString\";\n    /**\n     * BYTE array. The type of data is implementation-specific.\n     */\n    DataType[DataType[\"ByteArray\"] = 1] = \"ByteArray\";\n    /**\n     * BOOL. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer. Only 0x0000 or 0x0001 are permitted values.\n     */\n    DataType[DataType[\"Bool\"] = 2] = \"Bool\";\n    /**\n     * DWORD. The data is 4 bytes long and should be interpreted as a 32-bit unsigned integer.\n     */\n    DataType[DataType[\"DWord\"] = 3] = \"DWord\";\n    /**\n     * QWORD. The data is 8 bytes long and should be interpreted as a 64-bit unsigned integer.\n     */\n    DataType[DataType[\"QWord\"] = 4] = \"QWord\";\n    /**\n     * WORD. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer.\n     */\n    DataType[DataType[\"Word\"] = 5] = \"Word\";\n})(DataType = exports.DataType || (exports.DataType = {}));\n/**\n * Token for: 3. ASF top-level Header Object\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3\n */\nexports.TopLevelHeaderObjectToken = {\n    len: 30,\n    get: (buf, off) => {\n        return {\n            objectId: GUID_1.default.fromBin(new Token.BufferType(16).get(buf, off)),\n            objectSize: Number(Token.UINT64_LE.get(buf, off + 16)),\n            numberOfHeaderObjects: Token.UINT32_LE.get(buf, off + 24)\n            // Reserved: 2 bytes\n        };\n    }\n};\n/**\n * Token for: 3.1 Header Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_1\n */\nexports.HeaderObjectToken = {\n    len: 24,\n    get: (buf, off) => {\n        return {\n            objectId: GUID_1.default.fromBin(new Token.BufferType(16).get(buf, off)),\n            objectSize: Number(Token.UINT64_LE.get(buf, off + 16))\n        };\n    }\n};\nclass State {\n    constructor(header) {\n        this.len = Number(header.objectSize) - exports.HeaderObjectToken.len;\n    }\n    postProcessTag(tags, name, valueType, data) {\n        if (name === 'WM/Picture') {\n            tags.push({ id: name, value: WmPictureToken.fromBuffer(data) });\n        }\n        else {\n            const parseAttr = AsfUtil_1.AsfUtil.getParserForAttr(valueType);\n            if (!parseAttr) {\n                throw new Error('unexpected value headerType: ' + valueType);\n            }\n            tags.push({ id: name, value: parseAttr(data) });\n        }\n    }\n}\nexports.State = State;\n// ToDo: use ignore type\nclass IgnoreObjectState extends State {\n    constructor(header) {\n        super(header);\n    }\n    get(buf, off) {\n        return null;\n    }\n}\nexports.IgnoreObjectState = IgnoreObjectState;\n/**\n * Token for: 3.2: File Properties Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_2\n */\nclass FilePropertiesObject extends State {\n    constructor(header) {\n        super(header);\n    }\n    get(buf, off) {\n        return {\n            fileId: GUID_1.default.fromBin(buf, off),\n            fileSize: Token.UINT64_LE.get(buf, off + 16),\n            creationDate: Token.UINT64_LE.get(buf, off + 24),\n            dataPacketsCount: Token.UINT64_LE.get(buf, off + 32),\n            playDuration: Token.UINT64_LE.get(buf, off + 40),\n            sendDuration: Token.UINT64_LE.get(buf, off + 48),\n            preroll: Token.UINT64_LE.get(buf, off + 56),\n            flags: {\n                broadcast: util.getBit(buf, off + 64, 24),\n                seekable: util.getBit(buf, off + 64, 25)\n            },\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n            minimumDataPacketSize: Token.UINT32_LE.get(buf, off + 68),\n            maximumDataPacketSize: Token.UINT32_LE.get(buf, off + 72),\n            maximumBitrate: Token.UINT32_LE.get(buf, off + 76)\n        };\n    }\n}\nFilePropertiesObject.guid = GUID_1.default.FilePropertiesObject;\nexports.FilePropertiesObject = FilePropertiesObject;\n/**\n * Token for: 3.3 Stream Properties Object (mandatory, one per stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_3\n */\nclass StreamPropertiesObject extends State {\n    constructor(header) {\n        super(header);\n    }\n    get(buf, off) {\n        return {\n            streamType: GUID_1.default.decodeMediaType(GUID_1.default.fromBin(buf, off)),\n            errorCorrectionType: GUID_1.default.fromBin(buf, off + 8)\n            // ToDo\n        };\n    }\n}\nStreamPropertiesObject.guid = GUID_1.default.StreamPropertiesObject;\nexports.StreamPropertiesObject = StreamPropertiesObject;\n/**\n * 3.4: Header Extension Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_4\n */\nclass HeaderExtensionObject {\n    constructor() {\n        this.len = 22;\n    }\n    get(buf, off) {\n        return {\n            reserved1: GUID_1.default.fromBin(buf, off),\n            reserved2: buf.readUInt16LE(off + 16),\n            extensionDataSize: buf.readUInt32LE(off + 18)\n        };\n    }\n}\nHeaderExtensionObject.guid = GUID_1.default.HeaderExtensionObject;\nexports.HeaderExtensionObject = HeaderExtensionObject;\n/**\n * 3.5: The Codec List Object provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\nconst CodecListObjectHeader = {\n    len: 20,\n    get: (buf, off) => {\n        return {\n            entryCount: buf.readUInt16LE(off + 16)\n        };\n    }\n};\nasync function readString(tokenizer) {\n    const length = await tokenizer.readNumber(Token.UINT16_LE);\n    return (await tokenizer.readToken(new Token.StringType(length * 2, 'utf16le'))).replace('\\0', '');\n}\n/**\n * 3.5: Read the Codec-List-Object, which provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\nasync function readCodecEntries(tokenizer) {\n    const codecHeader = await tokenizer.readToken(CodecListObjectHeader);\n    const entries = [];\n    for (let i = 0; i < codecHeader.entryCount; ++i) {\n        entries.push(await readCodecEntry(tokenizer));\n    }\n    return entries;\n}\nexports.readCodecEntries = readCodecEntries;\nasync function readInformation(tokenizer) {\n    const length = await tokenizer.readNumber(Token.UINT16_LE);\n    const buf = Buffer.alloc(length);\n    await tokenizer.readBuffer(buf);\n    return buf;\n}\n/**\n * Read Codec-Entries\n * @param tokenizer\n */\nasync function readCodecEntry(tokenizer) {\n    const type = await tokenizer.readNumber(Token.UINT16_LE);\n    return {\n        type: {\n            videoCodec: (type & 0x0001) === 0x0001,\n            audioCodec: (type & 0x0002) === 0x0002\n        },\n        codecName: await readString(tokenizer),\n        description: await readString(tokenizer),\n        information: await readInformation(tokenizer)\n    };\n}\n/**\n * 3.10 Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_10\n */\nclass ContentDescriptionObjectState extends State {\n    constructor(header) {\n        super(header);\n    }\n    get(buf, off) {\n        const tags = [];\n        let pos = off + 10;\n        for (let i = 0; i < ContentDescriptionObjectState.contentDescTags.length; ++i) {\n            const length = buf.readUInt16LE(off + i * 2);\n            if (length > 0) {\n                const tagName = ContentDescriptionObjectState.contentDescTags[i];\n                const end = pos + length;\n                tags.push({ id: tagName, value: AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, end)) });\n                pos = end;\n            }\n        }\n        return tags;\n    }\n}\nContentDescriptionObjectState.guid = GUID_1.default.ContentDescriptionObject;\nContentDescriptionObjectState.contentDescTags = ['Title', 'Author', 'Copyright', 'Description', 'Rating'];\nexports.ContentDescriptionObjectState = ContentDescriptionObjectState;\n/**\n * 3.11 Extended Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_11\n */\nclass ExtendedContentDescriptionObjectState extends State {\n    constructor(header) {\n        super(header);\n    }\n    get(buf, off) {\n        const tags = [];\n        const attrCount = buf.readUInt16LE(off);\n        let pos = off + 2;\n        for (let i = 0; i < attrCount; i += 1) {\n            const nameLen = buf.readUInt16LE(pos);\n            pos += 2;\n            const name = AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, pos + nameLen));\n            pos += nameLen;\n            const valueType = buf.readUInt16LE(pos);\n            pos += 2;\n            const valueLen = buf.readUInt16LE(pos);\n            pos += 2;\n            const value = buf.slice(pos, pos + valueLen);\n            pos += valueLen;\n            this.postProcessTag(tags, name, valueType, value);\n        }\n        return tags;\n    }\n}\nExtendedContentDescriptionObjectState.guid = GUID_1.default.ExtendedContentDescriptionObject;\nexports.ExtendedContentDescriptionObjectState = ExtendedContentDescriptionObjectState;\n/**\n * 4.1 Extended Stream Properties Object (optional, 1 per media stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_1\n */\nclass ExtendedStreamPropertiesObjectState extends State {\n    constructor(header) {\n        super(header);\n    }\n    get(buf, off) {\n        return {\n            startTime: Token.UINT64_LE.get(buf, off),\n            endTime: Token.UINT64_LE.get(buf, off + 8),\n            dataBitrate: buf.readInt32LE(off + 12),\n            bufferSize: buf.readInt32LE(off + 16),\n            initialBufferFullness: buf.readInt32LE(off + 20),\n            alternateDataBitrate: buf.readInt32LE(off + 24),\n            alternateBufferSize: buf.readInt32LE(off + 28),\n            alternateInitialBufferFullness: buf.readInt32LE(off + 32),\n            maximumObjectSize: buf.readInt32LE(off + 36),\n            flags: {\n                reliableFlag: util.getBit(buf, off + 40, 0),\n                seekableFlag: util.getBit(buf, off + 40, 1),\n                resendLiveCleanpointsFlag: util.getBit(buf, off + 40, 2)\n            },\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n            streamNumber: buf.readInt16LE(off + 42),\n            streamLanguageId: buf.readInt16LE(off + 44),\n            averageTimePerFrame: buf.readInt32LE(off + 52),\n            streamNameCount: buf.readInt32LE(off + 54),\n            payloadExtensionSystems: buf.readInt32LE(off + 56),\n            streamNames: [],\n            streamPropertiesObject: null\n        };\n    }\n}\nExtendedStreamPropertiesObjectState.guid = GUID_1.default.ExtendedStreamPropertiesObject;\nexports.ExtendedStreamPropertiesObjectState = ExtendedStreamPropertiesObjectState;\n/**\n * 4.7  Metadata Object (optional, 0 or 1)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_7\n */\nclass MetadataObjectState extends State {\n    constructor(header) {\n        super(header);\n    }\n    get(uint8Array, off) {\n        const tags = [];\n        const buf = Buffer.from(uint8Array);\n        const descriptionRecordsCount = buf.readUInt16LE(off);\n        let pos = off + 2;\n        for (let i = 0; i < descriptionRecordsCount; i += 1) {\n            pos += 4;\n            const nameLen = buf.readUInt16LE(pos);\n            pos += 2;\n            const dataType = buf.readUInt16LE(pos);\n            pos += 2;\n            const dataLen = buf.readUInt32LE(pos);\n            pos += 4;\n            const name = AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, pos + nameLen));\n            pos += nameLen;\n            const data = buf.slice(pos, pos + dataLen);\n            pos += dataLen;\n            this.postProcessTag(tags, name, dataType, data);\n        }\n        return tags;\n    }\n}\nMetadataObjectState.guid = GUID_1.default.MetadataObject;\nexports.MetadataObjectState = MetadataObjectState;\n// 4.8\tMetadata Library Object (optional, 0 or 1)\nclass MetadataLibraryObjectState extends MetadataObjectState {\n    constructor(header) {\n        super(header);\n    }\n}\nMetadataLibraryObjectState.guid = GUID_1.default.MetadataLibraryObject;\nexports.MetadataLibraryObjectState = MetadataLibraryObjectState;\n/**\n * Ref: https://msdn.microsoft.com/en-us/library/windows/desktop/dd757977(v=vs.85).aspx\n */\nclass WmPictureToken {\n    static fromBase64(base64str) {\n        return this.fromBuffer(Buffer.from(base64str, 'base64'));\n    }\n    static fromBuffer(buffer) {\n        const pic = new WmPictureToken(buffer.length);\n        return pic.get(buffer, 0);\n    }\n    constructor(len) {\n        this.len = len;\n    }\n    get(buffer, offset) {\n        const typeId = buffer.readUInt8(offset++);\n        const size = buffer.readInt32LE(offset);\n        let index = 5;\n        while (buffer.readUInt16BE(index) !== 0) {\n            index += 2;\n        }\n        const format = buffer.slice(5, index).toString('utf16le');\n        while (buffer.readUInt16BE(index) !== 0) {\n            index += 2;\n        }\n        const description = buffer.slice(5, index).toString('utf16le');\n        return {\n            type: ID3v2Token_1.AttachedPictureType[typeId],\n            format,\n            description,\n            size,\n            data: buffer.slice(index + 4)\n        };\n    }\n}\nexports.WmPictureToken = WmPictureToken;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}