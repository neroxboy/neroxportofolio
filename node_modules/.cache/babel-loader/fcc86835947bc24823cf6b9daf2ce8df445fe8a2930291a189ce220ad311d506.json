{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextEncodingToken = exports.ExtendedHeader = exports.ID3v2Header = exports.UINT32SYNCSAFE = exports.AttachedPictureType = void 0;\nconst Token = require(\"token-types\");\nconst util = require(\"../common/Util\");\n/**\n * The picture type according to the ID3v2 APIC frame\n * Ref: http://id3.org/id3v2.3.0#Attached_picture\n */\nvar AttachedPictureType;\n(function (AttachedPictureType) {\n  AttachedPictureType[AttachedPictureType[\"Other\"] = 0] = \"Other\";\n  AttachedPictureType[AttachedPictureType[\"32x32 pixels 'file icon' (PNG only)\"] = 1] = \"32x32 pixels 'file icon' (PNG only)\";\n  AttachedPictureType[AttachedPictureType[\"Other file icon\"] = 2] = \"Other file icon\";\n  AttachedPictureType[AttachedPictureType[\"Cover (front)\"] = 3] = \"Cover (front)\";\n  AttachedPictureType[AttachedPictureType[\"Cover (back)\"] = 4] = \"Cover (back)\";\n  AttachedPictureType[AttachedPictureType[\"Leaflet page\"] = 5] = \"Leaflet page\";\n  AttachedPictureType[AttachedPictureType[\"Media (e.g. label side of CD)\"] = 6] = \"Media (e.g. label side of CD)\";\n  AttachedPictureType[AttachedPictureType[\"Lead artist/lead performer/soloist\"] = 7] = \"Lead artist/lead performer/soloist\";\n  AttachedPictureType[AttachedPictureType[\"Artist/performer\"] = 8] = \"Artist/performer\";\n  AttachedPictureType[AttachedPictureType[\"Conductor\"] = 9] = \"Conductor\";\n  AttachedPictureType[AttachedPictureType[\"Band/Orchestra\"] = 10] = \"Band/Orchestra\";\n  AttachedPictureType[AttachedPictureType[\"Composer\"] = 11] = \"Composer\";\n  AttachedPictureType[AttachedPictureType[\"Lyricist/text writer\"] = 12] = \"Lyricist/text writer\";\n  AttachedPictureType[AttachedPictureType[\"Recording Location\"] = 13] = \"Recording Location\";\n  AttachedPictureType[AttachedPictureType[\"During recording\"] = 14] = \"During recording\";\n  AttachedPictureType[AttachedPictureType[\"During performance\"] = 15] = \"During performance\";\n  AttachedPictureType[AttachedPictureType[\"Movie/video screen capture\"] = 16] = \"Movie/video screen capture\";\n  AttachedPictureType[AttachedPictureType[\"A bright coloured fish\"] = 17] = \"A bright coloured fish\";\n  AttachedPictureType[AttachedPictureType[\"Illustration\"] = 18] = \"Illustration\";\n  AttachedPictureType[AttachedPictureType[\"Band/artist logotype\"] = 19] = \"Band/artist logotype\";\n  AttachedPictureType[AttachedPictureType[\"Publisher/Studio logotype\"] = 20] = \"Publisher/Studio logotype\";\n})(AttachedPictureType = exports.AttachedPictureType || (exports.AttachedPictureType = {}));\n/**\n * 28 bits (representing up to 256MB) integer, the msb is 0 to avoid 'false syncsignals'.\n * 4 * %0xxxxxxx\n */\nexports.UINT32SYNCSAFE = {\n  get: (buf, off) => {\n    return buf[off + 3] & 0x7f | buf[off + 2] << 7 | buf[off + 1] << 14 | buf[off] << 21;\n  },\n  len: 4\n};\n/**\n * ID3v2 header\n * Ref: http://id3.org/id3v2.3.0#ID3v2_header\n * ToDo\n */\nexports.ID3v2Header = {\n  len: 10,\n  get: (buf, off) => {\n    return {\n      // ID3v2/file identifier   \"ID3\"\n      fileIdentifier: new Token.StringType(3, 'ascii').get(buf, off),\n      // ID3v2 versionIndex\n      version: {\n        major: Token.INT8.get(buf, off + 3),\n        revision: Token.INT8.get(buf, off + 4)\n      },\n      // ID3v2 flags\n      flags: {\n        // Unsynchronisation\n        unsynchronisation: util.getBit(buf, off + 5, 7),\n        // Extended header\n        isExtendedHeader: util.getBit(buf, off + 5, 6),\n        // Experimental indicator\n        expIndicator: util.getBit(buf, off + 5, 5),\n        footer: util.getBit(buf, off + 5, 4)\n      },\n      size: exports.UINT32SYNCSAFE.get(buf, off + 6)\n    };\n  }\n};\nexports.ExtendedHeader = {\n  len: 10,\n  get: (buf, off) => {\n    return {\n      // Extended header size\n      size: Token.UINT32_BE.get(buf, off),\n      // Extended Flags\n      extendedFlags: Token.UINT16_BE.get(buf, off + 4),\n      // Size of padding\n      sizeOfPadding: Token.UINT32_BE.get(buf, off + 6),\n      // CRC data present\n      crcDataPresent: util.getBit(buf, off + 4, 31)\n    };\n  }\n};\nexports.TextEncodingToken = {\n  len: 1,\n  get: (uint8Array, off) => {\n    switch (uint8Array[off]) {\n      case 0x00:\n        return {\n          encoding: 'latin1'\n        };\n      // binary\n      case 0x01:\n        return {\n          encoding: 'utf16le',\n          bom: true\n        };\n      case 0x02:\n        return {\n          encoding: 'utf16le',\n          bom: false\n        };\n      case 0x03:\n        return {\n          encoding: 'utf8',\n          bom: false\n        };\n      default:\n        return {\n          encoding: 'utf8',\n          bom: false\n        };\n    }\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","TextEncodingToken","ExtendedHeader","ID3v2Header","UINT32SYNCSAFE","AttachedPictureType","Token","require","util","get","buf","off","len","fileIdentifier","StringType","version","major","INT8","revision","flags","unsynchronisation","getBit","isExtendedHeader","expIndicator","footer","size","UINT32_BE","extendedFlags","UINT16_BE","sizeOfPadding","crcDataPresent","uint8Array","encoding","bom"],"sources":["C:/Users/vanitas/node_modules/music-metadata/lib/id3v2/ID3v2Token.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextEncodingToken = exports.ExtendedHeader = exports.ID3v2Header = exports.UINT32SYNCSAFE = exports.AttachedPictureType = void 0;\nconst Token = require(\"token-types\");\nconst util = require(\"../common/Util\");\n/**\n * The picture type according to the ID3v2 APIC frame\n * Ref: http://id3.org/id3v2.3.0#Attached_picture\n */\nvar AttachedPictureType;\n(function (AttachedPictureType) {\n    AttachedPictureType[AttachedPictureType[\"Other\"] = 0] = \"Other\";\n    AttachedPictureType[AttachedPictureType[\"32x32 pixels 'file icon' (PNG only)\"] = 1] = \"32x32 pixels 'file icon' (PNG only)\";\n    AttachedPictureType[AttachedPictureType[\"Other file icon\"] = 2] = \"Other file icon\";\n    AttachedPictureType[AttachedPictureType[\"Cover (front)\"] = 3] = \"Cover (front)\";\n    AttachedPictureType[AttachedPictureType[\"Cover (back)\"] = 4] = \"Cover (back)\";\n    AttachedPictureType[AttachedPictureType[\"Leaflet page\"] = 5] = \"Leaflet page\";\n    AttachedPictureType[AttachedPictureType[\"Media (e.g. label side of CD)\"] = 6] = \"Media (e.g. label side of CD)\";\n    AttachedPictureType[AttachedPictureType[\"Lead artist/lead performer/soloist\"] = 7] = \"Lead artist/lead performer/soloist\";\n    AttachedPictureType[AttachedPictureType[\"Artist/performer\"] = 8] = \"Artist/performer\";\n    AttachedPictureType[AttachedPictureType[\"Conductor\"] = 9] = \"Conductor\";\n    AttachedPictureType[AttachedPictureType[\"Band/Orchestra\"] = 10] = \"Band/Orchestra\";\n    AttachedPictureType[AttachedPictureType[\"Composer\"] = 11] = \"Composer\";\n    AttachedPictureType[AttachedPictureType[\"Lyricist/text writer\"] = 12] = \"Lyricist/text writer\";\n    AttachedPictureType[AttachedPictureType[\"Recording Location\"] = 13] = \"Recording Location\";\n    AttachedPictureType[AttachedPictureType[\"During recording\"] = 14] = \"During recording\";\n    AttachedPictureType[AttachedPictureType[\"During performance\"] = 15] = \"During performance\";\n    AttachedPictureType[AttachedPictureType[\"Movie/video screen capture\"] = 16] = \"Movie/video screen capture\";\n    AttachedPictureType[AttachedPictureType[\"A bright coloured fish\"] = 17] = \"A bright coloured fish\";\n    AttachedPictureType[AttachedPictureType[\"Illustration\"] = 18] = \"Illustration\";\n    AttachedPictureType[AttachedPictureType[\"Band/artist logotype\"] = 19] = \"Band/artist logotype\";\n    AttachedPictureType[AttachedPictureType[\"Publisher/Studio logotype\"] = 20] = \"Publisher/Studio logotype\";\n})(AttachedPictureType = exports.AttachedPictureType || (exports.AttachedPictureType = {}));\n/**\n * 28 bits (representing up to 256MB) integer, the msb is 0 to avoid 'false syncsignals'.\n * 4 * %0xxxxxxx\n */\nexports.UINT32SYNCSAFE = {\n    get: (buf, off) => {\n        return buf[off + 3] & 0x7f | ((buf[off + 2]) << 7) |\n            ((buf[off + 1]) << 14) | ((buf[off]) << 21);\n    },\n    len: 4\n};\n/**\n * ID3v2 header\n * Ref: http://id3.org/id3v2.3.0#ID3v2_header\n * ToDo\n */\nexports.ID3v2Header = {\n    len: 10,\n    get: (buf, off) => {\n        return {\n            // ID3v2/file identifier   \"ID3\"\n            fileIdentifier: new Token.StringType(3, 'ascii').get(buf, off),\n            // ID3v2 versionIndex\n            version: {\n                major: Token.INT8.get(buf, off + 3),\n                revision: Token.INT8.get(buf, off + 4)\n            },\n            // ID3v2 flags\n            flags: {\n                // Unsynchronisation\n                unsynchronisation: util.getBit(buf, off + 5, 7),\n                // Extended header\n                isExtendedHeader: util.getBit(buf, off + 5, 6),\n                // Experimental indicator\n                expIndicator: util.getBit(buf, off + 5, 5),\n                footer: util.getBit(buf, off + 5, 4)\n            },\n            size: exports.UINT32SYNCSAFE.get(buf, off + 6)\n        };\n    }\n};\nexports.ExtendedHeader = {\n    len: 10,\n    get: (buf, off) => {\n        return {\n            // Extended header size\n            size: Token.UINT32_BE.get(buf, off),\n            // Extended Flags\n            extendedFlags: Token.UINT16_BE.get(buf, off + 4),\n            // Size of padding\n            sizeOfPadding: Token.UINT32_BE.get(buf, off + 6),\n            // CRC data present\n            crcDataPresent: util.getBit(buf, off + 4, 31)\n        };\n    }\n};\nexports.TextEncodingToken = {\n    len: 1,\n    get: (uint8Array, off) => {\n        switch (uint8Array[off]) {\n            case 0x00:\n                return { encoding: 'latin1' }; // binary\n            case 0x01:\n                return { encoding: 'utf16le', bom: true };\n            case 0x02:\n                return { encoding: 'utf16le', bom: false };\n            case 0x03:\n                return { encoding: 'utf8', bom: false };\n            default:\n                return { encoding: 'utf8', bom: false };\n        }\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}