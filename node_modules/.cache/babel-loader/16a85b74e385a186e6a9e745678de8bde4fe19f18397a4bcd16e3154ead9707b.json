{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.binaryNodeToString = exports.getBinaryNodeMessages = exports.reduceBinaryNodeToDictionary = exports.assertNodeErrorFree = exports.getBinaryNodeChildUInt = exports.getBinaryNodeChildString = exports.getBinaryNodeChildBuffer = exports.getBinaryNodeChild = exports.getAllBinaryNodeChildren = exports.getBinaryNodeChildren = void 0;\nconst boom_1 = require(\"@hapi/boom\");\nconst WAProto_1 = require(\"../../WAProto\");\n// some extra useful utilities\nconst getBinaryNodeChildren = (node, childTag) => {\n  if (Array.isArray(node === null || node === void 0 ? void 0 : node.content)) {\n    return node.content.filter(item => item.tag === childTag);\n  }\n  return [];\n};\nexports.getBinaryNodeChildren = getBinaryNodeChildren;\nconst getAllBinaryNodeChildren = ({\n  content\n}) => {\n  if (Array.isArray(content)) {\n    return content;\n  }\n  return [];\n};\nexports.getAllBinaryNodeChildren = getAllBinaryNodeChildren;\nconst getBinaryNodeChild = (node, childTag) => {\n  if (Array.isArray(node === null || node === void 0 ? void 0 : node.content)) {\n    return node === null || node === void 0 ? void 0 : node.content.find(item => item.tag === childTag);\n  }\n};\nexports.getBinaryNodeChild = getBinaryNodeChild;\nconst getBinaryNodeChildBuffer = (node, childTag) => {\n  var _a;\n  const child = (_a = (0, exports.getBinaryNodeChild)(node, childTag)) === null || _a === void 0 ? void 0 : _a.content;\n  if (Buffer.isBuffer(child) || child instanceof Uint8Array) {\n    return child;\n  }\n};\nexports.getBinaryNodeChildBuffer = getBinaryNodeChildBuffer;\nconst getBinaryNodeChildString = (node, childTag) => {\n  var _a;\n  const child = (_a = (0, exports.getBinaryNodeChild)(node, childTag)) === null || _a === void 0 ? void 0 : _a.content;\n  if (Buffer.isBuffer(child) || child instanceof Uint8Array) {\n    return Buffer.from(child).toString('utf-8');\n  } else if (typeof child === 'string') {\n    return child;\n  }\n};\nexports.getBinaryNodeChildString = getBinaryNodeChildString;\nconst getBinaryNodeChildUInt = (node, childTag, length) => {\n  const buff = (0, exports.getBinaryNodeChildBuffer)(node, childTag);\n  if (buff) {\n    return bufferToUInt(buff, length);\n  }\n};\nexports.getBinaryNodeChildUInt = getBinaryNodeChildUInt;\nconst assertNodeErrorFree = node => {\n  const errNode = (0, exports.getBinaryNodeChild)(node, 'error');\n  if (errNode) {\n    throw new boom_1.Boom(errNode.attrs.text || 'Unknown error', {\n      data: +errNode.attrs.code\n    });\n  }\n};\nexports.assertNodeErrorFree = assertNodeErrorFree;\nconst reduceBinaryNodeToDictionary = (node, tag) => {\n  const nodes = (0, exports.getBinaryNodeChildren)(node, tag);\n  const dict = nodes.reduce((dict, {\n    attrs\n  }) => {\n    dict[attrs.name || attrs.config_code] = attrs.value || attrs.config_value;\n    return dict;\n  }, {});\n  return dict;\n};\nexports.reduceBinaryNodeToDictionary = reduceBinaryNodeToDictionary;\nconst getBinaryNodeMessages = ({\n  content\n}) => {\n  const msgs = [];\n  if (Array.isArray(content)) {\n    for (const item of content) {\n      if (item.tag === 'message') {\n        msgs.push(WAProto_1.proto.WebMessageInfo.decode(item.content));\n      }\n    }\n  }\n  return msgs;\n};\nexports.getBinaryNodeMessages = getBinaryNodeMessages;\nfunction bufferToUInt(e, t) {\n  let a = 0;\n  for (let i = 0; i < t; i++) {\n    a = 256 * a + e[i];\n  }\n  return a;\n}\nconst tabs = n => '\\t'.repeat(n);\nfunction binaryNodeToString(node, i = 0) {\n  if (!node) {\n    return node;\n  }\n  if (typeof node === 'string') {\n    return tabs(i) + node;\n  }\n  if (node instanceof Uint8Array) {\n    return tabs(i) + Buffer.from(node).toString('hex');\n  }\n  if (Array.isArray(node)) {\n    return node.map(x => tabs(i + 1) + binaryNodeToString(x, i + 1)).join('\\n');\n  }\n  const children = binaryNodeToString(node.content, i + 1);\n  const tag = `<${node.tag} ${Object.entries(node.attrs || {}).filter(([, v]) => v !== undefined).map(([k, v]) => `${k}='${v}'`).join(' ')}`;\n  const content = children ? `>\\n${children}\\n${tabs(i)}</${node.tag}>` : '/>';\n  return tag + content;\n}\nexports.binaryNodeToString = binaryNodeToString;","map":{"version":3,"names":["Object","defineProperty","exports","value","binaryNodeToString","getBinaryNodeMessages","reduceBinaryNodeToDictionary","assertNodeErrorFree","getBinaryNodeChildUInt","getBinaryNodeChildString","getBinaryNodeChildBuffer","getBinaryNodeChild","getAllBinaryNodeChildren","getBinaryNodeChildren","boom_1","require","WAProto_1","node","childTag","Array","isArray","content","filter","item","tag","find","_a","child","Buffer","isBuffer","Uint8Array","from","toString","length","buff","bufferToUInt","errNode","Boom","attrs","text","data","code","nodes","dict","reduce","name","config_code","config_value","msgs","push","proto","WebMessageInfo","decode","e","t","a","i","tabs","n","repeat","map","x","join","children","entries","v","undefined","k"],"sources":["C:/Users/vanitas/node_modules/@whiskeysockets/baileys/lib/WABinary/generic-utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.binaryNodeToString = exports.getBinaryNodeMessages = exports.reduceBinaryNodeToDictionary = exports.assertNodeErrorFree = exports.getBinaryNodeChildUInt = exports.getBinaryNodeChildString = exports.getBinaryNodeChildBuffer = exports.getBinaryNodeChild = exports.getAllBinaryNodeChildren = exports.getBinaryNodeChildren = void 0;\nconst boom_1 = require(\"@hapi/boom\");\nconst WAProto_1 = require(\"../../WAProto\");\n// some extra useful utilities\nconst getBinaryNodeChildren = (node, childTag) => {\n    if (Array.isArray(node === null || node === void 0 ? void 0 : node.content)) {\n        return node.content.filter(item => item.tag === childTag);\n    }\n    return [];\n};\nexports.getBinaryNodeChildren = getBinaryNodeChildren;\nconst getAllBinaryNodeChildren = ({ content }) => {\n    if (Array.isArray(content)) {\n        return content;\n    }\n    return [];\n};\nexports.getAllBinaryNodeChildren = getAllBinaryNodeChildren;\nconst getBinaryNodeChild = (node, childTag) => {\n    if (Array.isArray(node === null || node === void 0 ? void 0 : node.content)) {\n        return node === null || node === void 0 ? void 0 : node.content.find(item => item.tag === childTag);\n    }\n};\nexports.getBinaryNodeChild = getBinaryNodeChild;\nconst getBinaryNodeChildBuffer = (node, childTag) => {\n    var _a;\n    const child = (_a = (0, exports.getBinaryNodeChild)(node, childTag)) === null || _a === void 0 ? void 0 : _a.content;\n    if (Buffer.isBuffer(child) || child instanceof Uint8Array) {\n        return child;\n    }\n};\nexports.getBinaryNodeChildBuffer = getBinaryNodeChildBuffer;\nconst getBinaryNodeChildString = (node, childTag) => {\n    var _a;\n    const child = (_a = (0, exports.getBinaryNodeChild)(node, childTag)) === null || _a === void 0 ? void 0 : _a.content;\n    if (Buffer.isBuffer(child) || child instanceof Uint8Array) {\n        return Buffer.from(child).toString('utf-8');\n    }\n    else if (typeof child === 'string') {\n        return child;\n    }\n};\nexports.getBinaryNodeChildString = getBinaryNodeChildString;\nconst getBinaryNodeChildUInt = (node, childTag, length) => {\n    const buff = (0, exports.getBinaryNodeChildBuffer)(node, childTag);\n    if (buff) {\n        return bufferToUInt(buff, length);\n    }\n};\nexports.getBinaryNodeChildUInt = getBinaryNodeChildUInt;\nconst assertNodeErrorFree = (node) => {\n    const errNode = (0, exports.getBinaryNodeChild)(node, 'error');\n    if (errNode) {\n        throw new boom_1.Boom(errNode.attrs.text || 'Unknown error', { data: +errNode.attrs.code });\n    }\n};\nexports.assertNodeErrorFree = assertNodeErrorFree;\nconst reduceBinaryNodeToDictionary = (node, tag) => {\n    const nodes = (0, exports.getBinaryNodeChildren)(node, tag);\n    const dict = nodes.reduce((dict, { attrs }) => {\n        dict[attrs.name || attrs.config_code] = attrs.value || attrs.config_value;\n        return dict;\n    }, {});\n    return dict;\n};\nexports.reduceBinaryNodeToDictionary = reduceBinaryNodeToDictionary;\nconst getBinaryNodeMessages = ({ content }) => {\n    const msgs = [];\n    if (Array.isArray(content)) {\n        for (const item of content) {\n            if (item.tag === 'message') {\n                msgs.push(WAProto_1.proto.WebMessageInfo.decode(item.content));\n            }\n        }\n    }\n    return msgs;\n};\nexports.getBinaryNodeMessages = getBinaryNodeMessages;\nfunction bufferToUInt(e, t) {\n    let a = 0;\n    for (let i = 0; i < t; i++) {\n        a = 256 * a + e[i];\n    }\n    return a;\n}\nconst tabs = (n) => '\\t'.repeat(n);\nfunction binaryNodeToString(node, i = 0) {\n    if (!node) {\n        return node;\n    }\n    if (typeof node === 'string') {\n        return tabs(i) + node;\n    }\n    if (node instanceof Uint8Array) {\n        return tabs(i) + Buffer.from(node).toString('hex');\n    }\n    if (Array.isArray(node)) {\n        return node.map((x) => tabs(i + 1) + binaryNodeToString(x, i + 1)).join('\\n');\n    }\n    const children = binaryNodeToString(node.content, i + 1);\n    const tag = `<${node.tag} ${Object.entries(node.attrs || {})\n        .filter(([, v]) => v !== undefined)\n        .map(([k, v]) => `${k}='${v}'`)\n        .join(' ')}`;\n    const content = children ? `>\\n${children}\\n${tabs(i)}</${node.tag}>` : '/>';\n    return tag + content;\n}\nexports.binaryNodeToString = binaryNodeToString;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}