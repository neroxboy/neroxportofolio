{"ast":null,"code":"import { illegalArgs } from \"@thi.ng/errors/illegal-arguments\";\nimport { illegalState } from \"@thi.ng/errors/illegal-state\";\nconst U32 = 4294967296;\nclass BitInputStream {\n  buffer;\n  start;\n  limit;\n  pos;\n  bitPos;\n  bit;\n  constructor(buffer, offset = 0, limit = buffer.length << 3) {\n    this.buffer = buffer;\n    this.start = offset;\n    this.limit = limit;\n    this.seek(offset);\n  }\n  *[Symbol.iterator]() {\n    let j = this.start;\n    let i = j >>> 3;\n    let b = 7 - (j & 7);\n    while (j < this.limit) {\n      yield this.buffer[i] >>> b & 1;\n      if (--b < 0) {\n        i++;\n        b = 7;\n      }\n      j++;\n    }\n  }\n  get length() {\n    return this.limit;\n  }\n  get position() {\n    return this.bitPos;\n  }\n  seek(pos) {\n    if (pos < this.start || pos >= this.limit) {\n      illegalArgs(`seek pos out of bounds: ${pos}`);\n    }\n    this.pos = pos >>> 3;\n    this.bit = 8 - (pos & 7);\n    this.bitPos = pos;\n    return this;\n  }\n  read(wordSize = 1, safe = true) {\n    if (wordSize > 32) {\n      return this.read(wordSize - 32, safe) * U32 + this.read(32, safe);\n    } else if (wordSize > 8) {\n      let out = 0;\n      let n = wordSize & -8;\n      let msb = wordSize - n;\n      if (msb > 0) {\n        out = this._read(msb, safe);\n      }\n      while (n > 0) {\n        out = (out << 8 | this._read(8, safe)) >>> 0;\n        n -= 8;\n      }\n      return out;\n    } else {\n      return this._read(wordSize, safe);\n    }\n  }\n  readFields(fields, safe = true) {\n    return fields.map(word => this.read(word, safe));\n  }\n  readWords(n, wordSize = 8, safe = true) {\n    let out = [];\n    while (n-- > 0) {\n      out.push(this.read(wordSize, safe));\n    }\n    return out;\n  }\n  readStruct(fields, safe = true) {\n    return fields.reduce((acc, [id, word]) => {\n      return acc[id] = this.read(word, safe), acc;\n    }, {});\n  }\n  readBit(safe = true) {\n    safe && this.checkLimit(1);\n    this.bit--;\n    this.bitPos++;\n    let out = this.buffer[this.pos] >>> this.bit & 1;\n    if (this.bit === 0) {\n      this.pos++;\n      this.bit = 8;\n    }\n    return out;\n  }\n  _read(wordSize, safe = true) {\n    safe && this.checkLimit(wordSize);\n    let l = this.bit - wordSize,\n      out;\n    if (l >= 0) {\n      this.bit = l;\n      out = this.buffer[this.pos] >>> l & (1 << wordSize) - 1;\n      if (l === 0) {\n        this.pos++;\n        this.bit = 8;\n      }\n    } else {\n      out = (this.buffer[this.pos++] & (1 << this.bit) - 1) << -l;\n      this.bit = 8 + l;\n      out = out | this.buffer[this.pos] >>> this.bit;\n    }\n    this.bitPos += wordSize;\n    return out;\n  }\n  checkLimit(requested) {\n    if (this.bitPos + requested > this.limit) {\n      illegalState(`can't read past EOF`);\n    }\n  }\n}\nexport { BitInputStream };","map":{"version":3,"names":["illegalArgs","illegalState","U32","BitInputStream","buffer","start","limit","pos","bitPos","bit","constructor","offset","length","seek","Symbol","iterator","j","i","b","position","read","wordSize","safe","out","n","msb","_read","readFields","fields","map","word","readWords","push","readStruct","reduce","acc","id","readBit","checkLimit","l","requested"],"sources":["C:/Users/vanitas/node_modules/@thi.ng/bitstream/input.js"],"sourcesContent":["import { illegalArgs } from \"@thi.ng/errors/illegal-arguments\";\nimport { illegalState } from \"@thi.ng/errors/illegal-state\";\nconst U32 = 4294967296;\nclass BitInputStream {\n  buffer;\n  start;\n  limit;\n  pos;\n  bitPos;\n  bit;\n  constructor(buffer, offset = 0, limit = buffer.length << 3) {\n    this.buffer = buffer;\n    this.start = offset;\n    this.limit = limit;\n    this.seek(offset);\n  }\n  *[Symbol.iterator]() {\n    let j = this.start;\n    let i = j >>> 3;\n    let b = 7 - (j & 7);\n    while (j < this.limit) {\n      yield this.buffer[i] >>> b & 1;\n      if (--b < 0) {\n        i++;\n        b = 7;\n      }\n      j++;\n    }\n  }\n  get length() {\n    return this.limit;\n  }\n  get position() {\n    return this.bitPos;\n  }\n  seek(pos) {\n    if (pos < this.start || pos >= this.limit) {\n      illegalArgs(`seek pos out of bounds: ${pos}`);\n    }\n    this.pos = pos >>> 3;\n    this.bit = 8 - (pos & 7);\n    this.bitPos = pos;\n    return this;\n  }\n  read(wordSize = 1, safe = true) {\n    if (wordSize > 32) {\n      return this.read(wordSize - 32, safe) * U32 + this.read(32, safe);\n    } else if (wordSize > 8) {\n      let out = 0;\n      let n = wordSize & -8;\n      let msb = wordSize - n;\n      if (msb > 0) {\n        out = this._read(msb, safe);\n      }\n      while (n > 0) {\n        out = (out << 8 | this._read(8, safe)) >>> 0;\n        n -= 8;\n      }\n      return out;\n    } else {\n      return this._read(wordSize, safe);\n    }\n  }\n  readFields(fields, safe = true) {\n    return fields.map((word) => this.read(word, safe));\n  }\n  readWords(n, wordSize = 8, safe = true) {\n    let out = [];\n    while (n-- > 0) {\n      out.push(this.read(wordSize, safe));\n    }\n    return out;\n  }\n  readStruct(fields, safe = true) {\n    return fields.reduce((acc, [id, word]) => {\n      return acc[id] = this.read(word, safe), acc;\n    }, {});\n  }\n  readBit(safe = true) {\n    safe && this.checkLimit(1);\n    this.bit--;\n    this.bitPos++;\n    let out = this.buffer[this.pos] >>> this.bit & 1;\n    if (this.bit === 0) {\n      this.pos++;\n      this.bit = 8;\n    }\n    return out;\n  }\n  _read(wordSize, safe = true) {\n    safe && this.checkLimit(wordSize);\n    let l = this.bit - wordSize, out;\n    if (l >= 0) {\n      this.bit = l;\n      out = this.buffer[this.pos] >>> l & (1 << wordSize) - 1;\n      if (l === 0) {\n        this.pos++;\n        this.bit = 8;\n      }\n    } else {\n      out = (this.buffer[this.pos++] & (1 << this.bit) - 1) << -l;\n      this.bit = 8 + l;\n      out = out | this.buffer[this.pos] >>> this.bit;\n    }\n    this.bitPos += wordSize;\n    return out;\n  }\n  checkLimit(requested) {\n    if (this.bitPos + requested > this.limit) {\n      illegalState(`can't read past EOF`);\n    }\n  }\n}\nexport {\n  BitInputStream\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}