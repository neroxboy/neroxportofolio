{"ast":null,"code":"/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\nhttps://tools.ietf.org/html/rfc7845.html\n 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|      'O'      |      'p'      |      'u'      |      's'      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|      'H'      |      'e'      |      'a'      |      'd'      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Version = 1  | Channel Count |           Pre-skip            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Input Sample Rate (Hz)                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Output Gain (Q7.8 in dB)    | Mapping Family|               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               :\n|                                                               |\n:               Optional Channel Mapping Table...               :\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nLetter  Length (bits)  Description\nA  64  Magic Signature - OpusHead\nB  8   Version number - 00000001\nC  8   Output channel count (unsigned)\nD  16  Pre-skip (unsigned, little endian)\nE  32  Sample rate (unsigned, little endian)\nF  16  Output Gain (signed, little endian)\nG  8   Channel Mapping family (unsigned)\n\n// if(channel mapping !== 0)\nH  8   Stream count (unsigned)\nI  8   Coupled Stream Count (unsigned)\nJ  8*C Channel Mapping\n*/\n\nimport { rate48000, vorbisOpusChannelMapping, bitDepth, channelMode, sampleRate, channels, length, bandwidth, channelMappingFamily, channelMappingTable, coupledStreamCount, frameCount, frameSize, hasOpusPadding, inputSampleRate, isVbr, mode, outputGain, preSkip, streamCount, data, buffer, subarray, getHeader, setHeader, getHeaderFromUint8Array, uint8Array, dataView } from \"../../constants.js\";\nimport { bytesToString } from \"../../utilities.js\";\nimport CodecHeader from \"../CodecHeader.js\";\n\n/* prettier-ignore */\nconst channelMappingFamilies = {\n  0b00000000: vorbisOpusChannelMapping.slice(0, 2),\n  /*\n  0: \"monophonic (mono)\"\n  1: \"stereo (left, right)\"\n  */\n  0b00000001: vorbisOpusChannelMapping\n  /*\n  0: \"monophonic (mono)\"\n  1: \"stereo (left, right)\"\n  2: \"linear surround (left, center, right)\"\n  3: \"quadraphonic (front left, front right, rear left, rear right)\"\n  4: \"5.0 surround (front left, front center, front right, rear left, rear right)\"\n  5: \"5.1 surround (front left, front center, front right, rear left, rear right, LFE)\"\n  6: \"6.1 surround (front left, front center, front right, side left, side right, rear center, LFE)\"\n  7: \"7.1 surround (front left, front center, front right, side left, side right, rear left, rear right, LFE)\"\n  */\n  // additional channel mappings are user defined\n};\nconst silkOnly = \"SILK-only\";\nconst celtOnly = \"CELT-only\";\nconst hybrid = \"Hybrid\";\nconst narrowBand = \"narrowband\";\nconst mediumBand = \"medium-band\";\nconst wideBand = \"wideband\";\nconst superWideBand = \"super-wideband\";\nconst fullBand = \"fullband\";\n\n//  0 1 2 3 4 5 6 7\n// +-+-+-+-+-+-+-+-+\n// | config  |s| c |\n// +-+-+-+-+-+-+-+-+\n// prettier-ignore\nconst configTable = {\n  0b00000000: {\n    [mode]: silkOnly,\n    [bandwidth]: narrowBand,\n    [frameSize]: 10\n  },\n  0b00001000: {\n    [mode]: silkOnly,\n    [bandwidth]: narrowBand,\n    [frameSize]: 20\n  },\n  0b00010000: {\n    [mode]: silkOnly,\n    [bandwidth]: narrowBand,\n    [frameSize]: 40\n  },\n  0b00011000: {\n    [mode]: silkOnly,\n    [bandwidth]: narrowBand,\n    [frameSize]: 60\n  },\n  0b00100000: {\n    [mode]: silkOnly,\n    [bandwidth]: mediumBand,\n    [frameSize]: 10\n  },\n  0b00101000: {\n    [mode]: silkOnly,\n    [bandwidth]: mediumBand,\n    [frameSize]: 20\n  },\n  0b00110000: {\n    [mode]: silkOnly,\n    [bandwidth]: mediumBand,\n    [frameSize]: 40\n  },\n  0b00111000: {\n    [mode]: silkOnly,\n    [bandwidth]: mediumBand,\n    [frameSize]: 60\n  },\n  0b01000000: {\n    [mode]: silkOnly,\n    [bandwidth]: wideBand,\n    [frameSize]: 10\n  },\n  0b01001000: {\n    [mode]: silkOnly,\n    [bandwidth]: wideBand,\n    [frameSize]: 20\n  },\n  0b01010000: {\n    [mode]: silkOnly,\n    [bandwidth]: wideBand,\n    [frameSize]: 40\n  },\n  0b01011000: {\n    [mode]: silkOnly,\n    [bandwidth]: wideBand,\n    [frameSize]: 60\n  },\n  0b01100000: {\n    [mode]: hybrid,\n    [bandwidth]: superWideBand,\n    [frameSize]: 10\n  },\n  0b01101000: {\n    [mode]: hybrid,\n    [bandwidth]: superWideBand,\n    [frameSize]: 20\n  },\n  0b01110000: {\n    [mode]: hybrid,\n    [bandwidth]: fullBand,\n    [frameSize]: 10\n  },\n  0b01111000: {\n    [mode]: hybrid,\n    [bandwidth]: fullBand,\n    [frameSize]: 20\n  },\n  0b10000000: {\n    [mode]: celtOnly,\n    [bandwidth]: narrowBand,\n    [frameSize]: 2.5\n  },\n  0b10001000: {\n    [mode]: celtOnly,\n    [bandwidth]: narrowBand,\n    [frameSize]: 5\n  },\n  0b10010000: {\n    [mode]: celtOnly,\n    [bandwidth]: narrowBand,\n    [frameSize]: 10\n  },\n  0b10011000: {\n    [mode]: celtOnly,\n    [bandwidth]: narrowBand,\n    [frameSize]: 20\n  },\n  0b10100000: {\n    [mode]: celtOnly,\n    [bandwidth]: wideBand,\n    [frameSize]: 2.5\n  },\n  0b10101000: {\n    [mode]: celtOnly,\n    [bandwidth]: wideBand,\n    [frameSize]: 5\n  },\n  0b10110000: {\n    [mode]: celtOnly,\n    [bandwidth]: wideBand,\n    [frameSize]: 10\n  },\n  0b10111000: {\n    [mode]: celtOnly,\n    [bandwidth]: wideBand,\n    [frameSize]: 20\n  },\n  0b11000000: {\n    [mode]: celtOnly,\n    [bandwidth]: superWideBand,\n    [frameSize]: 2.5\n  },\n  0b11001000: {\n    [mode]: celtOnly,\n    [bandwidth]: superWideBand,\n    [frameSize]: 5\n  },\n  0b11010000: {\n    [mode]: celtOnly,\n    [bandwidth]: superWideBand,\n    [frameSize]: 10\n  },\n  0b11011000: {\n    [mode]: celtOnly,\n    [bandwidth]: superWideBand,\n    [frameSize]: 20\n  },\n  0b11100000: {\n    [mode]: celtOnly,\n    [bandwidth]: fullBand,\n    [frameSize]: 2.5\n  },\n  0b11101000: {\n    [mode]: celtOnly,\n    [bandwidth]: fullBand,\n    [frameSize]: 5\n  },\n  0b11110000: {\n    [mode]: celtOnly,\n    [bandwidth]: fullBand,\n    [frameSize]: 10\n  },\n  0b11111000: {\n    [mode]: celtOnly,\n    [bandwidth]: fullBand,\n    [frameSize]: 20\n  }\n};\nexport default class OpusHeader extends CodecHeader {\n  static [getHeaderFromUint8Array](dataValue, packetData, headerCache) {\n    const header = {};\n\n    // get length of header\n    // Byte (10 of 19)\n    // * `CCCCCCCC`: Channel Count\n    header[channels] = dataValue[9];\n    // Byte (19 of 19)\n    // * `GGGGGGGG`: Channel Mapping Family\n    header[channelMappingFamily] = dataValue[18];\n    header[length] = header[channelMappingFamily] !== 0 ? 21 + header[channels] : 19;\n    if (dataValue[length] < header[length]) throw new Error(\"Out of data while inside an Ogg Page\");\n\n    // Page Segment Bytes (1-2)\n    // * `AAAAA...`: Packet config\n    // * `.....B..`:\n    // * `......CC`: Packet code\n    const packetMode = packetData[0] & 0b00000011;\n    const packetLength = packetMode === 3 ? 2 : 1;\n\n    // Check header cache\n    const key = bytesToString(dataValue[subarray](0, header[length])) + bytesToString(packetData[subarray](0, packetLength));\n    const cachedHeader = headerCache[getHeader](key);\n    if (cachedHeader) return new OpusHeader(cachedHeader);\n\n    // Bytes (1-8 of 19): OpusHead - Magic Signature\n    if (key.substr(0, 8) !== \"OpusHead\") {\n      return null;\n    }\n\n    // Byte (9 of 19)\n    // * `00000001`: Version number\n    if (dataValue[8] !== 1) return null;\n    header[data] = uint8Array.from(dataValue[subarray](0, header[length]));\n    const view = new dataView(header[data][buffer]);\n    header[bitDepth] = 16;\n\n    // Byte (10 of 19)\n    // * `CCCCCCCC`: Channel Count\n    // set earlier to determine length\n\n    // Byte (11-12 of 19)\n    // * `DDDDDDDD|DDDDDDDD`: Pre skip\n    header[preSkip] = view.getUint16(10, true);\n\n    // Byte (13-16 of 19)\n    // * `EEEEEEEE|EEEEEEEE|EEEEEEEE|EEEEEEEE`: Sample Rate\n    header[inputSampleRate] = view.getUint32(12, true);\n    // Opus is always decoded at 48kHz\n    header[sampleRate] = rate48000;\n\n    // Byte (17-18 of 19)\n    // * `FFFFFFFF|FFFFFFFF`: Output Gain\n    header[outputGain] = view.getInt16(16, true);\n\n    // Byte (19 of 19)\n    // * `GGGGGGGG`: Channel Mapping Family\n    // set earlier to determine length\n    if (header[channelMappingFamily] in channelMappingFamilies) {\n      header[channelMode] = channelMappingFamilies[header[channelMappingFamily]][header[channels] - 1];\n      if (!header[channelMode]) return null;\n    }\n    if (header[channelMappingFamily] !== 0) {\n      // * `HHHHHHHH`: Stream count\n      header[streamCount] = dataValue[19];\n\n      // * `IIIIIIII`: Coupled Stream count\n      header[coupledStreamCount] = dataValue[20];\n\n      // * `JJJJJJJJ|...` Channel Mapping table\n      header[channelMappingTable] = [...dataValue[subarray](21, header[channels] + 21)];\n    }\n    const packetConfig = configTable[0b11111000 & packetData[0]];\n    header[mode] = packetConfig[mode];\n    header[bandwidth] = packetConfig[bandwidth];\n    header[frameSize] = packetConfig[frameSize];\n\n    // https://tools.ietf.org/html/rfc6716#appendix-B\n    switch (packetMode) {\n      case 0:\n        // 0: 1 frame in the packet\n        header[frameCount] = 1;\n        break;\n      case 1:\n      // 1: 2 frames in the packet, each with equal compressed size\n      case 2:\n        // 2: 2 frames in the packet, with different compressed sizes\n        header[frameCount] = 2;\n        break;\n      case 3:\n        // 3: an arbitrary number of frames in the packet\n        header[isVbr] = !!(0b10000000 & packetData[1]);\n        header[hasOpusPadding] = !!(0b01000000 & packetData[1]);\n        header[frameCount] = 0b00111111 & packetData[1];\n        break;\n      default:\n        return null;\n    }\n\n    // set header cache\n    {\n      const {\n        length,\n        data: headerData,\n        channelMappingFamily,\n        ...codecUpdateFields\n      } = header;\n      headerCache[setHeader](key, header, codecUpdateFields);\n    }\n    return new OpusHeader(header);\n  }\n\n  /**\n   * @private\n   * Call OpusHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n    this[data] = header[data];\n    this[bandwidth] = header[bandwidth];\n    this[channelMappingFamily] = header[channelMappingFamily];\n    this[channelMappingTable] = header[channelMappingTable];\n    this[coupledStreamCount] = header[coupledStreamCount];\n    this[frameCount] = header[frameCount];\n    this[frameSize] = header[frameSize];\n    this[hasOpusPadding] = header[hasOpusPadding];\n    this[inputSampleRate] = header[inputSampleRate];\n    this[isVbr] = header[isVbr];\n    this[mode] = header[mode];\n    this[outputGain] = header[outputGain];\n    this[preSkip] = header[preSkip];\n    this[streamCount] = header[streamCount];\n  }\n}","map":{"version":3,"names":["rate48000","vorbisOpusChannelMapping","bitDepth","channelMode","sampleRate","channels","length","bandwidth","channelMappingFamily","channelMappingTable","coupledStreamCount","frameCount","frameSize","hasOpusPadding","inputSampleRate","isVbr","mode","outputGain","preSkip","streamCount","data","buffer","subarray","getHeader","setHeader","getHeaderFromUint8Array","uint8Array","dataView","bytesToString","CodecHeader","channelMappingFamilies","slice","silkOnly","celtOnly","hybrid","narrowBand","mediumBand","wideBand","superWideBand","fullBand","configTable","OpusHeader","dataValue","packetData","headerCache","header","Error","packetMode","packetLength","key","cachedHeader","substr","from","view","getUint16","getUint32","getInt16","packetConfig","headerData","codecUpdateFields","constructor"],"sources":["C:/Users/vanitas/node_modules/codec-parser/src/codecs/opus/OpusHeader.js"],"sourcesContent":["/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\nhttps://tools.ietf.org/html/rfc7845.html\n 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|      'O'      |      'p'      |      'u'      |      's'      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|      'H'      |      'e'      |      'a'      |      'd'      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Version = 1  | Channel Count |           Pre-skip            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Input Sample Rate (Hz)                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Output Gain (Q7.8 in dB)    | Mapping Family|               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               :\n|                                                               |\n:               Optional Channel Mapping Table...               :\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nLetter  Length (bits)  Description\nA  64  Magic Signature - OpusHead\nB  8   Version number - 00000001\nC  8   Output channel count (unsigned)\nD  16  Pre-skip (unsigned, little endian)\nE  32  Sample rate (unsigned, little endian)\nF  16  Output Gain (signed, little endian)\nG  8   Channel Mapping family (unsigned)\n\n// if(channel mapping !== 0)\nH  8   Stream count (unsigned)\nI  8   Coupled Stream Count (unsigned)\nJ  8*C Channel Mapping\n*/\n\nimport {\n  rate48000,\n  vorbisOpusChannelMapping,\n  bitDepth,\n  channelMode,\n  sampleRate,\n  channels,\n  length,\n  bandwidth,\n  channelMappingFamily,\n  channelMappingTable,\n  coupledStreamCount,\n  frameCount,\n  frameSize,\n  hasOpusPadding,\n  inputSampleRate,\n  isVbr,\n  mode,\n  outputGain,\n  preSkip,\n  streamCount,\n  data,\n  buffer,\n  subarray,\n  getHeader,\n  setHeader,\n  getHeaderFromUint8Array,\n  uint8Array,\n  dataView,\n} from \"../../constants.js\";\nimport { bytesToString } from \"../../utilities.js\";\n\nimport CodecHeader from \"../CodecHeader.js\";\n\n/* prettier-ignore */\nconst channelMappingFamilies = {\n  0b00000000: vorbisOpusChannelMapping.slice(0,2),\n    /*\n    0: \"monophonic (mono)\"\n    1: \"stereo (left, right)\"\n    */\n  0b00000001: vorbisOpusChannelMapping\n    /*\n    0: \"monophonic (mono)\"\n    1: \"stereo (left, right)\"\n    2: \"linear surround (left, center, right)\"\n    3: \"quadraphonic (front left, front right, rear left, rear right)\"\n    4: \"5.0 surround (front left, front center, front right, rear left, rear right)\"\n    5: \"5.1 surround (front left, front center, front right, rear left, rear right, LFE)\"\n    6: \"6.1 surround (front left, front center, front right, side left, side right, rear center, LFE)\"\n    7: \"7.1 surround (front left, front center, front right, side left, side right, rear left, rear right, LFE)\"\n    */\n  // additional channel mappings are user defined\n};\n\nconst silkOnly = \"SILK-only\";\nconst celtOnly = \"CELT-only\";\nconst hybrid = \"Hybrid\";\n\nconst narrowBand = \"narrowband\";\nconst mediumBand = \"medium-band\";\nconst wideBand = \"wideband\";\nconst superWideBand = \"super-wideband\";\nconst fullBand = \"fullband\";\n\n//  0 1 2 3 4 5 6 7\n// +-+-+-+-+-+-+-+-+\n// | config  |s| c |\n// +-+-+-+-+-+-+-+-+\n// prettier-ignore\nconst configTable = {\n  0b00000000: { [mode]: silkOnly, [bandwidth]: narrowBand, [frameSize]: 10 },\n  0b00001000: { [mode]: silkOnly, [bandwidth]: narrowBand, [frameSize]: 20 },\n  0b00010000: { [mode]: silkOnly, [bandwidth]: narrowBand, [frameSize]: 40 },\n  0b00011000: { [mode]: silkOnly, [bandwidth]: narrowBand, [frameSize]: 60 },\n  0b00100000: { [mode]: silkOnly, [bandwidth]: mediumBand, [frameSize]: 10 },\n  0b00101000: { [mode]: silkOnly, [bandwidth]: mediumBand, [frameSize]: 20 },\n  0b00110000: { [mode]: silkOnly, [bandwidth]: mediumBand, [frameSize]: 40 },\n  0b00111000: { [mode]: silkOnly, [bandwidth]: mediumBand, [frameSize]: 60 },\n  0b01000000: { [mode]: silkOnly, [bandwidth]: wideBand, [frameSize]: 10 },\n  0b01001000: { [mode]: silkOnly, [bandwidth]: wideBand, [frameSize]: 20 },\n  0b01010000: { [mode]: silkOnly, [bandwidth]: wideBand, [frameSize]: 40 },\n  0b01011000: { [mode]: silkOnly, [bandwidth]: wideBand, [frameSize]: 60 },\n  0b01100000: { [mode]: hybrid, [bandwidth]: superWideBand, [frameSize]: 10 },\n  0b01101000: { [mode]: hybrid, [bandwidth]: superWideBand, [frameSize]: 20 },\n  0b01110000: { [mode]: hybrid, [bandwidth]: fullBand, [frameSize]: 10 },\n  0b01111000: { [mode]: hybrid, [bandwidth]: fullBand, [frameSize]: 20 },\n  0b10000000: { [mode]: celtOnly, [bandwidth]: narrowBand, [frameSize]: 2.5 },\n  0b10001000: { [mode]: celtOnly, [bandwidth]: narrowBand, [frameSize]: 5 },\n  0b10010000: { [mode]: celtOnly, [bandwidth]: narrowBand, [frameSize]: 10 },\n  0b10011000: { [mode]: celtOnly, [bandwidth]: narrowBand, [frameSize]: 20 },\n  0b10100000: { [mode]: celtOnly, [bandwidth]: wideBand, [frameSize]: 2.5 },\n  0b10101000: { [mode]: celtOnly, [bandwidth]: wideBand, [frameSize]: 5 },\n  0b10110000: { [mode]: celtOnly, [bandwidth]: wideBand, [frameSize]: 10 },\n  0b10111000: { [mode]: celtOnly, [bandwidth]: wideBand, [frameSize]: 20 },\n  0b11000000: { [mode]: celtOnly, [bandwidth]: superWideBand, [frameSize]: 2.5 },\n  0b11001000: { [mode]: celtOnly, [bandwidth]: superWideBand, [frameSize]: 5 },\n  0b11010000: { [mode]: celtOnly, [bandwidth]: superWideBand, [frameSize]: 10 },\n  0b11011000: { [mode]: celtOnly, [bandwidth]: superWideBand, [frameSize]: 20 },\n  0b11100000: { [mode]: celtOnly, [bandwidth]: fullBand, [frameSize]: 2.5 },\n  0b11101000: { [mode]: celtOnly, [bandwidth]: fullBand, [frameSize]: 5 },\n  0b11110000: { [mode]: celtOnly, [bandwidth]: fullBand, [frameSize]: 10 },\n  0b11111000: { [mode]: celtOnly, [bandwidth]: fullBand, [frameSize]: 20 },\n};\n\nexport default class OpusHeader extends CodecHeader {\n  static [getHeaderFromUint8Array](dataValue, packetData, headerCache) {\n    const header = {};\n\n    // get length of header\n    // Byte (10 of 19)\n    // * `CCCCCCCC`: Channel Count\n    header[channels] = dataValue[9];\n    // Byte (19 of 19)\n    // * `GGGGGGGG`: Channel Mapping Family\n    header[channelMappingFamily] = dataValue[18];\n\n    header[length] =\n      header[channelMappingFamily] !== 0 ? 21 + header[channels] : 19;\n\n    if (dataValue[length] < header[length])\n      throw new Error(\"Out of data while inside an Ogg Page\");\n\n    // Page Segment Bytes (1-2)\n    // * `AAAAA...`: Packet config\n    // * `.....B..`:\n    // * `......CC`: Packet code\n    const packetMode = packetData[0] & 0b00000011;\n    const packetLength = packetMode === 3 ? 2 : 1;\n\n    // Check header cache\n    const key =\n      bytesToString(dataValue[subarray](0, header[length])) +\n      bytesToString(packetData[subarray](0, packetLength));\n    const cachedHeader = headerCache[getHeader](key);\n\n    if (cachedHeader) return new OpusHeader(cachedHeader);\n\n    // Bytes (1-8 of 19): OpusHead - Magic Signature\n    if (key.substr(0, 8) !== \"OpusHead\") {\n      return null;\n    }\n\n    // Byte (9 of 19)\n    // * `00000001`: Version number\n    if (dataValue[8] !== 1) return null;\n\n    header[data] = uint8Array.from(dataValue[subarray](0, header[length]));\n\n    const view = new dataView(header[data][buffer]);\n\n    header[bitDepth] = 16;\n\n    // Byte (10 of 19)\n    // * `CCCCCCCC`: Channel Count\n    // set earlier to determine length\n\n    // Byte (11-12 of 19)\n    // * `DDDDDDDD|DDDDDDDD`: Pre skip\n    header[preSkip] = view.getUint16(10, true);\n\n    // Byte (13-16 of 19)\n    // * `EEEEEEEE|EEEEEEEE|EEEEEEEE|EEEEEEEE`: Sample Rate\n    header[inputSampleRate] = view.getUint32(12, true);\n    // Opus is always decoded at 48kHz\n    header[sampleRate] = rate48000;\n\n    // Byte (17-18 of 19)\n    // * `FFFFFFFF|FFFFFFFF`: Output Gain\n    header[outputGain] = view.getInt16(16, true);\n\n    // Byte (19 of 19)\n    // * `GGGGGGGG`: Channel Mapping Family\n    // set earlier to determine length\n    if (header[channelMappingFamily] in channelMappingFamilies) {\n      header[channelMode] =\n        channelMappingFamilies[header[channelMappingFamily]][\n          header[channels] - 1\n        ];\n      if (!header[channelMode]) return null;\n    }\n\n    if (header[channelMappingFamily] !== 0) {\n      // * `HHHHHHHH`: Stream count\n      header[streamCount] = dataValue[19];\n\n      // * `IIIIIIII`: Coupled Stream count\n      header[coupledStreamCount] = dataValue[20];\n\n      // * `JJJJJJJJ|...` Channel Mapping table\n      header[channelMappingTable] = [\n        ...dataValue[subarray](21, header[channels] + 21),\n      ];\n    }\n\n    const packetConfig = configTable[0b11111000 & packetData[0]];\n    header[mode] = packetConfig[mode];\n    header[bandwidth] = packetConfig[bandwidth];\n    header[frameSize] = packetConfig[frameSize];\n\n    // https://tools.ietf.org/html/rfc6716#appendix-B\n    switch (packetMode) {\n      case 0:\n        // 0: 1 frame in the packet\n        header[frameCount] = 1;\n        break;\n      case 1:\n      // 1: 2 frames in the packet, each with equal compressed size\n      case 2:\n        // 2: 2 frames in the packet, with different compressed sizes\n        header[frameCount] = 2;\n        break;\n      case 3:\n        // 3: an arbitrary number of frames in the packet\n        header[isVbr] = !!(0b10000000 & packetData[1]);\n        header[hasOpusPadding] = !!(0b01000000 & packetData[1]);\n        header[frameCount] = 0b00111111 & packetData[1];\n        break;\n      default:\n        return null;\n    }\n\n    // set header cache\n    {\n      const {\n        length,\n        data: headerData,\n        channelMappingFamily,\n        ...codecUpdateFields\n      } = header;\n\n      headerCache[setHeader](key, header, codecUpdateFields);\n    }\n\n    return new OpusHeader(header);\n  }\n\n  /**\n   * @private\n   * Call OpusHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n\n    this[data] = header[data];\n    this[bandwidth] = header[bandwidth];\n    this[channelMappingFamily] = header[channelMappingFamily];\n    this[channelMappingTable] = header[channelMappingTable];\n    this[coupledStreamCount] = header[coupledStreamCount];\n    this[frameCount] = header[frameCount];\n    this[frameSize] = header[frameSize];\n    this[hasOpusPadding] = header[hasOpusPadding];\n    this[inputSampleRate] = header[inputSampleRate];\n    this[isVbr] = header[isVbr];\n    this[mode] = header[mode];\n    this[outputGain] = header[outputGain];\n    this[preSkip] = header[preSkip];\n    this[streamCount] = header[streamCount];\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}