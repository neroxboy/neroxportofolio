{"ast":null,"code":"import { WASMAudioDecoderCommon } from \"@wasm-audio-decoders/common\";\nimport CodecParser, { absoluteGranulePosition, samples, data, codecFrames, header, vorbisComments, vorbisSetup, isLastPage } from \"codec-parser\";\nimport EmscriptenWASM from \"./EmscriptenWasm.js\";\nexport function Decoder() {\n  // injects dependencies when running as a web worker\n  // async\n  this._init = () => {\n    return new this._WASMAudioDecoderCommon().instantiate(this._EmscriptenWASM, this._module).then(common => {\n      this._common = common;\n      this._input = this._common.allocateTypedArray(this._inputSize, Uint8Array);\n      this._firstPage = true;\n      this._inputLen = this._common.allocateTypedArray(1, Uint32Array);\n      this._outputBufferPtr = this._common.allocateTypedArray(1, Uint32Array);\n      this._channels = this._common.allocateTypedArray(1, Uint32Array);\n      this._sampleRate = this._common.allocateTypedArray(1, Uint32Array);\n      this._samplesDecoded = this._common.allocateTypedArray(1, Uint32Array);\n      const maxErrors = 128 * 2;\n      this._errors = this._common.allocateTypedArray(maxErrors, Uint32Array);\n      this._errorsLength = this._common.allocateTypedArray(1, Int32Array);\n      this._frameNumber = 0;\n      this._inputBytes = 0;\n      this._outputSamples = 0;\n      this._decoder = this._common.wasm.create_decoder(this._input.ptr, this._inputLen.ptr, this._outputBufferPtr.ptr, this._channels.ptr, this._sampleRate.ptr, this._samplesDecoded.ptr, this._errors.ptr, this._errorsLength.ptr, maxErrors);\n    });\n  };\n  Object.defineProperty(this, \"ready\", {\n    enumerable: true,\n    get: () => this._ready\n  });\n\n  // async\n  this.reset = () => {\n    this.free();\n    return this._init();\n  };\n  this.free = () => {\n    this._common.wasm.destroy_decoder(this._decoder);\n    this._common.free();\n  };\n  this.sendSetupHeader = data => {\n    this._input.buf.set(data);\n    this._inputLen.buf[0] = data.length;\n    this._common.wasm.send_setup(this._decoder, this._firstPage);\n    this._firstPage = false;\n  };\n  this.initDsp = () => {\n    this._common.wasm.init_dsp(this._decoder);\n  };\n  this.decodePackets = packets => {\n    let outputBuffers = [],\n      outputSamples = 0,\n      errors = [];\n    for (let packetIdx = 0; packetIdx < packets.length; packetIdx++) {\n      const packet = packets[packetIdx];\n      this._input.buf.set(packet);\n      this._inputLen.buf[0] = packet.length;\n      this._common.wasm.decode_packets(this._decoder);\n      const samplesDecoded = this._samplesDecoded.buf[0];\n      const channels = [];\n      const outputBufferChannels = new Uint32Array(this._common.wasm.HEAP, this._outputBufferPtr.buf[0], this._channels.buf[0]);\n      for (let channel = 0; channel < this._channels.buf[0]; channel++) {\n        const output = new Float32Array(samplesDecoded);\n        if (samplesDecoded) {\n          output.set(new Float32Array(this._common.wasm.HEAP, outputBufferChannels[channel], samplesDecoded));\n        }\n        channels.push(output);\n      }\n      outputBuffers.push(channels);\n      outputSamples += samplesDecoded;\n      this._frameNumber++;\n      this._inputBytes += packet.length;\n      this._outputSamples += samplesDecoded;\n\n      // handle any errors that may have occurred\n      for (let i = 0; i < this._errorsLength.buf; i += 2) errors.push({\n        message: this._common.codeToString(this._errors.buf[i]) + \" \" + this._common.codeToString(this._errors.buf[i + 1]),\n        frameLength: packet.length,\n        frameNumber: this._frameNumber,\n        inputBytes: this._inputBytes,\n        outputSamples: this._outputSamples\n      });\n\n      // clear the error buffer\n      this._errorsLength.buf[0] = 0;\n    }\n    return this._WASMAudioDecoderCommon.getDecodedAudioMultiChannel(errors, outputBuffers, this._channels.buf[0], outputSamples, this._sampleRate.buf[0], 16);\n  };\n\n  // injects dependencies when running as a web worker\n  this._isWebWorker = Decoder.isWebWorker;\n  this._WASMAudioDecoderCommon = Decoder.WASMAudioDecoderCommon || WASMAudioDecoderCommon;\n  this._EmscriptenWASM = Decoder.EmscriptenWASM || EmscriptenWASM;\n  this._module = Decoder.module;\n  this._inputSize = 128 * 1024;\n  this._ready = this._init();\n  return this;\n}\nexport const setDecoderClass = Symbol();\nexport default class OggVorbisDecoder {\n  constructor() {\n    this._onCodec = codec => {\n      if (codec !== \"vorbis\") throw new Error(\"@wasm-audio-decoders/ogg-vorbis does not support this codec \" + codec);\n    };\n\n    // instantiate to create static properties\n    new WASMAudioDecoderCommon();\n    this._init();\n    this[setDecoderClass](Decoder);\n  }\n  _init() {\n    this._vorbisSetupInProgress = true;\n    this._beginningSampleOffset = undefined;\n    this._codecParser = new CodecParser(\"audio/ogg\", {\n      onCodec: this._onCodec,\n      enableFrameCRC32: false\n    });\n  }\n  [setDecoderClass](decoderClass) {\n    if (this._decoder) {\n      const oldDecoder = this._decoder;\n      oldDecoder.ready.then(() => oldDecoder.free());\n    }\n    this._decoder = new decoderClass();\n    this._ready = this._decoder.ready;\n  }\n  get ready() {\n    return this._ready;\n  }\n  async reset() {\n    this._init();\n    return this._decoder.reset();\n  }\n  free() {\n    this._decoder.free();\n  }\n  async decodeOggPages(oggPages) {\n    const packets = [];\n    for (let i = 0; i < oggPages.length; i++) {\n      const oggPage = oggPages[i];\n      if (this._vorbisSetupInProgress) {\n        if (oggPage[data][0] === 1) {\n          this._decoder.sendSetupHeader(oggPage[data]);\n        }\n        if (oggPage[codecFrames].length) {\n          const headerData = oggPage[codecFrames][0][header];\n          this._decoder.sendSetupHeader(headerData[vorbisComments]);\n          this._decoder.sendSetupHeader(headerData[vorbisSetup]);\n          this._decoder.initDsp();\n          this._vorbisSetupInProgress = false;\n        }\n      }\n      packets.push(...oggPage[codecFrames].map(f => f[data]));\n    }\n    const decoded = await this._decoder.decodePackets(packets);\n\n    // in cases where BigInt isn't supported, don't do any absoluteGranulePosition logic (i.e. old iOS versions)\n    const oggPage = oggPages[oggPages.length - 1];\n    if (oggPages.length && Number(oggPage[absoluteGranulePosition]) > -1) {\n      if (this._beginningSampleOffset === undefined) {\n        this._beginningSampleOffset = oggPage[absoluteGranulePosition] - BigInt(oggPage[samples]);\n      }\n      if (oggPage[isLastPage]) {\n        // trim any extra samples that are decoded beyond the absoluteGranulePosition, relative to where we started in the stream\n        const samplesToTrim = decoded.samplesDecoded - Number(oggPage[absoluteGranulePosition]);\n        if (samplesToTrim > 0) {\n          for (let i = 0; i < decoded.channelData.length; i++) decoded.channelData[i] = decoded.channelData[i].subarray(0, decoded.samplesDecoded - samplesToTrim);\n          decoded.samplesDecoded -= samplesToTrim;\n        }\n      }\n    }\n    return decoded;\n  }\n  async decode(vorbisData) {\n    return this.decodeOggPages([...this._codecParser.parseChunk(vorbisData)]);\n  }\n  async flush() {\n    const decoded = this.decodeOggPages([...this._codecParser.flush()]);\n    await this.reset();\n    return decoded;\n  }\n  async decodeFile(vorbisData) {\n    const decoded = this.decodeOggPages([...this._codecParser.parseAll(vorbisData)]);\n    await this.reset();\n    return decoded;\n  }\n}","map":{"version":3,"names":["WASMAudioDecoderCommon","CodecParser","absoluteGranulePosition","samples","data","codecFrames","header","vorbisComments","vorbisSetup","isLastPage","EmscriptenWASM","Decoder","_init","_WASMAudioDecoderCommon","instantiate","_EmscriptenWASM","_module","then","common","_common","_input","allocateTypedArray","_inputSize","Uint8Array","_firstPage","_inputLen","Uint32Array","_outputBufferPtr","_channels","_sampleRate","_samplesDecoded","maxErrors","_errors","_errorsLength","Int32Array","_frameNumber","_inputBytes","_outputSamples","_decoder","wasm","create_decoder","ptr","Object","defineProperty","enumerable","get","_ready","reset","free","destroy_decoder","sendSetupHeader","buf","set","length","send_setup","initDsp","init_dsp","decodePackets","packets","outputBuffers","outputSamples","errors","packetIdx","packet","decode_packets","samplesDecoded","channels","outputBufferChannels","HEAP","channel","output","Float32Array","push","i","message","codeToString","frameLength","frameNumber","inputBytes","getDecodedAudioMultiChannel","_isWebWorker","isWebWorker","module","setDecoderClass","Symbol","OggVorbisDecoder","constructor","_onCodec","codec","Error","_vorbisSetupInProgress","_beginningSampleOffset","undefined","_codecParser","onCodec","enableFrameCRC32","decoderClass","oldDecoder","ready","decodeOggPages","oggPages","oggPage","headerData","map","f","decoded","Number","BigInt","samplesToTrim","channelData","subarray","decode","vorbisData","parseChunk","flush","decodeFile","parseAll"],"sources":["C:/Users/vanitas/node_modules/@wasm-audio-decoders/ogg-vorbis/src/OggVorbisDecoder.js"],"sourcesContent":["import { WASMAudioDecoderCommon } from \"@wasm-audio-decoders/common\";\nimport CodecParser, {\n  absoluteGranulePosition,\n  samples,\n  data,\n  codecFrames,\n  header,\n  vorbisComments,\n  vorbisSetup,\n  isLastPage,\n} from \"codec-parser\";\n\nimport EmscriptenWASM from \"./EmscriptenWasm.js\";\n\nexport function Decoder() {\n  // injects dependencies when running as a web worker\n  // async\n  this._init = () => {\n    return new this._WASMAudioDecoderCommon()\n      .instantiate(this._EmscriptenWASM, this._module)\n      .then((common) => {\n        this._common = common;\n\n        this._input = this._common.allocateTypedArray(\n          this._inputSize,\n          Uint8Array,\n        );\n\n        this._firstPage = true;\n        this._inputLen = this._common.allocateTypedArray(1, Uint32Array);\n\n        this._outputBufferPtr = this._common.allocateTypedArray(1, Uint32Array);\n        this._channels = this._common.allocateTypedArray(1, Uint32Array);\n        this._sampleRate = this._common.allocateTypedArray(1, Uint32Array);\n        this._samplesDecoded = this._common.allocateTypedArray(1, Uint32Array);\n\n        const maxErrors = 128 * 2;\n        this._errors = this._common.allocateTypedArray(maxErrors, Uint32Array);\n        this._errorsLength = this._common.allocateTypedArray(1, Int32Array);\n\n        this._frameNumber = 0;\n        this._inputBytes = 0;\n        this._outputSamples = 0;\n\n        this._decoder = this._common.wasm.create_decoder(\n          this._input.ptr,\n          this._inputLen.ptr,\n          this._outputBufferPtr.ptr,\n          this._channels.ptr,\n          this._sampleRate.ptr,\n          this._samplesDecoded.ptr,\n          this._errors.ptr,\n          this._errorsLength.ptr,\n          maxErrors,\n        );\n      });\n  };\n\n  Object.defineProperty(this, \"ready\", {\n    enumerable: true,\n    get: () => this._ready,\n  });\n\n  // async\n  this.reset = () => {\n    this.free();\n    return this._init();\n  };\n\n  this.free = () => {\n    this._common.wasm.destroy_decoder(this._decoder);\n    this._common.free();\n  };\n\n  this.sendSetupHeader = (data) => {\n    this._input.buf.set(data);\n    this._inputLen.buf[0] = data.length;\n\n    this._common.wasm.send_setup(this._decoder, this._firstPage);\n    this._firstPage = false;\n  };\n\n  this.initDsp = () => {\n    this._common.wasm.init_dsp(this._decoder);\n  };\n\n  this.decodePackets = (packets) => {\n    let outputBuffers = [],\n      outputSamples = 0,\n      errors = [];\n\n    for (let packetIdx = 0; packetIdx < packets.length; packetIdx++) {\n      const packet = packets[packetIdx];\n      this._input.buf.set(packet);\n      this._inputLen.buf[0] = packet.length;\n\n      this._common.wasm.decode_packets(this._decoder);\n\n      const samplesDecoded = this._samplesDecoded.buf[0];\n      const channels = [];\n\n      const outputBufferChannels = new Uint32Array(\n        this._common.wasm.HEAP,\n        this._outputBufferPtr.buf[0],\n        this._channels.buf[0],\n      );\n      for (let channel = 0; channel < this._channels.buf[0]; channel++) {\n        const output = new Float32Array(samplesDecoded);\n\n        if (samplesDecoded) {\n          output.set(\n            new Float32Array(\n              this._common.wasm.HEAP,\n              outputBufferChannels[channel],\n              samplesDecoded,\n            ),\n          );\n        }\n\n        channels.push(output);\n      }\n\n      outputBuffers.push(channels);\n      outputSamples += samplesDecoded;\n\n      this._frameNumber++;\n      this._inputBytes += packet.length;\n      this._outputSamples += samplesDecoded;\n\n      // handle any errors that may have occurred\n      for (let i = 0; i < this._errorsLength.buf; i += 2)\n        errors.push({\n          message:\n            this._common.codeToString(this._errors.buf[i]) +\n            \" \" +\n            this._common.codeToString(this._errors.buf[i + 1]),\n          frameLength: packet.length,\n          frameNumber: this._frameNumber,\n          inputBytes: this._inputBytes,\n          outputSamples: this._outputSamples,\n        });\n\n      // clear the error buffer\n      this._errorsLength.buf[0] = 0;\n    }\n\n    return this._WASMAudioDecoderCommon.getDecodedAudioMultiChannel(\n      errors,\n      outputBuffers,\n      this._channels.buf[0],\n      outputSamples,\n      this._sampleRate.buf[0],\n      16,\n    );\n  };\n\n  // injects dependencies when running as a web worker\n  this._isWebWorker = Decoder.isWebWorker;\n  this._WASMAudioDecoderCommon =\n    Decoder.WASMAudioDecoderCommon || WASMAudioDecoderCommon;\n  this._EmscriptenWASM = Decoder.EmscriptenWASM || EmscriptenWASM;\n  this._module = Decoder.module;\n\n  this._inputSize = 128 * 1024;\n\n  this._ready = this._init();\n\n  return this;\n}\n\nexport const setDecoderClass = Symbol();\n\nexport default class OggVorbisDecoder {\n  constructor() {\n    this._onCodec = (codec) => {\n      if (codec !== \"vorbis\")\n        throw new Error(\n          \"@wasm-audio-decoders/ogg-vorbis does not support this codec \" +\n            codec,\n        );\n    };\n\n    // instantiate to create static properties\n    new WASMAudioDecoderCommon();\n\n    this._init();\n    this[setDecoderClass](Decoder);\n  }\n\n  _init() {\n    this._vorbisSetupInProgress = true;\n    this._beginningSampleOffset = undefined;\n    this._codecParser = new CodecParser(\"audio/ogg\", {\n      onCodec: this._onCodec,\n      enableFrameCRC32: false,\n    });\n  }\n\n  [setDecoderClass](decoderClass) {\n    if (this._decoder) {\n      const oldDecoder = this._decoder;\n      oldDecoder.ready.then(() => oldDecoder.free());\n    }\n\n    this._decoder = new decoderClass();\n    this._ready = this._decoder.ready;\n  }\n\n  get ready() {\n    return this._ready;\n  }\n\n  async reset() {\n    this._init();\n    return this._decoder.reset();\n  }\n\n  free() {\n    this._decoder.free();\n  }\n\n  async decodeOggPages(oggPages) {\n    const packets = [];\n\n    for (let i = 0; i < oggPages.length; i++) {\n      const oggPage = oggPages[i];\n\n      if (this._vorbisSetupInProgress) {\n        if (oggPage[data][0] === 1) {\n          this._decoder.sendSetupHeader(oggPage[data]);\n        }\n\n        if (oggPage[codecFrames].length) {\n          const headerData = oggPage[codecFrames][0][header];\n\n          this._decoder.sendSetupHeader(headerData[vorbisComments]);\n          this._decoder.sendSetupHeader(headerData[vorbisSetup]);\n          this._decoder.initDsp();\n\n          this._vorbisSetupInProgress = false;\n        }\n      }\n\n      packets.push(...oggPage[codecFrames].map((f) => f[data]));\n    }\n\n    const decoded = await this._decoder.decodePackets(packets);\n\n    // in cases where BigInt isn't supported, don't do any absoluteGranulePosition logic (i.e. old iOS versions)\n    const oggPage = oggPages[oggPages.length - 1];\n    if (oggPages.length && Number(oggPage[absoluteGranulePosition]) > -1) {\n      if (this._beginningSampleOffset === undefined) {\n        this._beginningSampleOffset =\n          oggPage[absoluteGranulePosition] - BigInt(oggPage[samples]);\n      }\n\n      if (oggPage[isLastPage]) {\n        // trim any extra samples that are decoded beyond the absoluteGranulePosition, relative to where we started in the stream\n        const samplesToTrim =\n          decoded.samplesDecoded - Number(oggPage[absoluteGranulePosition]);\n\n        if (samplesToTrim > 0) {\n          for (let i = 0; i < decoded.channelData.length; i++)\n            decoded.channelData[i] = decoded.channelData[i].subarray(\n              0,\n              decoded.samplesDecoded - samplesToTrim,\n            );\n\n          decoded.samplesDecoded -= samplesToTrim;\n        }\n      }\n    }\n\n    return decoded;\n  }\n\n  async decode(vorbisData) {\n    return this.decodeOggPages([...this._codecParser.parseChunk(vorbisData)]);\n  }\n\n  async flush() {\n    const decoded = this.decodeOggPages([...this._codecParser.flush()]);\n\n    await this.reset();\n    return decoded;\n  }\n\n  async decodeFile(vorbisData) {\n    const decoded = this.decodeOggPages([\n      ...this._codecParser.parseAll(vorbisData),\n    ]);\n\n    await this.reset();\n    return decoded;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}